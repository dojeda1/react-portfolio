{"version":3,"sources":["images/D_logo_final.png","images/github-logo.png","files/dro_resume.pdf","images/trivia-game/trivia-results.jpg","images/d-logo.png","images/linkedin-logo.png","images/resume-logo.png","images/trees2.jpg","images/meal-planner/meal-planner-mockup.png","images/meal-planner/meal-planner-paint.png","images/meal-planner/meal-planner-search.jpg","images/meal-planner/meal-planner-fav.jpg","images/meal-planner/meal-planner-cal.jpg","images/wizard-words/wizard-words-mockup.png","images/wizard-words/wizard-words-paint.png","images/wizard-words/wizard-words-guess.jpg","images/wizard-words/wizard-words-lose.jpg","images/wizard-words/wizard-words-win.jpg","images/scifi-rpg/scifi-rpg-mockup.png","images/scifi-rpg/scifi-rpg-paint.png","images/scifi-rpg/scifi-rpg-lose.jpg","images/scifi-rpg/scifi-rpg-win.jpg","images/scifi-rpg/scifi-rpg-fight.jpg","images/socrates/socrates-mockup.png","images/socrates/socrates-paint.png","images/socrates/socrates-prompt.jpg","images/socrates/socrates-results.jpg","images/socrates/socrates-choices.jpg","images/trivia-game/trivia-mockup.png","images/trivia-game/trivia-paint.png","images/trivia-game/trivia-start.jpg","images/fur-butlr/fur-butlr-mockup.png","images/fur-butlr/fur-butlr-paint.png","images/fur-butlr/fur-butlr-results.jpg","images/fur-butlr/fur-butlr-update.jpg","images/fur-butlr/fur-butlr-profile.jpg","images/bug-memory/bug-memory-mockup.png","images/bug-memory/bug-memory-paint.png","images/bug-memory/bug-memory-win.jpg","images/bug-memory/bug-memory-lose.jpg","images/bug-memory/bug-memory-cards.jpg","images/book-finder/book-finder-mockup.png","images/book-finder/book-finder-paint.png","images/book-finder/book-finder-home.jpg","images/book-finder/book-finder-results.jpg","images/book-finder/book-finder-saved.jpg","images/tool-logos/html-logo.png","images/tool-logos/css-logo.png","images/tool-logos/js-logo.png","images/tool-logos/jquery-logo.png","images/tool-logos/node-logo.png","images/tool-logos/react-logo.png","images/tool-logos/mysql-logo.png","images/tool-logos/mongodb-logo.png","images/tool-logos/bootstrap-logo.png","images/tool-logos/materialize-logo.png","images/tool-logos/ps-logo.png","images/tool-logos/illustrator-logo.png","images/tree-logo.png","images/space-logo.png","images/art-logo.png","images/game-logo.png","components/Nav/index.js","components/Parallax/index.js","components/Portfolio/index.js","components/About/index.js","components/Contact/index.js","components/Footer/index.js","components/Game/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","toggleGame","_this","props","playingGame","startGame","endGame","M","AutoInit","console","log","this","react_default","a","createElement","id","className","href","data-target","src","DLogo","alt","Resume","target","onClick","bind","Component","Parallax","DLogoWhite","LinkedinLogo","GitHubLogo","ResumeLogo","TreeBG","Portfolio","state","currentProject","currentList","allProjects","title","mockup","MealPlannerMockup","paint","MealPlannerPaint","img1","MealPlannerImg1","img2","MealPlannerImg2","img3","MealPlannerImg3","visit","code","sum","list","WizardWordsMockup","WizardWordsPaint","WizardWordsImg1","WizardWordsImg2","WizardWordsImg3","ScifiRpgMockup","ScifiRpgPaint","ScifiRpgImg1","ScifiRpgImg2","ScifiRpgImg3","SocratesMockup","SocratesPaint","SocratesImg1","SocratesImg2","SocratesImg3","TriviaMockup","TriviaPaint","TriviaImg1","TriviaImg2","TriviaImg3","FurButlrMockup","FurButlrPaint","FurButlrImg1","FurButlrImg2","FurButlrImg3","BugMemoryMockup","BugMemoryPaint","BugMemoryImg1","BugMemoryImg2","BugMemoryImg3","BookFinderMockup","BookFinderPaint","BookFinderImg1","BookFinderImg2","BookFinderImg3","handleSelect","event","tag","currentTarget","dataset","setState","_this2","type","name","join","map","project","index","key","data-tag","About","handleRotate","logo","classList","contains","remove","add","setTimeout","HtmlLogo","CssLogo","JsLogo","JQueryLogo","ReactLogo","NodeLogo","MySqlLogo","MongoDbLogo","BootstrapLogo","MaterializeLogo","PhotoshopLogo","IllustratorLogo","TreeLogo","SpaceLogo","ArtLogo","GameLogo","email","message","handleInputChange","_event$target","value","Object","defineProperty","handleSubmit","preventDefault","alert","trim","bottle","document","getElementById","reset","onSubmit","onChange","htmlFor","messages","Footer","Game","messageSub","infoText","region","regions","location","task","step","inputName","movingForward","player","playerDefault","currentEnemy","quests","tavernQuests","merchant","dungeonCount","meadCount","showSave","showStats","showQuests","changePlayStates","randNum","x","y","Math","floor","random","aOrAn","word","firstLetter","charAt","atkText","attacker","attackMessage","text","push","berserkCount","isBerserk","gameOverCheck","handleCheck","hasItem","inventory","itemName","inInventory","forEach","element","addItem","array","item","newItem","order","qty","buy","sell","info","sort","b","orderA","orderB","comparison","fetchQuestCheck","removeItem","i","splice","transferItem","fromArr","toArr","addQuest","newQuest","amount","reward","count","goal","rarity","itemIndex","completed","removeQuest","hasRegionQuest","hasQuest","quest","selectExit","loadGame","newGame","handleName","newName","toUpperCase","slice","objectSpread","selectRace","maxHpA","maxMpA","strengthA","defenseA","manaA","speedA","luckA","newPlayer","race","maxHp","hp","maxMp","mp","strength","defense","mana","speed","luck","selectClass","special1A","special2A","special1CostA","special2CostA","class","special1","special2","special1Cost","special2Cost","items1","selectToWild","selectUseItem","useMessage","length","subMessage","selectItem","getAttribute","includes","activateItem","buyItem","shop","price","gold","sellItem","parseInt","showItemInfo","showItemPrice","shopWord","cost","showSelectItem","user","opponent","enemyTurn","goToTown","randItem","randQuest","questArr","items2","items3","quests1","quests2","quests3","selectToInn","level","selectToTown","monsterEncounter","selectYesInn","selectNoInn","selectToShop","selectBuy","shopMessage","selectSell","selectToTavern","selectGrabMead","selectYesMead","meadNum","selectNoMead","selectGetQuest","selectYesQuest","selectNoQuest","selectCashQuest","selectRedeemReward","totalGold","totalQuests","itemArray","selectAbandonQuest","killQuestCheck","enemyName","playerQuests","selectExplore","exploreCheck","chestEncounter","dungeonEncounter","selectVentureDeeper","dungeonGoal","bossEncounter","viciousEncounter","selectNext","selectBack","selectLeaveDungeon","selectTravelForward","travelForwardSuccess","selectTravelBackward","addEnemyItems","enemy","alternateMessage","rangeNum","playerLevel","regionIndex","monsterArray","regionLevel","regionTarget","targetLevel","monsters1","monsters2","monsters3","ceil","monNum","newEnemy","xp","isDead","bosses1","bosses2","bosses3","mimicEncounter","selectYesChest","goldNum","itemNum","uncommonCheck","selectYesDungeon","selectAttack","attack","totalKills","dropGold","dropLoot","gainXp","totalDungeons","selectSpecial","specialCost","specialName","special","defender","damage","berserkNum","berserkAtkHold","criticalCheck","luckCheck","speedCheck","selectReset","xpNum","xpResult","levelUpCheck","nextLevel","selectRun","lostGold","lostHp","goldResult","playerStyle","playerHpStyle","playerMpStyle","playerXpStyle","playerGoldStyle","enemyStyle","enemyHpStyle","specialBtnStyle1","specialBtnStyle2","saveGame","data-index","data-info","onMouseOver","onMouseOut","data-type","data-task","data-goal","data-amount","data-reward","data-rarity","data-item","data-cost","data-price","App","components_Game","components_Nav","components_Parallax","components_Portfolio","components_About","Contact","components_Footer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6dAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2nBCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,08CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAA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","file":"static/js/main.bef8b983.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/D_logo_final.9f1dd4e1.png\";","module.exports = __webpack_public_path__ + \"static/media/github-logo.7ecca126.png\";","module.exports = __webpack_public_path__ + \"static/media/dro_resume.187be2f5.pdf\";","module.exports = __webpack_public_path__ + \"static/media/trivia-results.add4377a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/d-logo.52a198ab.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-logo.5aafb28a.png\";","module.exports = __webpack_public_path__ + \"static/media/resume-logo.28437f26.png\";","module.exports = __webpack_public_path__ + \"static/media/trees2.76798ba3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-mockup.ccd8c867.png\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-paint.07001928.png\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-search.4a5f0a05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-fav.83769f82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-cal.d74fbff0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-mockup.a61118bf.png\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-paint.d90a11cc.png\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-guess.42c2dd82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-lose.8ebe3bb9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-win.51c82111.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-mockup.f8cfa65d.png\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-paint.afa98680.png\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-lose.94f981b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-win.3dad5cad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-fight.641725b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/socrates-mockup.35e858bb.png\";","module.exports = __webpack_public_path__ + \"static/media/socrates-paint.e1e37cbd.png\";","module.exports = __webpack_public_path__ + \"static/media/socrates-prompt.d2d426aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/socrates-results.a9846962.jpg\";","module.exports = __webpack_public_path__ + \"static/media/socrates-choices.24a5cbba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trivia-mockup.df491a11.png\";","module.exports = __webpack_public_path__ + \"static/media/trivia-paint.0527b8fc.png\";","module.exports = __webpack_public_path__ + \"static/media/trivia-start.0e7576b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-mockup.a24c176b.png\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-paint.212fb7d9.png\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-results.522b17e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-update.542d1b09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-profile.79743574.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-mockup.396bff88.png\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-paint.e4c2a1cf.png\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-win.b12f599f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-lose.15972da2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-cards.865ba044.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-mockup.56ec7fbb.png\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-paint.21774f90.png\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-home.d0d64511.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-results.7cb6ad7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-saved.22bf6861.jpg\";","module.exports = __webpack_public_path__ + \"static/media/html-logo.9a353053.png\";","module.exports = __webpack_public_path__ + \"static/media/css-logo.ecef881f.png\";","module.exports = __webpack_public_path__ + \"static/media/js-logo.b17e547e.png\";","module.exports = __webpack_public_path__ + \"static/media/jquery-logo.1c56ac0e.png\";","module.exports = __webpack_public_path__ + \"static/media/node-logo.1cff54b2.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.6e4fe0da.png\";","module.exports = __webpack_public_path__ + \"static/media/mysql-logo.513fc359.png\";","module.exports = __webpack_public_path__ + \"static/media/mongodb-logo.b5e47b24.png\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap-logo.b20fc95b.png\";","module.exports = __webpack_public_path__ + \"static/media/materialize-logo.81f16883.png\";","module.exports = __webpack_public_path__ + \"static/media/ps-logo.3c143691.png\";","module.exports = __webpack_public_path__ + \"static/media/illustrator-logo.e1d9f82b.png\";","module.exports = __webpack_public_path__ + \"static/media/tree-logo.a05206d2.png\";","module.exports = __webpack_public_path__ + \"static/media/space-logo.4e1f3f0c.png\";","module.exports = __webpack_public_path__ + \"static/media/art-logo.94f71ff5.png\";","module.exports = __webpack_public_path__ + \"static/media/game-logo.0f10e6f1.png\";","import React, { Component } from \"react\";\r\nimport M from 'materialize-css';\r\nimport DLogo from \"../../images/D_logo_final.png\"\r\nimport Resume from \"../../files/dro_resume.pdf\"\r\n\r\nclass Nav extends Component {\r\n\r\n    componentDidMount() {\r\n        //Auto initialize all materialize components\r\n        M.AutoInit();\r\n    }\r\n\r\n    toggleGame = () => {\r\n        if (this.props.playingGame === false) {\r\n            this.props.startGame();\r\n        } else {\r\n            this.props.endGame();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const code = \"< / >\"\r\n        console.log(this.props.playingGame);\r\n        return (\r\n            <div>\r\n                {/* <!-- TOP NAVBAR --> */}\r\n                <div id=\"top-nav-container\" className=\"navbar-fixed\">\r\n                    <nav id=\"top-nav\" className=\"nav-wrapper navbar-fixed grey darken-4\">\r\n\r\n                        <div className=\"container\">\r\n                            <a href=\"#!\" className=\"sidenav-trigger left\" data-target=\"side-modal\">\r\n                                <i className=\"material-icons\">menu</i>\r\n                            </a>\r\n\r\n                            <a href=\"/\" className=\"brand-logo\">\r\n                                <img src={DLogo} id=\"logo-top\" className=\"left valign-wrapper\" alt=\"D Logo\" />\r\n                            </a>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                {/* <!-- Modal side navbar --> */}\r\n                <ul id=\"side-modal\" className=\"sidenav center-align font1\">\r\n                    <li>\r\n                        <a href=\"#portfolio\" className=\"white-text\">Portfolio</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#about\" className=\"white-text\">About</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#contact\" className=\"white-text\">Contact</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href={Resume} target=\"blank\" className=\"white-text\">Resume</a>\r\n                    </li>\r\n                    <li>\r\n                        <a className=\"lime-text\" onClick={this.toggleGame.bind(this)}>{code}</a>\r\n                    </li>\r\n                </ul>\r\n                {/* <!-- End NavBar --> */}\r\n\r\n                {/* <!-- LEFT MAIN SIDEBAR\t --> */}\r\n                <ul id=\"side-nav\" className=\"sidenav sidenav-fixed grey darken-4 center-align z-depth-0 font1\">\r\n                    <li>\r\n                        <a id=\"logo-side-a\" href=\"\">\r\n                            <img id=\"logo-side\" src={DLogo} alt=\"D Logo\" />\r\n                        </a>\r\n                    </li>\r\n                    <div className=\"table-of-contents\">\r\n                        <li>\r\n                            <a href=\"#portfolio\" className=\"white-text\">Portfolio</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#about\" className=\"white-text\">About</a>\r\n                        </li >\r\n                        <li>\r\n                            <a href=\"#contact\" className=\"white-text\">Contact</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href={Resume} target=\"blank\" className=\"white-text\">Resume</a>\r\n                        </li>\r\n                        <li>\r\n                            <a className=\"grey-text\" onClick={this.toggleGame.bind(this)}>{code}</a>\r\n                        </li>\r\n                    </div>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Nav;","import React from \"react\";\r\nimport DLogoWhite from \"../../images/d-logo.png\"\r\nimport LinkedinLogo from \"../../images/linkedin-logo.png\"\r\nimport GitHubLogo from \"../../images/github-logo.png\"\r\nimport ResumeLogo from \"../../images/resume-logo.png\"\r\nimport TreeBG from \"../../images/trees2.jpg\"\r\nimport Resume from \"../../files/dro_resume.pdf\"\r\n\r\nfunction Parallax() {\r\n\r\n    return (\r\n        < div className=\"parallax-container center valign-wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 white-text\">\r\n                        <img className=\"logo-pic\" src={DLogoWhite} alt=\"D Logo\" />\r\n                        <h1 className=\"white-text font2\">DOMINIC OJEDA</h1>\r\n                        <h5 className=\"font1\">Full Stack Web Developer</h5>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col s12 center-align\">\r\n                        <a href=\"https://www.linkedin.com/in/dominic-ojeda/\" target=\"blank\">\r\n                            <img src={LinkedinLogo} alt=\"Linkedin Logo\" className=\"logo-link\" />\r\n                        </a>\r\n                        <a href=\"https://github.com/dojeda1\" target=\"blank\">\r\n                            <img src={GitHubLogo} alt=\"GitHub Logo\" className=\"logo-link\" />\r\n                        </a>\r\n                        <a href={Resume} target=\"blank\">\r\n                            <img src={ResumeLogo} alt=\"Resume Logo\" className=\"logo-link\" />\r\n                        </a>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"parallax\">\r\n                <img id=\"para-pic\" src={TreeBG} alt=\"\" />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Parallax;","import React, { Component } from \"react\";\r\n// import M from 'materialize-css';\r\n\r\nimport MealPlannerMockup from \"../../images/meal-planner/meal-planner-mockup.png\"\r\nimport MealPlannerPaint from \"../../images/meal-planner/meal-planner-paint.png\"\r\nimport MealPlannerImg1 from \"../../images/meal-planner/meal-planner-search.jpg\"\r\nimport MealPlannerImg2 from \"../../images/meal-planner/meal-planner-fav.jpg\"\r\nimport MealPlannerImg3 from \"../../images/meal-planner/meal-planner-cal.jpg\"\r\n\r\nimport WizardWordsMockup from \"../../images/wizard-words/wizard-words-mockup.png\"\r\nimport WizardWordsPaint from \"../../images/wizard-words/wizard-words-paint.png\"\r\nimport WizardWordsImg1 from \"../../images/wizard-words/wizard-words-guess.jpg\"\r\nimport WizardWordsImg2 from \"../../images/wizard-words/wizard-words-lose.jpg\"\r\nimport WizardWordsImg3 from \"../../images/wizard-words/wizard-words-win.jpg\"\r\n\r\nimport ScifiRpgMockup from \"../../images/scifi-rpg/scifi-rpg-mockup.png\"\r\nimport ScifiRpgPaint from \"../../images/scifi-rpg/scifi-rpg-paint.png\"\r\nimport ScifiRpgImg1 from \"../../images/scifi-rpg/scifi-rpg-lose.jpg\"\r\nimport ScifiRpgImg2 from \"../../images/scifi-rpg/scifi-rpg-win.jpg\"\r\nimport ScifiRpgImg3 from \"../../images/scifi-rpg/scifi-rpg-fight.jpg\"\r\n\r\nimport SocratesMockup from \"../../images/socrates/socrates-mockup.png\"\r\nimport SocratesPaint from \"../../images/socrates/socrates-paint.png\"\r\nimport SocratesImg1 from \"../../images/socrates/socrates-prompt.jpg\"\r\nimport SocratesImg2 from \"../../images/socrates/socrates-results.jpg\"\r\nimport SocratesImg3 from \"../../images/socrates/socrates-choices.jpg\"\r\n\r\nimport TriviaMockup from \"../../images/trivia-game/trivia-mockup.png\"\r\nimport TriviaPaint from \"../../images/trivia-game/trivia-paint.png\"\r\nimport TriviaImg1 from \"../../images/trivia-game/trivia-results.jpg\"\r\nimport TriviaImg2 from \"../../images/trivia-game/trivia-start.jpg\"\r\nimport TriviaImg3 from \"../../images/trivia-game/trivia-results.jpg\"\r\n\r\nimport FurButlrMockup from \"../../images/fur-butlr/fur-butlr-mockup.png\"\r\nimport FurButlrPaint from \"../../images/fur-butlr/fur-butlr-paint.png\"\r\nimport FurButlrImg1 from \"../../images/fur-butlr/fur-butlr-results.jpg\"\r\nimport FurButlrImg2 from \"../../images/fur-butlr/fur-butlr-update.jpg\"\r\nimport FurButlrImg3 from \"../../images/fur-butlr/fur-butlr-profile.jpg\"\r\n\r\nimport BugMemoryMockup from \"../../images/bug-memory/bug-memory-mockup.png\"\r\nimport BugMemoryPaint from \"../../images/bug-memory/bug-memory-paint.png\"\r\nimport BugMemoryImg1 from \"../../images/bug-memory/bug-memory-win.jpg\"\r\nimport BugMemoryImg2 from \"../../images/bug-memory/bug-memory-lose.jpg\"\r\nimport BugMemoryImg3 from \"../../images/bug-memory/bug-memory-cards.jpg\"\r\n\r\nimport BookFinderMockup from \"../../images/book-finder/book-finder-mockup.png\"\r\nimport BookFinderPaint from \"../../images/book-finder/book-finder-paint.png\"\r\nimport BookFinderImg1 from \"../../images/book-finder/book-finder-home.jpg\"\r\nimport BookFinderImg2 from \"../../images/book-finder/book-finder-results.jpg\"\r\nimport BookFinderImg3 from \"../../images/book-finder/book-finder-saved.jpg\"\r\n\r\nclass Portfolio extends Component {\r\n    state = {\r\n        currentProject: {},\r\n        currentList: [],\r\n        allProjects: [\r\n            {\r\n                title: \"Meal Planner\",\r\n                mockup: MealPlannerMockup,\r\n                paint: MealPlannerPaint,\r\n                img1: MealPlannerImg1,\r\n                img2: MealPlannerImg2,\r\n                img3: MealPlannerImg3,\r\n                visit: \"https://stephanfalcon.github.io/PlusUltraProject/\",\r\n                code: \"https://github.com/stephanfalcon/PlusUltraProject\",\r\n                sum: \"Using the Spoonacular API, Meal Planner allows you to look up recipes with optional dietary restrictions and save them to your favorites. You can view recipe cards to see a meal's ingredients and instructions. From the Calendar page, you can choose any recipe from your favorites, add it to a meal period on your weekly calendar, and save the plan for later. Both the favorites and the weekly meal plan are stored using Firebase's realtime database.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Materialize\", \"Firebase\", \"Spoonacular API\", \"Heal Thru Words API\"]\r\n            }, {\r\n                title: \"Wizard Words\",\r\n                mockup: WizardWordsMockup,\r\n                paint: WizardWordsPaint,\r\n                img1: WizardWordsImg1,\r\n                img2: WizardWordsImg2,\r\n                img3: WizardWordsImg3,\r\n                visit: \"https://dojeda1.github.io/Word-Guess-Game/\",\r\n                code: \"https://github.com/dojeda1/Word-Guess-Game\",\r\n                sum: \"This version of the traditional Hangman game is fashioned after the wizarding world of Harry Potter. The game displays what letters you have previously guessed, how many guesses you have left, as well as your wins and losses. The design was inspired by the Marauder's Map and uses jQuery for a number of cool fade-in and fade-out animations.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Bootstrap\"]\r\n            }, {\r\n                title: \"Sci-fi RPG\",\r\n                mockup: ScifiRpgMockup,\r\n                paint: ScifiRpgPaint,\r\n                img1: ScifiRpgImg1,\r\n                img2: ScifiRpgImg2,\r\n                img3: ScifiRpgImg3,\r\n                visit: \"https://dojeda1.github.io/Space-RPG-Game/\",\r\n                code: \"https://github.com/dojeda1/Space-RPG-Game\",\r\n                sum: \"Choose one of 4 classic Sci-fi characters to play as and try to defeat all of the remaining opponents. Each character has different health, strength, and leveling up stats and you must choose defenders in particular orders to obtain victory.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Bootstrap\"]\r\n            }, {\r\n                title: \"Trial of Socrates\",\r\n                mockup: SocratesMockup,\r\n                paint: SocratesPaint,\r\n                img1: SocratesImg1,\r\n                img2: SocratesImg2,\r\n                img3: SocratesImg3,\r\n                visit: \"https://dojeda1.github.io/Socrates-Game/\",\r\n                code: \"https://github.com/dojeda1/Socrates-Game\",\r\n                sum: \"This is a text based adventure game inspired by the ancient tale of when Socrates was sentenced to death by a jury of his fellow Athenians. Playing as the philosopher himself, you make branching choices powered by IF/ELSE functions in JavaScript that lead to alternate endings. The goal is to find the historical ending or simply explore alternate timelines. \",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Bootstrap\"]\r\n            }, {\r\n                title: \"Trivia Game\",\r\n                mockup: TriviaMockup,\r\n                paint: TriviaPaint,\r\n                img1: TriviaImg1,\r\n                img2: TriviaImg2,\r\n                img3: TriviaImg3,\r\n                visit: \"https://dojeda1.github.io/TriviaGame/\",\r\n                code: \"https://github.com/dojeda1/TriviaGame\",\r\n                sum: \"Test your knowledge of both the metric and imperial units of measurement. Each question is timed and will move onto the next if left unanswered. After each question, a fun GIF is briefly displayed according to whether or not you were correct. At the end of the game, the number of right, wrong, and unanswered responses is displayed along side your overall score. Your high scores are also shown at the bottom of the results page.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Bootstrap\"]\r\n            }, {\r\n                title: \"Fur Butlr\",\r\n                mockup: FurButlrMockup,\r\n                paint: FurButlrPaint,\r\n                img1: FurButlrImg1,\r\n                img2: FurButlrImg2,\r\n                img3: FurButlrImg3,\r\n                visit: \"https://fur-butlr-app.herokuapp.com/\",\r\n                code: \"https://github.com/ApexPanda/FurButler\",\r\n                sum: \"A place where pet owners can meet each other and search for pet services like walkers, groomers or sitters. Fur Butlr lets you create a profile, login in, edit your page, and show off your pets.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Materialize\", \"MySQL\", \"Node.js\", \"Sequelize\"]\r\n            }, {\r\n                title: \"Bug Memory\",\r\n                mockup: BugMemoryMockup,\r\n                paint: BugMemoryPaint,\r\n                img1: BugMemoryImg1,\r\n                img2: BugMemoryImg2,\r\n                img3: BugMemoryImg3,\r\n                visit: \"https://memory-game-react-click.herokuapp.com/\",\r\n                code: \"https://github.com/dojeda1/memory-game\",\r\n                sum: \"Test your memory by selecting every bug card without choosing the same one twice. Each time one is chosen, the game will shuffle the cards and display them in a random order using REACT. If you select the same bug twice, you lose!\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"Bootstrap\", \"React.js\", \"Node.js\"]\r\n            }, {\r\n                title: \"Book Finder\",\r\n                mockup: BookFinderMockup,\r\n                paint: BookFinderPaint,\r\n                img1: BookFinderImg1,\r\n                img2: BookFinderImg2,\r\n                img3: BookFinderImg3,\r\n                visit: \"https://google-books-mern.herokuapp.com/\",\r\n                code: \"https://github.com/dojeda1/book-search\",\r\n                sum: \"Search through a large database of books with the help of the Google Books API. User inputs the title of a book and results are displayed below. They can then visit the google URL, save the book in a MongoDB database for later, or delete it from saved books.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"React.js\", \"MongoDB\", \"Mongoose\", \"Google Books API\"]\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ currentProject: this.state.allProjects[0], currentList: this.state.allProjects[0].list })\r\n        // M.AutoInit();\r\n    }\r\n\r\n    handleSelect = (event) => {\r\n\r\n        let tag = event.currentTarget.dataset.tag;\r\n        console.log(tag);\r\n        this.setState({ currentProject: this.state.allProjects[tag], currentList: this.state.allProjects[tag].list })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div id=\"portfolio\" className=\"scrollspy\">\r\n\r\n                <div className=\" row grey darken-4 z-depth-1\">\r\n\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4 className=\"dom-green1-text font1\">Portfolio</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <h5 className=\"dom-green1-text font2\">Project Summary</h5>\r\n                            <div className=\"divider\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col m12 l8\">\r\n                            <h5 id=\"p-title\" className=\"font1\">{this.state.currentProject.title}</h5>\r\n                            <img id=\"p-mockup\" src={this.state.currentProject.mockup} alt=\"Mockup\" />\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"col s12 left-align\">\r\n                                    <a id=\"p-visit-btn\" href={this.state.currentProject.visit} target=\"blank\">\r\n                                        <button className=\"btn portfolio-btn waves-effect waves-light dom-green1 font2\" type=\"button\" name=\"action\">\r\n                                            Visit<i className=\"material-icons right\">public</i>\r\n                                        </button>\r\n                                    </a>\r\n\r\n                                    <a id=\"p-code-btn\" href={this.state.currentProject.code} target=\"blank\">\r\n                                        <button className=\"btn portfolio-btn waves-effect waves-light dom-green1-dark font2\" type=\"button\" name=\"action\">\r\n                                            Code<i className=\"material-icons right\">code</i>\r\n                                        </button>\r\n                                    </a>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col m12 l4\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col s12 m8 l12\">\r\n                                    <h6 className=\"font1 dom-green1-text\">- About the Project -</h6>\r\n                                    <p id=\"p-about\">{this.state.currentProject.sum}</p>\r\n                                </div>\r\n                                <div className=\"col s12 m4 l12\">\r\n                                    <h6 className=\"font1 dom-green1-text\">- Made With -</h6>\r\n                                    <ul id=\"p-list\" className=\"grey-text\">\r\n                                        {(this.state.currentList).join(\", \")}\r\n                                    </ul>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div id=\"info-pics\" className=\"row\">\r\n\r\n                        <div id=\"move\" className=\"col s12 m4\">\r\n                            <div className=\"col s12\">\r\n                                <div className=\"row\"><img id=\"p-img-1\" src={this.state.currentProject.img1} alt=\"Screenshot 1\" className=\"z-depth-2 materialboxed\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"col s12\">\r\n                                <div className=\"row\"><img id=\"p-img-2\" src={this.state.currentProject.img2} alt=\"Screenshot 2\" className=\"z-depth-2 materialboxed\" /></div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col s12 m8\"><img id=\"p-img-3\" src={this.state.currentProject.img3} alt=\"Screenshot 3\" className=\"z-depth-2 materialboxed\" /></div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    </div>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                    {/* Selection carousel */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <h5 className=\"dom-green1-text font2 center-align\">Select a Project</h5>\r\n                            <div className=\"divider\" />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"carousel center-align\">\r\n\r\n                        {this.state.allProjects.map((project, index) => (\r\n                            <button key={index} className=\"carousel-item\" data-tag={index} onClick={this.handleSelect}>\r\n                                <img className=\"paint-pic\" src={project.paint} alt=\"Project\" />\r\n                                <h6 className=\"black-text font2\">{project.title}</h6>\r\n                            </button>\r\n                        ))}\r\n\r\n                    </div>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from \"react\";\r\nimport HtmlLogo from \"../../images/tool-logos/html-logo.png\"\r\nimport CssLogo from \"../../images/tool-logos/css-logo.png\"\r\nimport JsLogo from \"../../images/tool-logos/js-logo.png\"\r\nimport JQueryLogo from \"../../images/tool-logos/jquery-logo.png\"\r\nimport NodeLogo from \"../../images/tool-logos/node-logo.png\"\r\nimport ReactLogo from \"../../images/tool-logos/react-logo.png\"\r\nimport MySqlLogo from \"../../images/tool-logos/mysql-logo.png\"\r\nimport MongoDbLogo from \"../../images/tool-logos/mongodb-logo.png\"\r\nimport BootstrapLogo from \"../../images/tool-logos/bootstrap-logo.png\"\r\nimport MaterializeLogo from \"../../images/tool-logos/materialize-logo.png\"\r\nimport PhotoshopLogo from \"../../images/tool-logos/ps-logo.png\"\r\nimport IllustratorLogo from \"../../images/tool-logos/illustrator-logo.png\"\r\n\r\nimport TreeLogo from \"../../images/tree-logo.png\"\r\nimport SpaceLogo from \"../../images/space-logo.png\"\r\nimport ArtLogo from \"../../images/art-logo.png\"\r\nimport GameLogo from \"../../images/game-logo.png\"\r\n\r\nclass About extends Component {\r\n\r\n    handleRotate = (event) => {\r\n\r\n        const logo = event.target;\r\n        if (logo.classList.contains(\"rotate\")) {\r\n            logo.classList.remove(\"rotate\");\r\n        } else {\r\n            logo.classList.add(\"rotate\");\r\n            setTimeout(function () {\r\n                logo.classList.remove(\"rotate\");\r\n            }, 801);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            < div id=\"about\" className=\"scrollspy\" >\r\n                <div className=\"row grey darken-4 z-depth-1\">\r\n\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4 className=\"dom-green2-text font1\">About</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m8\">\r\n                            <h5 className=\"dom-green2-text font2\">Summary</h5>\r\n\r\n                            <div className=\"divider\" />\r\n\r\n                            <div className=\"\">\r\n                                <p> I am a web developer who enjoys coding on both front-end and back-end. Experience\r\n                                producing web\r\n                                applications with HTML, CSS, and JavaScript and creating visual elements with Photoshop\r\n                                and Illustrator. I have a passion for making programs that are visually appealing and\r\n                                fun to interact with. I enjoy solving problems creatively and I am always determined to\r\n                                try again and again until the vision becomes reality. I believe clear communication is\r\n                                key to completing any project, and I work well in a team or going at it alone. I know\r\n                                that the right\r\n                                code can solve any problem.</p>\r\n                                <br />\r\n                                <p></p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col s12 m4\">\r\n                            <h5 className=\"dom-green2-text font2\">My Tool Belt</h5>\r\n\r\n                            <div className=\"divider\" />\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={HtmlLogo} alt=\"HTML Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={CssLogo} alt=\"CSS Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={JsLogo} alt=\"JavaScript Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={JQueryLogo} alt=\"jQuery Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={ReactLogo} alt=\"React Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={NodeLogo} alt=\"Node Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={MySqlLogo} alt=\"MySQL Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={MongoDbLogo} alt=\"MongoDB Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={BootstrapLogo} alt=\"Bootstrap Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={MaterializeLogo} alt=\"MongoDB Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={PhotoshopLogo} alt=\"Photoshop Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={IllustratorLogo} alt=\"Illustrator Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <h5 className=\"dom-green2-text font2\">My Interests</h5>\r\n\r\n                            <div className=\"divider\" />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col s6 m6 l3 center-align\">\r\n                                <img className=\"int-logo bulge\" src={TreeLogo} alt=\"Tree Logo\" onClick={this.handleRotate} />\r\n\r\n                                <p>Nature is incredible. The trees, rocks, and rivers give us everything we need for life.\r\n                                Being outdoors, taking in the fresh air and looking at all the\r\n                                wonder this world has to offer can always give me sense of peace and purpose.</p>\r\n                            </div>\r\n\r\n                            <div className=\"col s6 m6 l3 center-align\">\r\n                                <img className=\"int-logo bulge\" src={SpaceLogo} alt=\"Space Logo\" onClick={this.handleRotate} />\r\n                                <p>The vastness of the universe forever leaves me in awe. I love learning about the planets\r\n                                and stars, and how they all mesh together to form the cosmos. There is so much we\r\n                                don't yet know, and that's part of what makes it so exciting.</p>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col s6 m6 l3 center-align\">\r\n                                <img className=\"int-logo bulge\" src={ArtLogo} alt=\"Art Logo\" onClick={this.handleRotate} />\r\n                                <p>Art has always been one of my great loves. I enjoy creating characters, concept art, and\r\n                                logo designs using both traditional and digital\r\n                                medium. Many hours have been spent huddled over my desk working on my next piece.</p>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col s6 m6 l3 center-align\">\r\n                                <img className=\"int-logo bulge\" src={GameLogo} alt=\"Game Logo\" onClick={this.handleRotate} />\r\n                                <p>Playing or creating games is always a good time. It's so much fun to go on adventures,\r\n                                explore new worlds,\r\n                                or reach that new high score. My favorite games include Gears of War, Final\r\n                                Fantasy, and Super Smash Bros.</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"spacer\" />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        message: \"\"\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { value, name } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.name === \"\" || this.state.email === \"\" || this.state.message === \"\") {\r\n            alert(\"Please fill out all forms.\");\r\n        } else {\r\n            this.setState({\r\n                name: this.state.name.trim(),\r\n                email: this.state.email.trim(),\r\n                message: this.state.message.trim()\r\n            });\r\n\r\n            let bottle = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                message: this.state.message\r\n            };\r\n\r\n            console.log(bottle);\r\n\r\n            this.setState({\r\n                name: \"\",\r\n                email: \"\",\r\n                message: \"\"\r\n            });\r\n\r\n            document.getElementById('contact-form').reset();\r\n            alert(\"Message Sent!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"contact\" className=\"scrollspy\">\r\n                <div className=\"row grey darken-4 z-depth-1\">\r\n\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4 className=\"dom-blue-text font1\">Contact</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <h5 className=\"dom-blue-text font2\">Send me a message</h5>\r\n\r\n                            <div className=\"divider\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m7 l8\">\r\n\r\n                            <form id=\"contact-form\" onSubmit={this.handleSubmit}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input type=\"text\" className=\"form-input\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} />\r\n                                        <label htmlFor=\"name\" className=\"font1\">Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input type=\"email\" className=\"form-input\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} />\r\n                                        <label htmlFor=\"email\" className=\"font1\">Email</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <textarea id=\"message\" className=\"materialize-textarea\" name=\"message\" value={this.state.messages} onChange={this.handleInputChange} />\r\n                                        <label htmlFor=\"message\" className=\"font1\">Message</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col m12\">\r\n                                        <button id=\"send-btn\"\r\n                                            className=\"btn contact-btn small waves-effect waves-light dom-blue font2 right\"\r\n                                            type=\"submit\" name=\"action\" value=\"Send\">Send<i\r\n                                                className=\"material-icons right\">send</i></button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                        <div className=\"col s12 m5 l4\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <h6 className=\"font1 dom-blue-text\">- Contact info -</h6>\r\n                                    <p id=\"p-about\">dominicojeda.coding@gmail.com</p>\r\n                                    <p>\r\n                                        <a href=\"https://www.linkedin.com/in/dominic-ojeda/\" target=\"blank\"\r\n                                            className=\"contact-link grey-text\">Linkedin</a>\r\n                                    </p>\r\n                                    <p>\r\n                                        <a href=\"https://github.com/dojeda1\" target=\"blank\"\r\n                                            className=\"contact-link grey-text\">Github</a>\r\n                                    </p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"spacer\" />\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport GitHubLogo from \"../../images/github-logo.png\"\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <footer className=\"page-footer dom-blue-text font1 grey darken-4 center-align\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"spacer\" />\r\n                        <h5>Live, Learn, Create</h5>\r\n                        <div className=\"spacer\" />\r\n                        <p></p>\r\n                        <div className=\"row\">\r\n                            <img className=\"footer-img\" src={GitHubLogo} alt=\"Footer Logo\" />\r\n                            <img className=\"footer-img\" src={GitHubLogo} alt=\"Footer Logo\" />\r\n                            <img className=\"footer-img\" src={GitHubLogo} alt=\"Footer Logo\" />\r\n                        </div>\r\n                        <div className=\"spacer\" />\r\n                        <p>Copyright © 2019 - Dominic Ojeda</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"spacer\" />\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport M from 'materialize-css';\nimport DLogo from \"../../images/D_logo_final.png\"\nimport playerDefault from \"./playerDefault.json\";\nimport regions from \"./regions.json\";\n\nimport monsters1 from \"./monsters1.json\";\nimport monsters2 from \"./monsters2.json\";\nimport monsters3 from \"./monsters3.json\";\n\nimport bosses1 from \"./bosses1.json\";\nimport bosses2 from \"./bosses2.json\";\nimport bosses3 from \"./bosses3.json\";\n\nimport items1 from \"./items1.json\";\nimport items2 from \"./items2.json\";\nimport items3 from \"./items3.json\";\n\nimport quests1 from \"./quests1.json\";\nimport quests2 from \"./quests2.json\";\nimport quests3 from \"./quests3.json\";\n// this.setState({ something: true }, () => console.log(this.state))\n\nclass Game extends Component {\n\n    state = {\n        message: \"\",\n        messageSub: \"\",\n        infoText: [],\n        region: regions[0],\n        location: \"title screen\",\n        task: \"new or load\",\n        step: null,\n        inputName: \"\",\n        movingForward: false,\n        player: playerDefault,\n        currentEnemy: {},\n        quests: [],\n        tavernQuests: [],\n        merchant: [],\n        dungeonCount: 0,\n        meadCount: 0,\n        showSave: false,\n        showStats: false,\n        showQuests: false\n    }\n    componentDidMount() {\n        this.setState({ message: \"Choose an Option.\" });\n        M.AutoInit();\n    }\n    toggleGame = () => {\n        this.props.endGame();\n    }\n    //Utility Functions\n    changePlayStates = (location, task, step) => {\n        this.setState({\n            location: location,\n            task: task,\n            step: step\n        })\n    }\n    randNum = (x, y) => {\n        return Math.floor(Math.random() * y) + x;\n    }\n    aOrAn = (word) => {\n        var firstLetter = word.charAt(0);\n        var anA = \"\";\n        if (firstLetter === \"A\" || firstLetter === \"E\" || firstLetter === \"I\" || firstLetter === \"O\" || firstLetter === \"U\") {\n            anA = \"an\";\n            return anA\n        } else {\n            anA = \"a\";\n            return anA\n        };\n    }\n    atkText = (attacker, attackMessage) => {\n        console.log(\"atk txt: \" + attackMessage)\n        let text;\n        if (attacker.name === this.state.player.name) {\n            console.log(\"empty mes arr\")\n            text = [];\n        } else {\n            console.log(\"do not empty mes arr\")\n            text = this.state.infoText;\n        };\n        text.push(attackMessage);\n        let berserkNum = attacker.berserkCount;\n        if (berserkNum === 3) {\n            attacker.berserkCount = 0;\n            attacker.isBerserk = false;\n            text.push(\"Berserk has run out.\")\n        }\n        console.log(\"atk text: \" + text)\n        this.setState({\n            player: this.state.player,\n            currentEnemy: this.state.currentEnemy,\n            infoText: text,\n        }, () => {\n            console.log(\"after attack A: \" + this.state.infoText);\n            this.gameOverCheck();\n        });\n    }\n    handleCheck = () => {\n        console.log(this.state.player);\n        console.log(this.state.currentEnemy);\n    }\n    hasItem = (inventory, itemName) => {\n        let inInventory = false;\n        inventory.forEach(element => {\n            if (itemName === element.name) {\n                inInventory = true;\n            };\n        });\n        return inInventory\n    };\n    addItem = (array, item) => {\n        const newItem = {\n            name: item.name,\n            order: item.order,\n            qty: 1,\n            buy: item.buy,\n            sell: item.sell,\n            info: item.info\n        };\n        let inInventory = false;\n        array.forEach(element => {\n            if (newItem.name === element.name) {\n                inInventory = true;\n                element.qty++\n            };\n        });\n        if (inInventory === false) {\n            array.push(newItem);\n        }\n        function compare(a, b) {\n            const orderA = a.order;\n            const orderB = b.order;\n\n            let comparison = 0;\n            if (orderA > orderB) {\n                comparison = 1;\n            } else if (orderA < orderB) {\n                comparison = -1;\n            }\n            return comparison;\n        }\n\n        array.sort(compare);\n        this.setState({\n            player: this.state.player,\n            currentEnemy: this.state.currentEnemy,\n            merchant: this.state.merchant\n        }, this.fetchQuestCheck(item.name));\n    }\n    removeItem = (array, itemName) => {\n        array.forEach((element, i) => {\n            if (itemName === element.name) {\n                element.qty--\n            };\n            if (element.qty <= 0) {\n                console.log(\"item zeroed out.\")\n                array.splice(i, 1);\n            };\n        });\n        this.setState({\n            player: this.state.player,\n            currentEnemy: this.state.currentEnemy,\n            merchant: this.state.merchant\n        }, this.fetchQuestCheck(itemName));\n    };\n    transferItem = (fromArr, toArr, item) => {\n        var transferItem = {\n            name: item.name,\n            order: item.order,\n            qty: 1,\n            buy: item.buy,\n            sell: item.sell,\n            info: item.info\n        }\n        this.addItem(toArr, transferItem);\n        this.removeItem(fromArr, transferItem.name);\n    }\n    addQuest = (fromArr, toArr, index) => {\n        let newQuest = {};\n        newQuest.name = fromArr[index].name;\n        newQuest.info = fromArr[index].info;\n        newQuest.amount = fromArr[index].amount;\n        newQuest.reward = fromArr[index].reward;\n        newQuest.type = fromArr[index].type;\n        newQuest.task = fromArr[index].task;\n        newQuest.count = fromArr[index].count;\n        newQuest.goal = fromArr[index].goal;\n        newQuest.region = fromArr[index].region;\n        newQuest.rarity = fromArr[index].rarity;\n        newQuest.itemIndex = fromArr[index].itemIndex;\n        newQuest.completed = fromArr[index].completed;\n        newQuest.index = index;\n        toArr.push(newQuest);\n        if (newQuest.type === \"fetch\") {\n            this.fetchQuestCheck(newQuest.task);\n        }\n    }\n    removeQuest = (array, index) => {\n        console.log(\"quest removed.\")\n        array.splice(index, 1);\n    }\n    hasRegionQuest = () => {\n        let hasQuest = false\n        this.state.quests.forEach(quest => {\n            if (quest.region === this.state.region.name) {\n                hasQuest = true\n            }\n        })\n        return hasQuest\n    }\n    //Menu Functions\n    showSave = () => {\n        if (this.state.showSave === false) {\n            this.setState({\n                showSave: true,\n                showStats: false,\n                showQuests: false\n            })\n        } else {\n            this.setState({\n                showSave: false\n            })\n        }\n    }\n    showStats = () => {\n        if (this.state.showStats === false) {\n            this.setState({\n                showSave: false,\n                showStats: true,\n                showQuests: false\n            })\n        } else {\n            this.setState({\n                showStats: false\n            })\n        }\n    }\n    showQuests = () => {\n        if (this.state.showQuests === false) {\n            this.setState({\n                showSave: false,\n                showStats: false,\n                showQuests: true\n            })\n        } else {\n            this.setState({\n                showQuests: false\n            })\n        }\n    }\n    selectExit = () => {\n        this.setState({\n            showSave: false,\n            showStats: false,\n            showQuests: false\n        })\n    }\n    //Start Game Functions\n    loadGame = () => {\n        console.log(\"Loaded Character.\");\n        this.setState({ task: \"playing game\" });\n    }\n    newGame = () => {\n        console.log(\"Creating New Character.\")\n        this.setState({\n            task: \"create character\",\n            step: \"name\",\n            message: \"Hello Adventurer! What is your name?\"\n        });\n    }\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    handleName = (event) => {\n        event.preventDefault();\n\n        if (this.state.inputName === \"\") {\n            this.setState({\n                message: \"Surely, you must have a name...\"\n            });\n            // this.setState({\n            //     player: {\n            //         ...this.state.player,\n            //         name: \"Killgore\"\n            //     },\n            //     message: \"What is your race?\",\n            //     step: \"race\"\n            // });\n        } else {\n            let newName = this.state.inputName.trim();\n            newName = newName.charAt(0).toUpperCase() + newName.slice(1);\n            // document.getElementById('game-form').reset();\n\n            this.setState({\n                player: {\n                    ...this.state.player,\n                    name: newName\n                },\n                message: \"What is your race?\",\n                step: \"race\"\n            });\n        }\n    }\n    selectRace = (event) => {\n        let maxHpA;\n        let maxMpA;\n        let strengthA;\n        let defenseA;\n        let manaA;\n        let speedA;\n        let luckA;\n        switch (event.target.value) {\n\n            case \"Human\":\n                maxHpA = 4;\n                maxMpA = 4;\n                strengthA = 1;\n                defenseA = 1;\n                manaA = 1;\n                speedA = 1;\n                luckA = 0;\n                break;\n\n            case \"Elf\":\n                maxHpA = 4;\n                maxMpA = 6;\n                strengthA = 0;\n                defenseA = 0;\n                manaA = 2;\n                speedA = 1;\n                luckA = 1;\n                break;\n\n            case \"Dwarf\":\n                maxHpA = 6;\n                maxMpA = 2;\n                strengthA = 2;\n                defenseA = 1;\n                manaA = 0;\n                speedA = 0;\n                luckA = 0;\n                break;\n\n            default: console.log(\"error\");\n\n        }\n\n        let newPlayer = this.state.player;\n        newPlayer.race = event.target.value;\n        newPlayer.maxHp = newPlayer.maxHp + maxHpA;\n        newPlayer.hp = newPlayer.hp + maxHpA;\n        newPlayer.maxMp = newPlayer.maxMp + maxMpA;\n        newPlayer.mp = newPlayer.mp + maxMpA;\n        newPlayer.strength = newPlayer.strength + strengthA;\n        newPlayer.defenseA = newPlayer.defense + defenseA;\n        newPlayer.manaA = newPlayer.mana + manaA;\n        newPlayer.speed = newPlayer.speed + speedA;\n        newPlayer.luck = newPlayer.luck + luckA;\n\n        this.setState({\n            player: newPlayer,\n            step: \"class\",\n            message: \"What is your class?\"\n        });\n    }\n    selectClass = (event) => {\n        let maxHpA;\n        let maxMpA;\n        let strengthA;\n        let defenseA;\n        let manaA;\n        let speedA;\n        let luckA;\n        let special1A\n        let special2A\n        let special1CostA\n        let special2CostA\n        switch (event.target.value) {\n\n            case \"Warrior\":\n                maxHpA = 4\n                maxMpA = 0\n                strengthA = 2\n                defenseA = 2\n                manaA = 0\n                speedA = 0\n                luckA = 0\n                special1A = \"Axe Strike\"\n                special2A = \"Berserk\"\n                special1CostA = 6\n                special2CostA = 8\n                break;\n\n            case \"Mage\":\n                maxHpA = 2\n                maxMpA = 6\n                strengthA = 0\n                defenseA = 0\n                manaA = 7\n                speedA = 0\n                luckA = 1\n                special1A = \"Fireball\"\n                special2A = \"Heal\"\n                special1CostA = 6\n                special2CostA = 10\n                break;\n\n            case \"Rogue\":\n                maxHpA = 2\n                maxMpA = 2\n                strengthA = 1\n                defenseA = 0\n                manaA = 1\n                speedA = 2\n                luckA = 2\n                special1A = \"Dagger Slash\"\n                special2A = \"Steal\"\n                special1CostA = 6\n                special2CostA = 5\n                break;\n\n            default: console.log(\"error\");\n        }\n\n        let newPlayer = this.state.player;\n        newPlayer.class = event.target.value;\n        newPlayer.maxHp = newPlayer.maxHp + maxHpA;\n        newPlayer.hp = newPlayer.hp + maxHpA;\n        newPlayer.maxMp = newPlayer.maxMp + maxMpA;\n        newPlayer.mp = newPlayer.mp + maxMpA;\n        newPlayer.strength = newPlayer.strength + strengthA;\n        newPlayer.defenseA = newPlayer.defense + defenseA;\n        newPlayer.manaA = newPlayer.mana + manaA;\n        newPlayer.speed = newPlayer.speed + speedA;\n        newPlayer.luck = newPlayer.luck + luckA;\n        newPlayer.special1 = special1A;\n        newPlayer.special2 = special2A;\n        newPlayer.special1Cost = special1CostA;\n        newPlayer.special2Cost = special2CostA;\n\n        this.setState({\n            player: newPlayer,\n            message: \"Your adventure Begins...\"\n        })\n        this.addItem(this.state.player.inventory, items1[0]);\n        // this.addItem(this.state.player.inventory, items3[3]);\n        this.selectToWild();\n    }\n    selectUseItem = () => {\n        let useMessage = \"Select an item.\"\n        if (!this.state.player.inventory.length) {\n            useMessage = \"You have no items...\"\n        }\n        this.setState({\n            step: \"use item\",\n            subMessage: useMessage\n        })\n    }\n    selectItem = (event) => {\n        const index = event.target.getAttribute(\"data-index\");\n        const name = event.target.value\n        console.log(\"chosen item: \" + name + \" \" + index)\n        if (this.state.task === \"fight\" || this.state.task === \"select where\") {\n            if (name.includes(\"Health Potion\") && this.state.player.hp >= this.state.player.maxHp) {\n                this.setState({\n                    message: \"You are already at full Health.\"\n                })\n            } else if (name.includes(\"Mana Potion\") && this.state.player.mp >= this.state.player.maxMp) {\n                this.setState({\n                    message: \"You are already at full Mana.\"\n                })\n            } else {\n                this.activateItem(this.state.player, this.state.currentEnemy, name, index);\n            }\n        }\n    }\n    buyItem = (event) => {\n        const player = this.state.player\n        const shop = this.state.merchant\n        const index = event.target.getAttribute(\"data-index\");\n        const price = event.target.getAttribute(\"data-price\");\n        const name = event.target.value;\n        if (price < player.gold) {\n            player.gold -= price\n            this.transferItem(this.state.merchant, this.state.player.inventory, this.state.merchant[index])\n            if (!this.state.merchant.length) {\n                this.setState({\n                    player: player,\n                    merchant: shop,\n                    message: \"You purchased \" + this.aOrAn(name) + \" \" + name + \".\",\n                    subMessage: \"There is nothing to buy.\"\n                })\n            } else {\n                this.setState({\n                    player: player,\n                    merchant: shop,\n                    message: \"You purchased \" + this.aOrAn(name) + \" \" + name + \".\"\n                })\n            }\n        } else {\n            this.setState({\n                message: \"You don't have enough gold...\"\n            })\n        }\n    }\n    sellItem = (event) => {\n        const player = this.state.player\n        const shop = this.state.merchant\n        const index = event.target.getAttribute(\"data-index\");\n        const price = event.target.getAttribute(\"data-price\");\n        const name = event.target.value;\n        player.gold += parseInt(price);\n        this.transferItem(this.state.player.inventory, this.state.merchant, this.state.player.inventory[index])\n        if (!this.state.player.inventory.length) {\n            this.setState({\n                player: player,\n                merchant: shop,\n                message: \"You sold \" + this.aOrAn(name) + \" \" + name + \".\",\n                subMessage: \"You have no items...\"\n            });\n        } else {\n            this.setState({\n                player: player,\n                merchant: shop,\n                message: \"You sold \" + this.aOrAn(name) + \" \" + name + \".\"\n            });\n        };\n    }\n    showItemInfo = (event) => {\n        const info = event.target.getAttribute(\"data-info\")\n        this.setState({\n            subMessage: info\n        })\n    }\n    showItemPrice = (event) => {\n        const cost = event.target.getAttribute(\"data-price\")\n        let shopWord\n        if (this.state.step === \"buy\") {\n            shopWord = \"Buy\";\n        } else if (this.state.step === \"sell\") {\n            shopWord = \"Sell\";\n        }\n        this.setState({\n            subMessage: shopWord + \" for \" + cost + \" gold.\"\n        })\n    }\n    showSelectItem = () => {\n        this.setState({\n            subMessage: \"Select an Item.\"\n        })\n    }\n    activateItem = (user, opponent, name, index) => {\n        console.log(\"item: \" + name + \" \" + index)\n        let amount;\n        switch (name) {\n            case \"Health Potion\":\n                amount = Math.floor(user.maxHp * 0.5);\n                user.hp += amount;\n                if (user.hp > user.maxHp) {\n                    user.hp = user.maxHp\n                }\n                this.removeItem(user.inventory, user.inventory[index].name);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" HP.\")\n                    if (user.name === this.state.player.name) {\n                        this.setState({\n                            user: user,\n                        }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                    }\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" HP.\"\n                    });\n                }\n                break;\n\n            case \"Greater Health Potion\":\n                amount = Math.floor(user.maxHp * 0.75);\n                user.hp += amount;\n                if (user.hp > user.maxHp) {\n                    user.hp = user.maxHp\n                }\n                this.removeItem(user.inventory, user.inventory[index].name);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" HP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" HP.\"\n                    });\n                }\n                break;\n\n            case \"Superior Health Potion\":\n                amount = user.maxHp;\n                user.hp += amount;\n                if (user.hp > user.maxHp) {\n                    user.hp = user.maxHp\n                }\n                this.removeItem(user.inventory, user.inventory[index].name);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" HP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" HP.\"\n                    });\n                }\n                break;\n\n            case \"Mana Potion\":\n                amount = Math.floor(user.maxMp * 0.5);\n                user.mp += amount;\n                if (user.mp > user.maxMp) {\n                    user.mp = user.maxMp\n                }\n                this.removeItem(user.inventory, user.inventory[index].name);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" MP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" MP.\"\n                    });\n                }\n                break;\n\n            case \"Greater Mana Potion\":\n                amount = Math.floor(user.maxMp * 0.75);\n                user.mp += amount;\n                if (user.mp > user.maxMp) {\n                    user.mp = user.maxMp\n                }\n                this.removeItem(user.inventory, user.inventory[index].name);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" MP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" MP.\"\n                    });\n                }\n                break;\n\n            case \"Superior Mana Potion\":\n                amount = user.maxMp;\n                user.mp += amount;\n                if (user.mp > user.maxMp) {\n                    user.mp = user.maxMp\n                }\n                this.removeItem(user.inventory, user.inventory[index].name);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" MP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" MP.\"\n                    });\n                }\n                break;\n\n            case \"Old Hat\":\n                this.setState({\n                    message: \"It looks good on you...\"\n                })\n                break;\n\n            case \"Death Scroll\":\n                if (this.state.task === \"fight\") {\n                    opponent.hp = 0;\n                    this.removeItem(user.inventory, user.inventory[index].name);\n                    this.atkText(user, user.name + \" read from the Death Scroll.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: \"Death Scroll can only be used in battle.\"\n                    });\n                }\n                break;\n\n            default:\n                // Nothing\n                this.setState({\n                    message: \"SOMETHING WENT WRONG\"\n                })\n        }\n    }\n    //to place functions\n    selectToWild = () => {\n        this.changePlayStates(\"wild\", \"select where\", null)\n    }\n    goToTown = () => {\n        // give shop random set of items each town visit\n\n        let player = this.state.player;\n        player.isBerserk = false;\n        let randItem;\n        let randQuest;\n        let merchant = [];\n        let questArr;\n        let tavernQuests = [];\n        for (let i = 0; i < 4; i++) {\n            randItem = this.randNum(0, items1.length);\n            this.addItem(merchant, items1[randItem]);\n        }\n        for (let i = 0; i < 2; i++) {\n            randItem = this.randNum(0, items2.length);\n            this.addItem(merchant, items2[randItem]);\n        }\n        for (let i = 0; i < 1; i++) {\n            randItem = this.randNum(0, items3.length);\n            this.addItem(merchant, items3[randItem]);\n        }\n        switch (this.state.region.index) {\n            case 1:\n                questArr = quests1\n                break;\n            case 2:\n                questArr = quests2\n                break;\n            case 3:\n                questArr = quests3\n                break;\n            default:\n            // code block\n\n        }\n        for (let i = 0; i < 3; i++) {\n            randQuest = this.randNum(0, questArr.length);\n            this.addQuest(questArr, tavernQuests, randQuest)\n        }\n\n        this.setState({\n            player: player,\n            location: \"town\",\n            task: \"select where\",\n            step: null,\n            meadCount: 0,\n            merchant: merchant,\n            tavernQuests: tavernQuests\n        })\n    }\n    selectToInn = () => {\n        const cost = 10 + (this.state.player.level - 2) * 2;\n        if (this.state.player.hp < this.state.player.maxHp || this.state.player.mp < this.state.player.maxMp) {\n            this.setState({\n                message: \"Staying the night will cost \" + cost + \" gold.\",\n                messageSub: \"Pay for the room?\",\n            }, () => this.changePlayStates(\"town\", \"inn\", \"accept\"))\n        } else {\n            this.setState({\n                message: \"You are already at full Health and Mana.\"\n            }, () => this.changePlayStates(\"town\", \"select where\", null))\n        }\n    }\n    selectToTown = () => {\n        const eventCheck = this.randNum(1, 10);\n        if (eventCheck === 1) {\n            this.monsterEncounter(\"You were ambushed!!!\");\n        } else {\n            this.setState({\n                message: \"You arrived to town safely.\"\n            }, () => this.goToTown())\n        }\n    }\n    selectYesInn = () => {\n        const cost = 10 + (this.state.player.level - 2) * 2;\n        if (this.state.player.gold >= cost) {\n            let player = this.state.player;\n            player.gold = player.gold - cost;\n            player.hp = player.maxHp;\n            player.mp = player.maxMp;\n            this.setState({\n                player: player,\n                message: \"You feel well rested.\",\n                task: \"select where\",\n                step: null\n            });\n        } else {\n            this.setState({\n                message: \"You can't afford to stay here.\",\n                task: \"select where\",\n                step: null\n            })\n        }\n    }\n    selectNoInn = () => {\n        this.setState({\n            message: \"You decided against it.\",\n            task: \"select where\",\n            step: null\n        })\n    }\n    selectToShop = () => {\n        this.setState({\n            message: \"You entered the shop.\",\n            task: \"shop\",\n            step: \"buy or sell\"\n        })\n    }\n    selectBuy = () => {\n        let shopMessage = \"Select an item.\"\n        if (!this.state.merchant.length) {\n            shopMessage = \"There is nothing to buy.\"\n        }\n        this.setState({\n            step: \"buy\",\n            subMessage: shopMessage\n        })\n    }\n    selectSell = () => {\n        let shopMessage = \"Select an item.\"\n        if (!this.state.merchant.length) {\n            shopMessage = \"You have no items...\"\n        }\n        this.setState({\n            step: \"sell\",\n            subMessage: shopMessage\n        })\n    }\n    selectToTavern = () => {\n        this.setState({\n            message: \"You entered the tavern.\",\n            task: \"tavern\",\n            step: \"select next\"\n        })\n    }\n    selectGrabMead = () => {\n        this.setState({\n            message: \"That will be 5 gold.\",\n            messageSub: \"Pay for the Mead?\",\n            step: \"accept mead\"\n        });\n    }\n    selectYesMead = () => {\n        const cost = 5;\n        if (this.state.player.gold >= cost) {\n            let player = this.state.player;\n            player.gold = player.gold - 5\n            player.hp = player.hp + 5;\n            if (player.hp > player.maxHp) {\n                player.hp = player.maxHp\n            }\n            player.mp = player.mp + 3;\n            if (player.mp > player.maxMp) {\n                player.mp = player.maxMp\n            }\n            let meadNum = this.state.meadCount + 1;\n\n            if (meadNum < 3) {\n                this.setState({\n                    player: player,\n                    message: \"It was refreshing.\",\n                    task: \"tavern\",\n                    step: \"select next\",\n                    meadCount: meadNum\n                });\n            } else if (meadNum < 4) {\n                this.setState({\n                    player: player,\n                    message: \"You are starting to feel drunk...\",\n                    task: \"tavern\",\n                    step: \"select next\",\n                    meadCount: meadNum\n                });\n            } else if (meadNum < 5) {\n                this.setState({\n                    player: player,\n                    message: \"Maaaysssbe wwuuun meerrrrr...\",\n                    task: \"tavern\",\n                    step: \"select next\",\n                    meadCount: meadNum\n                });\n            } else if (meadNum >= 5) {\n                player.hp = 3\n                player.mp = 0\n                this.setState({\n                    player: player,\n                    message: \"You blacked out, waking hours later inside a dungeon.\",\n                    location: \"dungeon\",\n                    task: \"select where\",\n                    step: null,\n                    meadCount: 0,\n                    dungeonCount: 0\n                });\n            }\n        } else {\n            this.setState({\n                message: \"You don't have enough gold.\",\n                task: \"tavern\",\n                step: \"select next\"\n            })\n        }\n    }\n    selectNoMead = () => {\n        this.setState({\n            message: \"You decided against it.\",\n            task: \"tavern\",\n            step: \"select next\"\n        })\n    }\n    selectGetQuest = () => {\n        this.setState({\n            message: \"You viewed the Quest board.\",\n            task: \"tavern\",\n            step: \"select quest\"\n        })\n    }\n    selectYesQuest = (event) => {\n        if (this.state.quests.length < 3) {\n            const index = event.target.getAttribute(\"data-index\");\n            let quests = this.state.quests\n            let tavernQuests = this.state.tavernQuests\n            this.addQuest(tavernQuests, quests, index);\n            this.removeQuest(tavernQuests, index);\n            this.setState({\n                quests: quests,\n                tavernQuests: tavernQuests,\n                message: \"You got a new quest!\",\n                step: \"select quest\"\n            })\n        } else {\n            this.setState({\n                message: \"You can only have 3 quests at a time.\",\n            })\n        }\n    }\n    selectNoQuest = () => {\n        this.setState({\n            message: \"You decided against it.\",\n            task: \"tavern\",\n            step: \"select quest\"\n        })\n    }\n    selectCashQuest = () => {\n        this.setState({\n            message: this.state.region.name + \" Quest Rewards.\",\n            task: \"tavern\",\n            step: \"cash quest\"\n        })\n    }\n    selectRedeemReward = (event) => {\n        let player = this.state.player\n        let index = event.target.getAttribute(\"data-index\");\n        let type = event.target.getAttribute(\"data-type\");\n        let task = event.target.getAttribute(\"data-task\");\n        let goal = event.target.getAttribute(\"data-goal\");\n        let amount = event.target.getAttribute(\"data-amount\");\n        let reward = event.target.getAttribute(\"data-reward\");\n        let rarity = event.target.getAttribute(\"data-rarity\");\n        let itemIndex = event.target.getAttribute(\"data-item\");\n        if (reward === \"gold\") {\n            player.gold += parseInt(amount)\n            player.totalGold += parseInt(amount)\n            player.totalQuests++\n        } else {\n            let itemArray = [];\n            switch (rarity) {\n                case \"1\":\n                    itemArray = items1;\n                    break;\n                case \"2\":\n                    itemArray = items2;\n                    break;\n                case \"3\":\n                    itemArray = items3;\n                    break;\n\n                default:\n                // code block\n            }\n            console.log(\"Item Array\")\n            console.log(itemArray)\n            for (let i = 0; i < amount; i++) {\n                this.addItem(player.inventory, itemArray[parseInt(itemIndex)]);\n            }\n            console.log(\"item reward.\")\n        }\n        if (type === \"fetch\") {\n            for (let i = 0; i < goal; i++) {\n                this.removeItem(player.inventory, task)\n            }\n        }\n        this.setState({\n            message: \"You earned \" + amount + \" \" + reward + \".\",\n            player: player\n        })\n        this.removeQuest(this.state.quests, index);\n    }\n    selectAbandonQuest = (event) => {\n        const index = event.target.getAttribute(\"data-index\");\n        let questArr = this.state.quests\n        this.removeQuest(questArr, index);\n        this.setState({\n            quests: questArr\n        });\n    }\n\n\n    killQuestCheck = (enemyName) => {\n        let playerQuests = this.state.quests;\n        playerQuests.forEach(quest => {\n            if (quest.type === \"kill\" && !quest.completed) {\n                console.log(\"kill Quest: \" + enemyName);\n                console.log(enemyName + \":\" + quest.task)\n                if (enemyName === quest.task) {\n                    quest.count++;\n                    if (quest.count >= quest.goal) {\n                        quest.completed = true\n                    }\n                    console.log(\"QC: \" + quest.count)\n                } else {\n                    console.log(\"not correct enemy.\")\n                }\n            }\n        });\n        this.setState({\n            quests: playerQuests\n        })\n    }\n\n    fetchQuestCheck = (itemName) => {\n        let player = this.state.player;\n        let playerQuests = this.state.quests;\n        playerQuests.forEach(quest => {\n            if (quest.type === \"fetch\" && itemName === quest.task) {\n                let qty = 0;\n                console.log(\"fetch Quest: \" + itemName);\n                console.log(itemName + \":\" + quest.task)\n                if (this.hasItem(player.inventory, itemName)) {\n                    player.inventory.forEach(item => {\n                        if (item.name === itemName) {\n                            qty = item.qty;\n                            if (qty >= quest.goal) {\n                                qty = quest.goal\n                                quest.completed = true\n                            } else {\n                                quest.completed = false\n                            }\n                        }\n                    })\n                } else {\n                    quest.completed = false;\n                }\n                quest.count = qty\n                console.log(\"quest count: \" + quest.count)\n            }\n        });\n        console.log(playerQuests);\n        this.setState({\n            quests: playerQuests\n        })\n    }\n    selectExplore = () => {\n        const exploreCheck = this.randNum(1, 10)\n        if (exploreCheck === 1) {\n            this.chestEncounter();\n        } else if (exploreCheck === 2) {\n            this.dungeonEncounter();\n        } else {\n            this.monsterEncounter();\n        }\n    }\n    selectVentureDeeper = () => {\n        const exploreCheck = this.randNum(1, 10)\n        if (exploreCheck <= 2) {\n            this.chestEncounter();\n        } else if (this.state.dungeonCount === this.state.region.dungeonGoal - 1) {\n            this.bossEncounter();\n        } else {\n            this.viciousEncounter();\n        }\n    }\n    selectNext = () => {\n        if (this.state.movingForward === true) {\n            this.setState({\n                movingForward: false,\n                region: regions[this.state.region.index],\n                task: \"select where\",\n                step: null,\n                message: \"You have reached the \" + regions[this.state.region.index].name + \".\"\n            });\n        } else if (this.state.task === \"chest\") {\n            this.setState({\n                task: \"select where\",\n                step: null,\n                message: \"You decided against it.\"\n            });\n        } else if (this.state.location === \"dungeon\" && this.state.dungeonCount >= this.state.region.dungeonGoal) {\n            this.setState({\n                location: \"wild\",\n                task: \"select where\",\n                step: null,\n                message: \"Dungeon Complete!\"\n            });\n        } else {\n            this.setState({\n                task: \"select where\",\n                step: null,\n                infoText: []\n            });\n        }\n    }\n    selectBack = () => {\n        if (this.state.task === \"select where\") {\n            this.setState({\n                step: null\n            });\n        } else if (this.state.task === \"fight\") {\n            this.setState({\n                step: \"select move\"\n            });\n        } else if (this.state.step === \"buy\" || this.state.step === \"sell\") {\n            this.setState({\n                step: \"buy or sell\"\n            });\n        } else if (this.state.task === \"shop\") {\n            this.setState({\n                message: \"You left the shop.\",\n                task: \"select where\",\n                step: null\n            });\n        } else if (this.state.step === \"select quest\" || this.state.step === \"cash quest\") {\n            this.setState({\n                task: \"tavern\",\n                step: \"select next\"\n            });\n        } else if (this.state.task === \"tavern\") {\n            this.setState({\n                message: \"You left the tavern.\",\n                task: \"select where\",\n                step: null\n            });\n        } else if (this.state.task === \"dungeon\") {\n            this.setState({\n                message: \"You left the dungeon behind.\",\n                task: \"select where\",\n                step: null\n            });\n        }\n    }\n    selectLeaveDungeon = () => {\n        this.setState({\n            location: \"wild\",\n            message: \"You left the dungeon...\"\n        })\n    }\n    selectTravelForward = () => {\n        this.setState({\n            movingForward: true,\n        }, () => this.viciousEncounter(\"As you near the \" + regions[this.state.region.index].name + \", you are attacked.\"));\n    }\n    travelForwardSuccess = () => {\n        this.setState({\n            region: regions[this.state.region.index],\n            movingForward: false,\n        });\n    }\n    selectTravelBackward = () => {\n        this.setState({\n            region: regions[this.state.region.index - 2],\n            message: \"You traveled back to the \" + regions[this.state.region.index - 2].name + \".\"\n        })\n    }\n    addEnemyItems = (enemy) => {\n        let randItem = this.randNum(0, items3.length)\n        this.addItem(enemy.inventory, items3[randItem]);\n        this.addItem(enemy.inventory, items1[0]);\n        this.addItem(enemy.inventory, items1[1]);\n    }\n    //encounters\n    monsterEncounter = (alternateMessage) => {\n\n        let rangeNum = 0;\n        let playerLevel = this.state.player.level;\n\n        const regionIndex = this.state.region.index;\n        console.log(\"RI:\" + regionIndex)\n        const regionLevel = this.state.region.level;\n        const regionTarget = this.state.region.targetLevel;\n\n        let monsterArray;\n\n        switch (regionIndex) {\n            case 1:\n                monsterArray = monsters1;\n                break;\n            case 2:\n                monsterArray = monsters2;\n                break;\n            case 3:\n                monsterArray = monsters3;\n                break;\n\n            default:\n            // code block\n        };\n        if (playerLevel <= regionLevel) {\n            rangeNum = 1;\n\n        } else if (playerLevel > regionLevel && playerLevel < regionTarget) {\n            rangeNum = Math.ceil(monsterArray.length * (playerLevel / regionTarget));\n        } else {\n            rangeNum = monsterArray.length;\n        };\n        let monNum = this.randNum(0, rangeNum);\n        const message = alternateMessage || \"You encountered \" + this.aOrAn(monsterArray[monNum].name) + \" \" + monsterArray[monNum].name + \".\";\n        console.log(\"message: \" + message)\n        var newEnemy = this.state.currentEnemy\n        newEnemy.name = monsterArray[monNum].name;\n        newEnemy.type = monsterArray[monNum].type;\n        newEnemy.maxHp = monsterArray[monNum].maxHp;\n        newEnemy.hp = monsterArray[monNum].maxHp;\n        newEnemy.maxMp = monsterArray[monNum].maxMp;\n        newEnemy.mp = monsterArray[monNum].maxMp;\n        newEnemy.strength = monsterArray[monNum].strength;\n        newEnemy.luck = monsterArray[monNum].luck;\n        newEnemy.xp = monsterArray[monNum].xp;\n        newEnemy.inventory = [];\n        newEnemy.gold = monsterArray[monNum].gold;\n        newEnemy.isDead = false\n        this.addEnemyItems(newEnemy);\n        let text = [];\n        this.setState({\n            currentEnemy: newEnemy,\n            task: \"fight\",\n            step: \"select move\",\n            message: message,\n            infoText: text\n        });\n        console.log(this.state.currentEnemy);\n    };\n    bossEncounter = () => {\n\n        let rangeNum = 0;\n        let playerLevel = this.state.player.level;\n\n        const regionIndex = this.state.region.index;\n        console.log(\"RI:\" + regionIndex)\n        const regionLevel = this.state.region.level;\n        const regionTarget = this.state.region.targetLevel;\n\n        let monsterArray;\n\n        switch (regionIndex) {\n            case 1:\n                monsterArray = bosses1;\n                break;\n            case 2:\n                monsterArray = bosses2;\n                break;\n            case 3:\n                monsterArray = bosses3;\n                break;\n\n            default:\n            // code block\n        };\n        if (playerLevel <= regionLevel) {\n            rangeNum = 1;\n\n        } else if (playerLevel > regionLevel && playerLevel < regionTarget) {\n            rangeNum = Math.ceil(monsterArray.length * (playerLevel / regionTarget));\n        } else {\n            rangeNum = monsterArray.length;\n        };\n        let monNum = this.randNum(0, rangeNum);\n        const message = \"You encountered \" + monsterArray[monNum].name + \", \" + monsterArray[monNum].title + \".\";\n        console.log(\"message: \" + message)\n        var newEnemy = this.state.currentEnemy\n        newEnemy.name = monsterArray[monNum].name;\n        newEnemy.title = monsterArray[monNum].title;\n        newEnemy.type = monsterArray[monNum].type;\n        newEnemy.maxHp = monsterArray[monNum].maxHp;\n        newEnemy.hp = monsterArray[monNum].maxHp;\n        newEnemy.maxMp = monsterArray[monNum].maxMp;\n        newEnemy.mp = monsterArray[monNum].maxMp;\n        newEnemy.strength = monsterArray[monNum].strength;\n        newEnemy.luck = monsterArray[monNum].luck;\n        newEnemy.xp = monsterArray[monNum].xp;\n        newEnemy.inventory = [];\n        newEnemy.gold = monsterArray[monNum].gold;\n        newEnemy.isDead = false\n        this.addEnemyItems(newEnemy);\n        let text = [];\n        this.setState({\n            currentEnemy: newEnemy,\n            task: \"fight\",\n            step: \"select move\",\n            message: message,\n            infoText: text\n        });\n        console.log(this.state.currentEnemy);\n    };\n    viciousEncounter = (alternateMessage) => {\n\n        let rangeNum = 0;\n        let playerLevel = this.state.player.level;\n\n        const regionIndex = this.state.region.index;\n        console.log(\"RI:\" + regionIndex)\n        const regionLevel = this.state.region.level;\n        const regionTarget = this.state.region.targetLevel;\n\n        let monsterArray;\n\n        switch (regionIndex) {\n            case 1:\n                monsterArray = monsters1;\n                break;\n            case 2:\n                monsterArray = monsters2;\n                break;\n            case 3:\n                monsterArray = monsters3;\n                break;\n\n            default:\n            // code block\n        };\n        if (this.state.movingForward === true) {\n            rangeNum = monsterArray.length;\n        } else if (playerLevel <= regionLevel) {\n            rangeNum = 1;\n        } else if (playerLevel > regionLevel && playerLevel < regionTarget) {\n            rangeNum = Math.ceil(monsterArray.length * (playerLevel / regionTarget));\n        } else {\n            rangeNum = monsterArray.length;\n        };\n        let monNum = this.randNum(0, rangeNum);\n        const message = alternateMessage || \"You encountered a Vicious \" + monsterArray[monNum].name + \".\";\n        var newEnemy = this.state.currentEnemy\n        newEnemy.name = \"Vicious \" + monsterArray[monNum].name;\n        newEnemy.type = \"vicious\";\n        newEnemy.maxHp = monsterArray[monNum].maxHp + 5;\n        newEnemy.hp = monsterArray[monNum].maxHp + 5;\n        newEnemy.maxMp = monsterArray[monNum].maxMp + 5;\n        newEnemy.mp = monsterArray[monNum].maxMp + 5;\n        newEnemy.strength = monsterArray[monNum].strength + 5;\n        newEnemy.luck = monsterArray[monNum].luck;\n        newEnemy.xp = monsterArray[monNum].xp + 10;\n        newEnemy.inventory = [];\n        newEnemy.gold = monsterArray[monNum].gold + 30;\n        newEnemy.isDead = false;\n        this.addEnemyItems(newEnemy)\n        let text = [];\n        this.setState({\n            currentEnemy: newEnemy,\n            task: \"fight\",\n            step: \"select move\",\n            message: message,\n            infoText: text\n        });\n    };\n    chestEncounter = () => {\n        this.setState({\n            task: \"chest\",\n            step: \"accept\",\n            message: \"You found a chest!\"\n        })\n    }\n    mimicEncounter = () => {\n        const regionLevel = this.state.region.level;\n        var newEnemy = this.state.currentEnemy\n        newEnemy.name = \"Mimic\"\n        newEnemy.type = \"mimic\";\n        newEnemy.maxHp = (regionLevel * 5) + 20;\n        newEnemy.hp = (regionLevel * 5) + 20;\n        newEnemy.maxMp = 10;\n        newEnemy.mp = 10;\n        newEnemy.strength = regionLevel * 2 + 2;\n        newEnemy.luck = regionLevel * 2 + 2;\n        newEnemy.xp = regionLevel * 5 + 5;\n        newEnemy.inventory = [];\n        newEnemy.gold = 60 + regionLevel * 5;\n        newEnemy.isDead = false\n        this.addEnemyItems(newEnemy);\n        let text = [];\n        this.setState({\n            currentEnemy: newEnemy,\n            task: \"fight\",\n            step: \"select move\",\n            message: \"You were tricked by a Mimic!\",\n            infoText: text\n        });\n    }\n    selectYesChest = () => {\n        const player = this.state.player;\n        const openCheck = this.randNum(1, 5);\n        if (openCheck !== 1) {\n            const goldNum = this.randNum(10, 30);\n            player.gold += goldNum;\n            player.totalGold += goldNum;\n\n            let text = [];\n            text.push(\"--- RESULTS ---\");\n            text.push(\"Chest contained \" + goldNum + \" gold.\");\n\n            for (let i = 0; i < 2; i++) {\n                const itemNum = this.randNum(0, items1.length)\n                const item = items1[itemNum];\n                this.addItem(this.state.player.inventory, item);\n                text.push(\"You got \" + this.aOrAn(item.name) + \" \" + item.name + \".\");\n            }\n            let uncommonCheck = this.randNum(0, 2);\n            for (let i = 0; i < uncommonCheck; i++) {\n                const itemNum = this.randNum(0, items2.length)\n                const item = items2[itemNum];\n                this.addItem(this.state.player.inventory, item);\n                text.push(\"You got \" + this.aOrAn(item.name) + \" \" + item.name + \".\");\n            }\n            this.setState({\n                step: \"results\",\n                message: \"You opened it!\",\n                infoText: text\n            });\n        } else {\n            this.mimicEncounter();\n        }\n    }\n    dungeonEncounter = () => {\n        this.setState({\n            task: \"dungeon\",\n            step: \"accept\",\n            message: \"You discovered an old dungeon.\"\n        })\n    }\n    selectYesDungeon = () => {\n        this.setState({\n            location: \"dungeon\",\n            task: \"select where\",\n            step: null,\n            dungeonCount: 0,\n            message: \"You step into the dungeon.\"\n        })\n    }\n    // Combat Functions\n    selectAttack = () => {\n        let player = this.state.player;\n        let enemy = this.state.currentEnemy\n        this.attack(player, enemy);\n        this.enemyTurn(player, enemy);\n    }\n    enemyTurn = (player, enemy) => {\n        setTimeout(() => {\n            if (enemy.hp <= 0) {\n                player.totalKills++;\n                let text = this.state.infoText;\n                text.push(\"You killed \" + enemy.name + \"!\")\n                text.push(\"--- RESULTS ---\")\n                this.setState({\n                    task: \"fight\",\n                    step: \"results\",\n                    message: enemy.name + \" defeated.\",\n                    infoText: text\n                });\n                this.dropGold();\n                this.dropLoot(enemy)\n                this.gainXp(enemy.xp, player);\n                this.killQuestCheck(enemy.name);\n                console.log(\"total kills: \" + player.totalKills);\n                if (this.state.location === \"dungeon\") {\n                    this.setState({\n                        dungeonCount: this.state.dungeonCount + 1\n                    }, () => {\n                        if (this.state.dungeonCount >= this.state.region.dungeonGoal) {\n                            player.totalDungeons++\n                            this.setState({\n                                player: player\n                            })\n                        }\n                    })\n                }\n\n                // enemy can use health potion\n\n                // } else if (this.hasItem(enemy.inventory, \"Health Potion\") && enemy.hp < enemy.maxHp * 0.25) {\n                //     let thisIndex;\n                //     enemy.inventory.forEach((element, index) => {\n                //         if (\"Health Potion\" === element.name) {\n                //             thisIndex = index;\n                //         };\n                //     });\n                //     this.setState({\n                //         step: \"select move\"\n                //     }, () => this.activateItem(enemy, player, \"Health Potion\", thisIndex));\n\n            } else {\n                this.setState({\n                    step: \"select move\"\n                }, () => this.attack(enemy, player));\n            }\n        }, 1);\n    }\n    selectSpecial = (event) => {\n        const specialCost = event.target.getAttribute(\"data-cost\");\n        const specialName = event.target.value;\n        console.log(\"Special: \" + specialName + \" \" + specialCost);\n        if (specialName === \"Heal\" && this.state.player.hp >= this.state.player.maxHp) {\n            this.setState({\n                message: \"You are already at full health.\"\n            });\n        } else if (specialName === \"Steal\" && !this.state.currentEnemy.inventory.length) {\n            this.setState({\n                message: \"There is nothing to steal.\"\n            });\n        } else {\n            this.special(this.state.player, this.state.currentEnemy, specialName, specialCost);\n            this.enemyTurn(this.state.player, this.state.currentEnemy);\n        }\n    }\n\n    attack = function (attacker, defender) {\n        let berserkNum = 0;\n        if (attacker.isBerserk) {\n            attacker.berserkCount++\n            berserkNum = Math.floor(attacker.strength / 2)\n        }\n\n        if (this.isBerserk === true) {\n            this.berserkCount++;\n            // console.log(this.berserkCount);\n            if (this.berserkCount > 2) {\n                this.berserkCount = 0;\n                this.isBerserk = false;\n                this.strength = this.berserkAtkHold\n                console.log(\" - Berserk has run out. - \\n\")\n            }\n        }\n\n        console.log(attacker.name + \" attacked \" + defender.name)\n        let attackMessage;\n        let damage;\n        let criticalCheck = this.randNum(1, 100);\n        let luckCheck = (attacker.luck - defender.luck) + 10;\n        if (luckCheck > 95) {\n            luckCheck = 95;\n        } else if (luckCheck < 5) {\n            luckCheck = 5;\n        }\n        console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n        if (criticalCheck >= luckCheck) {\n            damage = attacker.strength + berserkNum;\n            attackMessage = attacker.name + \" did \" + damage + \" damage.\";\n        } else {\n            damage = attacker.strength + Math.floor(attacker.strength * 0.25) + berserkNum;\n            attackMessage = \"Critical hit! \" + attacker.name + \" did \" + damage + \" damage.\";\n        }\n        defender.hp -= damage;\n        this.atkText(attacker, attackMessage);\n        // attacker.berserkCheck();\n    }\n    special = function (attacker, defender, name, cost) {\n        let attackMessage;\n        let damage;\n        let criticalCheck;\n        let luckCheck;\n        let speedCheck;\n\n        switch (name) {\n            case \"Axe Strike\":\n                criticalCheck = this.randNum(1, 100);\n                luckCheck = (attacker.luck - defender.luck) + 10;\n                if (luckCheck > 95) {\n                    luckCheck = 95;\n                } else if (luckCheck < 5) {\n                    luckCheck = 5;\n                }\n                console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n                if (criticalCheck >= luckCheck) {\n                    damage = attacker.strength + Math.floor(attacker.strength * 0.25);\n                    attackMessage = \"Axe did \" + damage + \" damage.\";\n                } else {\n                    damage = attacker.strength + Math.floor(attacker.strength * 0.5);\n                    attackMessage = \"Critical hit! Axe did \" + damage + \" damage.\";\n                }\n                defender.hp -= damage;\n                attacker.mp -= cost;\n                this.atkText(attacker, attackMessage);\n                break;\n\n            case \"Berserk\":\n                attacker.mp -= cost;\n                attacker.isBerserk = true;\n                attacker.berserkCount = 0;\n                this.atkText(attacker, attacker.name + \" is now Berserk!\");\n                // attacker.berserkCheck();\n                break;\n\n            case \"Fireball\":\n                criticalCheck = this.randNum(1, 100);\n                luckCheck = (attacker.luck - defender.luck) + 10;\n                if (luckCheck > 95) {\n                    luckCheck = 95;\n                } else if (luckCheck < 5) {\n                    luckCheck = 5;\n                }\n                console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n                if (criticalCheck >= luckCheck) {\n                    damage = attacker.mana + Math.floor(attacker.mana * 0.25);\n                    attackMessage = \"Fire did \" + damage + \" damage.\";\n                } else {\n                    damage = attacker.mana + Math.floor(attacker.mana * 0.5);\n                    attackMessage = \"Critical hit! Fire did \" + damage + \" damage.\";\n                }\n                defender.hp -= damage;\n                attacker.mp -= cost;\n                this.atkText(attacker, attackMessage);\n\n                // attacker.berserkCheck();\n                break;\n\n            case \"Heal\":\n                criticalCheck = this.randNum(1, 100);\n                luckCheck = (attacker.luck - defender.luck) + 10;\n                if (luckCheck > 95) {\n                    luckCheck = 95;\n                } else if (luckCheck < 5) {\n                    luckCheck = 5;\n                }\n                console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n                if (criticalCheck >= luckCheck) {\n                    damage = Math.floor(attacker.maxHp * 0.75);\n                    attackMessage = attacker.name + \" recovered \" + damage + \" HP.\";\n                } else {\n                    damage = attacker.maxHp;\n                    attackMessage = \"Wow! \" + attacker.name + \" recovered\" + damage + \" HP.\";\n                }\n                attacker.hp += damage;\n                if (attacker.hp > attacker.maxHp) {\n                    attacker.hp = attacker.maxHp;\n                }\n                attacker.mp -= cost;\n                this.atkText(attacker, attackMessage);\n\n                // attacker.berserkCheck();\n                break;\n\n            case \"Dagger Slash\":\n                criticalCheck = this.randNum(1, 100);\n                luckCheck = (attacker.luck - defender.luck) + 10;\n                if (luckCheck > 95) {\n                    luckCheck = 95;\n                } else if (luckCheck < 5) {\n                    luckCheck = 5;\n                }\n                console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n                if (criticalCheck >= luckCheck) {\n                    damage = attacker.strength + Math.floor(attacker.strength * 0.25);\n                    attackMessage = \"Dagger did \" + damage + \" damage.\";\n                } else {\n                    damage = attacker.mana + Math.floor(attacker.strength * 0.5);\n                    attackMessage = \"Critical hit! Dagger did \" + damage + \" damage.\";\n                }\n                defender.hp -= damage;\n                attacker.mp -= cost;\n                this.atkText(attacker, attackMessage);\n\n                // attacker.berserkCheck();\n                break;\n\n            case \"Steal\":\n                criticalCheck = this.randNum(1, 100);\n                speedCheck = (attacker.speed - defender.speed) + 60;\n                if (speedCheck > 95) {\n                    speedCheck = 95;\n                } else if (speedCheck < 5) {\n                    speedCheck = 5;\n                }\n                if (criticalCheck <= speedCheck) {\n                    const itemNum = this.randNum(0, defender.inventory.length);\n                    const item = defender.inventory[itemNum];\n                    this.transferItem(defender.inventory, attacker.inventory, item);\n                    this.atkText(attacker, attacker.name + \" stole \" + this.aOrAn(item.name) + \" \" + item.name + \".\");\n                } else {\n                    this.atkText(attacker, attacker.name + \" failed to steal anything.\");\n                }\n\n                attacker.mp -= cost;\n                // attacker.berserkCheck();\n                break;\n\n            default:\n            // code block\n        };\n    }\n\n    gameOverCheck = () => {\n        if (this.state.player.hp <= 0) {\n            let text = this.state.infoText;\n            text.push(this.state.currentEnemy.name + \" killed you.\");\n            text.push(\"--- RESULTS ---\");\n            text.push(\"Monsters Killed: \" + this.state.player.totalKills);\n            text.push(\"Gold Collected: \" + this.state.player.totalGold);\n            text.push(\"Quests Completed: \" + this.state.player.totalQuests);\n            text.push(\"Dungeons Completed: \" + this.state.player.totalDungeons);\n            this.setState({\n                message: \"Game over.\",\n                step: \"game over\",\n                infoText: text\n            });\n        }\n    };\n    selectReset = () => {\n        this.changePlayStates(\"title screen\", \"new or load\");\n        this.setState({\n            player: playerDefault,\n            message: \"Start again?\"\n        });\n    }\n    gainXp = (xpNum, player) => {\n        player.xp += xpNum;\n        let text = this.state.infoText;\n        text.push(\"You gained \" + xpNum + \" XP.\");\n        this.setState({\n            player: player,\n            xpResult: xpNum,\n            infoText: text\n        }, () => this.levelUpCheck(this.state.player))\n    };\n    levelUpCheck = (player) => {\n        if (player.xp >= player.nextLevel) {\n            player.level++;\n            player.nextLevel += player.level * 50;\n            player.strength += 2;\n            player.defense += 1;\n            player.speed += 1;\n            player.mana += 2;\n            player.luck += 1;\n            player.maxHp += 5;\n            player.hp = player.maxHp;\n            player.maxMp += 2;\n            player.mp = player.maxMp;\n\n            let text = this.state.infoText;\n            text.push(\"You are now lv. \" + player.level + \"!!!\");\n            if (player.level === 2) {\n                text.push(\"You learned \" + player.special1 + \"!!!!!\");\n            } else if (player.level === 6) {\n                text.push(\"You learned \" + player.special2 + \"!!!!!\");\n            }\n\n            this.setState({\n                player: player,\n                infoText: text\n            });\n            this.levelUpCheck(player);\n        };\n    };\n    selectRun = () => {\n        const player = this.state.player\n        const lostGold = this.randNum(0, Math.floor(player.gold / 2));\n        player.gold -= lostGold;\n        const lostHp = this.randNum(0, 3);\n        player.hp -= lostHp;\n        this.gameOverCheck();\n        this.setState({\n            task: \"select where\",\n            step: null,\n            movingForward: false,\n            message: \"You lost \" + lostGold + \" gold and \" + lostHp + \" HP.\",\n        });\n\n    }\n    dropGold = () => {\n        const amount = this.randNum(0, this.state.currentEnemy.gold);\n        let text = this.state.infoText;\n        text.push(this.state.currentEnemy.name + \" dropped \" + amount + \" gold.\")\n        let player = this.state.player;\n        player.gold = player.gold + amount;\n        player.totalGold = player.totalGold + amount;\n        this.setState({\n            player: player,\n            infoText: text,\n            goldResult: amount\n        });\n    };\n    dropLoot = (enemy) => {\n        if (enemy.name === \"Mimic\") {\n            let text = this.state.infoText;\n            enemy.inventory.forEach(item => {\n                this.transferItem(enemy.inventory, this.state.player.inventory, item)\n                text.push(enemy.name + \" dropped \" + this.aOrAn(item.name) + \" \" + item.name + \".\");\n            });\n            this.setState({\n                infoText: text\n            })\n        } else {\n            const lootCheck = this.randNum(1, 5);\n            if (lootCheck === 1) {\n                if (enemy.inventory.length) {\n                    const itemNum = this.randNum(0, enemy.inventory.length);\n                    const item = enemy.inventory[itemNum];\n                    this.transferItem(enemy.inventory, this.state.player.inventory, item)\n                    let text = this.state.infoText;\n                    text.push(enemy.name + \" dropped \" + this.aOrAn(item.name) + \" \" + item.name + \".\");\n                    this.setState({\n                        infoText: text\n                    })\n                } else {\n                    console.log(\"enemy has no items\")\n                }\n            }\n        }\n    }\n    //town functions\n    render() {\n        const code = \"< / >\"\n        let playerStyle;\n        if (this.state.player.hp > 0) {\n            playerStyle = \"dom-blue-text font1\"\n        } else {\n            playerStyle = \"grey-text font1\"\n        }\n        let playerHpStyle;\n        if (this.state.player.hp > (this.state.player.maxHp * 0.25)) {\n            playerHpStyle = \"dom-blue-text\"\n        } else if (this.state.player.hp > 0) {\n            playerHpStyle = \"red-text\"\n        } else {\n            playerHpStyle = \"grey-text\"\n        }\n        let playerMpStyle;\n        if (this.state.player.hp <= 0) {\n            playerMpStyle = \"grey-text\"\n        } else if (this.state.player.mp <= 0) {\n            playerMpStyle = \"grey-text\"\n        } else if (this.state.player.mp > 0 && this.state.player.mp < (this.state.player.maxMp * 0.25)) {\n            playerMpStyle = \"red-text\"\n        } else {\n            playerMpStyle = \"dom-blue-text\"\n        }\n        let playerXpStyle;\n        if (this.state.player.xp === 0 || this.state.player.hp <= 0) {\n            playerXpStyle = \"grey-text\"\n        } else {\n            playerXpStyle = \"dom-blue-text\"\n        }\n        let playerGoldStyle;\n        if (this.state.player.hp <= 0 || this.state.player.gold === 0) {\n            playerGoldStyle = \"grey-text\"\n        } else if (this.state.player.gold <= 10 && this.state.player.gold > 0) {\n            playerGoldStyle = \"red-text\"\n        } else {\n            playerGoldStyle = \"dom-blue-text\"\n        }\n\n        let enemyStyle;\n        if (this.state.currentEnemy.hp > 0) {\n            enemyStyle = \"dom-green2-text font1\"\n        } else {\n            enemyStyle = \"grey-text font1\"\n        }\n        let enemyHpStyle;\n        if (this.state.currentEnemy.hp > (this.state.currentEnemy.maxMp * 0.25)) {\n            enemyHpStyle = \"dom-green2-text font1\"\n        } else if (this.state.currentEnemy.hp > 0) {\n            enemyHpStyle = \"red-text font1\"\n        } else {\n            enemyHpStyle = \"grey-text font1\"\n        }\n\n        let specialBtnStyle1;\n        if (this.state.player.level < 2) {\n            specialBtnStyle1 = \"hide\"\n        } else if (this.state.player.mp >= this.state.player.special1Cost) {\n            specialBtnStyle1 = \"\"\n        } else {\n            specialBtnStyle1 = \"disabled-div\"\n        }\n\n        let specialBtnStyle2;\n        if (this.state.player.level < 5) {\n            specialBtnStyle2 = \"hide\"\n        } else if (this.state.player.mp >= this.state.player.special2Cost) {\n            specialBtnStyle2 = \"\"\n        } else {\n            specialBtnStyle2 = \"disabled-div\"\n        }\n\n        return (\n            <div>\n                {/* <!-- TOP NAVBAR --> */}\n                <div id=\"top-nav-container\" className=\"navbar-fixed\">\n                    <nav id=\"top-nav\" className=\"nav-wrapper navbar-fixed grey darken-4\">\n\n                        <div className=\"container\">\n                            <a href=\"#!\" className=\"sidenav-trigger left\" data-target=\"side-modal-game\">\n                                <i className=\"material-icons\">menu</i>\n                            </a>\n\n                            <a href=\"/\" className=\"brand-logo\">\n                                <img src={DLogo} id=\"logo-top\" className=\"left valign-wrapper\" alt=\"D Logo\" />\n                            </a>\n                        </div>\n                    </nav>\n                </div>\n\n                {/* <!-- Modal side navbar --> */}\n                <ul id=\"side-modal-game\" className=\"sidenav center-align font1\">\n                    <li>\n                        <a href=\"#Save\" className=\"white-text\" onClick={this.showSave}>Save</a>\n                    </li>\n                    <li>\n                        <a href=\"#Quests\" className=\"white-text\" onClick={this.showQuests}>Quests</a>\n                    </li>\n                    <li>\n                        <a href=\"#Stats\" className=\"white-text\" onClick={this.showStats}>Stats</a>\n                    </li>\n                    <li>\n                        <a className=\"lime-text\" onClick={this.toggleGame.bind(this)}>{code}</a>\n                    </li>\n                </ul>\n                {/* <!-- End NavBar --> */}\n\n                {/* <!-- LEFT MAIN SIDEBAR\t --> */}\n                <ul id=\"side-nav\" className=\"sidenav sidenav-fixed grey darken-4 center-align z-depth-0 font1\">\n                    <li>\n                        <a id=\"logo-side-a\" href=\"\">\n                            <img id=\"logo-side\" src={DLogo} alt=\"D Logo\" />\n                        </a>\n                    </li>\n                    <div className=\"table-of-contents\">\n                        <li>\n                            <a href=\"#Save\" className=\"white-text\" onClick={this.showSave}>Save</a>\n                        </li>\n                        <li>\n                            <a href=\"#Quests\" className=\"white-text\" onClick={this.showQuests}>Quests</a>\n                        </li>\n                        <li>\n                            <a href=\"#Stats\" className=\"white-text\" onClick={this.showStats}>Stats</a>\n                        </li>\n                        <li>\n                            <a className=\"grey-text\" onClick={this.toggleGame.bind(this)}>{code}</a>\n                        </li>\n                    </div>\n                </ul>\n\n                <div id=\"game-container\" >\n                    <div className=\"container white-text fade\">\n                        <div className=\"row\">\n                            <h3 className=\"font2 center-align\">FANTASY RPG</h3>\n\n                            {this.state.showSave ?\n                                <div>\n                                    <p className=\"font1 center-align\">- Save Game -</p>\n                                    <p>Do you wish to save?</p>\n                                    <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.saveGame}>\n                                        Save\n                                        </button>\n                                    <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectExit}>\n                                        Exit\n                                        </button>\n                                </div>\n                                : this.state.showQuests ?\n                                    <div>\n                                        <p className=\"font1 center-align\">- Quests -</p>\n                                        {this.state.quests.length ? this.state.quests.map((quest, index) => (\n\n                                            <div key={index} className=\"game-info\">\n                                                <h5>{quest.name}</h5>\n                                                <p>Region: {quest.region}</p>\n                                                <p>{quest.info}</p>\n                                                <p>Reward: {quest.amount} {quest.reward}</p>\n                                                <p className={quest.completed ? \"dom-green1-text\" : null}>Progress: {quest.count}/{quest.goal}</p>\n                                                <br />\n                                                <button className=\"btn btn-flat game-blue-btn font2\" data-index={index} onClick={this.selectAbandonQuest}>\n                                                    Abandon Quest\n                                                    </button>\n                                            </div>\n                                        )) : <p>You have no quests...</p>}\n                                        <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectExit}>\n                                            <i className=\"material-icons left\">arrow_back</i>Back\n                                        </button>\n                                    </div>\n                                    : this.state.showStats ?\n                                        <div>\n                                            <p className=\"font1 center-align\">- Player Stats -</p>\n                                            <p>{this.state.player.name} | Lv. {this.state.player.level} | {this.state.player.race} | {this.state.player.class} | ${this.state.player.gold}</p>\n                                            <p>HP: {this.state.player.hp}/{this.state.player.maxHp} | MP: {this.state.player.mp}/{this.state.player.maxMp} | XP: {this.state.player.xp}/{this.state.player.nextLevel}</p>\n                                            <p>ATK: {this.state.player.strength} | DEF: {this.state.player.defense} | MANA: {this.state.player.mana}</p>\n                                            <p>SPD: {this.state.player.speed} | LUCK: {this.state.player.luck}</p>\n                                            <p className=\"font1 center-align\">- Inventory -</p>\n                                            {this.state.player.inventory.length ? this.state.player.inventory.map((item, index) => (\n                                                <p key={index}>{item.name} x {item.qty}</p>\n                                            )) : <p>You have no items...</p>}\n                                            <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectExit}>\n                                                <i className=\"material-icons left\">arrow_back</i>Back\n                                            </button>\n                                        </div>\n                                        :\n                                        <div>\n                                            <p className=\"font1 center-align\">- {this.state.region.name} | {this.state.location} -</p>\n                                            <h5>{this.state.message}</h5>\n                                            {this.state.task === \"fight\" ?\n                                                <p className={enemyStyle}><i className=\"material-icons left\">adb</i>{this.state.currentEnemy.name}<span className=\"white-text\"> | </span><span className={enemyHpStyle}>HP: {this.state.currentEnemy.hp}/{this.state.currentEnemy.maxHp}</span><span className=\"white-text\"> | </span>ATK: {this.state.currentEnemy.strength}</p>\n                                                : null}\n                                            {this.state.location !== \"title screen\" ?\n                                                <div>\n                                                    <p className={playerStyle}>\n                                                        <i className=\"material-icons left\">person</i>{this.state.player.name}<span className=\"white-text\"> | </span>\n                                                        <span className={playerHpStyle}>HP: {this.state.player.hp}/{this.state.player.maxHp}</span><span className=\"white-text\"> | </span>\n                                                        <span className={playerMpStyle}>MP: {this.state.player.mp}/{this.state.player.maxMp}</span><span className=\"white-text\"> | </span>\n                                                        <span className={playerXpStyle}>XP: {this.state.player.xp}/{this.state.player.nextLevel}</span><span className=\"white-text\"> | </span>\n                                                        <span className={playerGoldStyle}>${this.state.player.gold}</span>\n                                                        {this.state.player.isBerserk ? <span><span className=\"white-text\"> - </span>Berserk</span> : null}\n                                                    </p>\n                                                </div>\n                                                : null}\n                                            {this.state.task === \"fight\" || this.state.task === \"chest\" && this.state.step === \"results\" || this.state.step === \"game over\" ?\n                                                <div className=\"game-info\">\n                                                    {this.state.infoText.map((text, index) => (\n                                                        <p key={index}>{text}</p>\n                                                    ))}\n                                                </div>\n                                                : null}\n                                            {this.state.location === \"title screen\" && this.state.task === \"new or load\" ?\n                                                <div>\n                                                    <button className=\"btn btn-flat game-blue-btn font2\" type=\"button\" onClick={this.newGame}>\n                                                        New Game\n                                    </button>\n                                                    {/* <button className=\"btn btn-flat game-blue-btn font2\" type=\"button\" onClick={this.loadGame}>\n                                        Load Game\n                                    </button> */}\n                                                </div>\n                                                : this.state.location === \"title screen\" && this.state.task === \"create character\" && this.state.step === \"name\" ?\n                                                    <div>\n                                                        <form id=\"game-form\" onSubmit={this.handleName}>\n                                                            <div className=\"row\">\n                                                                <div className=\"input-field col s12\">\n                                                                    <input type=\"text\" className=\"form-input\" name=\"inputName\" value={this.state.inputName} onChange={this.handleInputChange} />\n                                                                    <label htmlFor=\"inputName\" className=\"font1\">Name</label>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row\">\n                                                                <div className=\"col m12\">\n                                                                    <button\n                                                                        className=\"btn btn-flat game-blue-btn font2\"\n                                                                        type=\"submit\" name=\"action\" value=\"Send\">Enter</button>\n                                                                </div>\n                                                            </div>\n                                                        </form>\n\n                                                    </div>\n                                                    : this.state.location === \"title screen\" && this.state.task === \"create character\" && this.state.step === \"race\" ?\n                                                        <div>\n                                                            <button className=\"btn btn-flat game-choice-btn font2\" value=\"Human\" onClick={this.selectRace}>\n                                                                Human\n                                    </button>\n                                                            <button className=\"btn btn-flat game-choice-btn font2\" value=\"Elf\" onClick={this.selectRace}>\n                                                                Elf\n                                    </button>\n                                                            <button className=\"btn btn-flat game-choice-btn font2\" value=\"Dwarf\" onClick={this.selectRace}>\n                                                                Dwarf\n                                    </button>\n                                                        </div>\n                                                        : this.state.location === \"title screen\" && this.state.task === \"create character\" && this.state.step === \"class\" ?\n                                                            <div>\n                                                                <button className=\"btn btn-flat game-choice-btn font2\" value=\"Warrior\" onClick={this.selectClass}>\n                                                                    Warrior\n                                    </button>\n                                                                <button className=\"btn btn-flat game-choice-btn font2\" value=\"Mage\" onClick={this.selectClass}>\n                                                                    Mage\n                                    </button>\n                                                                <button className=\"btn btn-flat game-choice-btn font2\" value=\"Rogue\" onClick={this.selectClass}>\n                                                                    Rogue\n                                    </button>\n                                                            </div>\n                                                            : null}\n\n                                            {this.state.location === \"wild\" && this.state.task === \"select where\" && this.state.step === null ?\n                                                <div>\n                                                    <p>Where to next?</p>\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectExplore}>\n                                                        Explore\n                                            </button>\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToTown}>\n                                                        Go to town\n                                            </button>\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectUseItem}>\n                                                        Use Item\n                                            </button>\n                                                </div>\n                                                : this.state.location === \"dungeon\" && this.state.task === \"select where\" && this.state.step === null ?\n                                                    <div>\n                                                        <p>What next?</p>\n                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectVentureDeeper}>\n                                                            Venture Deeper\n                                            </button>\n                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectUseItem}>\n                                                            Use Item\n                                            </button>\n                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectLeaveDungeon}>\n                                                            <i className=\"material-icons left\">arrow_back</i>Leave Dungeon\n                                        </button>\n                                                    </div>\n                                                    : this.state.step === \"use item\" ?\n                                                        <div>\n                                                            <p>{this.state.subMessage}</p>\n                                                            {this.state.player.inventory.map((item, index) => (\n                                                                <div key={index}>\n                                                                    <button value={item.name} data-index={index} data-info={item.info} className=\"btn btn-flat game-item-btn font2\" onMouseOver={this.showItemInfo} onMouseOut={this.showSelectItem} onClick={this.selectItem}>\n                                                                        {item.name}\n                                                                    </button>\n                                                                    <span className=\"font1 fontSmall\"> x {item.qty}</span>\n                                                                </div>\n                                                            ))}\n                                                            <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                                                <i className=\"material-icons left\">arrow_back</i>Back\n                                        </button>\n                                                        </div>\n                                                        : this.state.location === \"town\" && this.state.task === \"select where\" && this.state.step === null ?\n                                                            <div>\n                                                                <p>What next?</p>\n                                                                <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToInn}>\n                                                                    Stay at Inn\n                                            </button>\n                                                                <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToTavern}>\n                                                                    Visit Tavern\n                                            </button>\n                                                                <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToShop}>\n                                                                    Go to Shop\n                                            </button>\n                                                                <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectUseItem}>\n                                                                    Use Item\n                                            </button>\n                                                                <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToWild}>\n                                                                    <i className=\"material-icons left\">arrow_back</i>Leave Town\n                                            </button>\n                                                            </div>\n                                                            : this.state.location === \"town\" && this.state.task === \"inn\" && this.state.step === \"accept\" ?\n                                                                <div>\n                                                                    <p>{this.state.messageSub}</p>\n                                                                    <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectYesInn}>\n                                                                        Yes\n                                                                    </button>\n                                                                    <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNoInn}>\n                                                                        No\n                                                                    </button>\n                                                                </div>\n                                                                : this.state.location === \"town\" && this.state.task === \"tavern\" && this.state.step === \"select next\" ?\n                                                                    <div>\n                                                                        <p>What next?</p>\n                                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectGrabMead}>\n                                                                            Grab a Mead\n                                                                        </button>\n                                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectGetQuest}>\n                                                                            Quest Board\n                                                                        </button>\n                                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectCashQuest}>\n                                                                            Quest Rewards\n                                                                        </button>\n\n                                                                        {/* <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectPlayGame}>\n                                                            Play Game\n                                                        </button> */}\n                                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectUseItem}>\n                                                                            Use Item\n                                                                        </button>\n                                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                                                            <i className=\"material-icons left\">arrow_back</i>Leave Tavern\n                                                                        </button>\n                                                                    </div>\n                                                                    : this.state.task === \"tavern\" && this.state.step === \"accept mead\" ?\n                                                                        <div>\n                                                                            <p>{this.state.messageSub}</p>\n                                                                            <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectYesMead}>\n                                                                                Yes\n                                                                            </button>\n                                                                            <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNoMead}>\n                                                                                No\n                                                                            </button>\n                                                                        </div>\n                                                                        : this.state.task === \"tavern\" && this.state.step === \"select quest\" ?\n                                                                            <div>\n                                                                                {this.state.tavernQuests.length ?\n                                                                                    <div>\n                                                                                        <p>Which quest intrigues you?</p>\n                                                                                        {this.state.tavernQuests.map((quest, index) => (\n                                                                                            <div key={index} className=\"game-info\">\n                                                                                                <h5>{quest.name}</h5>\n                                                                                                <p>{quest.info}</p>\n                                                                                                <p>Region: {quest.region}</p>\n                                                                                                <p>Reward: {quest.amount} {quest.reward}</p>\n                                                                                                <button className=\"btn btn-flat game-blue-btn font2\" data-index={index} onClick={this.selectYesQuest}>\n                                                                                                    Accept Quest\n                                                                                                </button>\n                                                                                            </div>\n                                                                                        ))}\n                                                                                    </div>\n                                                                                    : <p>Board is currently empty.</p>}\n                                                                                <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                                                                    <i className=\"material-icons left\">arrow_back</i>Back\n                                                                                </button>\n                                                                            </div>\n                                                                            : this.state.task === \"tavern\" && this.state.step === \"cash quest\" ?\n                                                                                <div>\n                                                                                    {!this.state.quests.length ?\n                                                                                        <p>You currently have no quests.</p>\n                                                                                        : this.hasRegionQuest() ?\n                                                                                            <div>\n                                                                                                <p>Cash in which quest?</p>\n                                                                                                {this.state.quests.map((quest, index) => (\n                                                                                                    <div key={index}>\n                                                                                                        {quest.region === this.state.region.name ?\n                                                                                                            <div class={quest.completed && quest.region === this.state.region.name ?\n                                                                                                                null\n                                                                                                                : \"disabled-div\"}>\n                                                                                                                <button\n                                                                                                                    data-index={index}\n                                                                                                                    data-type={quest.type}\n                                                                                                                    data-task={quest.task}\n                                                                                                                    data-goal={quest.goal}\n                                                                                                                    data-amount={quest.amount}\n                                                                                                                    data-reward={quest.reward}\n                                                                                                                    data-rarity={quest.rarity}\n                                                                                                                    data-item={quest.itemIndex}\n                                                                                                                    className=\"btn btn-flat game-item-btn font2\"\n                                                                                                                    onClick={this.selectRedeemReward}>\n                                                                                                                    {quest.amount} {quest.reward} | {quest.name}\n                                                                                                                </button>\n                                                                                                                <span className=\"font1 fontSmall\"> - {quest.count}/{quest.goal}</span>\n                                                                                                            </div>\n                                                                                                            : null}\n                                                                                                    </div>\n                                                                                                ))}\n                                                                                            </div>\n                                                                                            : <p>You currently have no quests for this region.</p>}\n                                                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                                                                        <i className=\"material-icons left\">arrow_back</i>Back\n                                                                                </button>\n                                                                                </div>\n                                                                                : null}\n\n                                            {this.state.location === \"wild\" && this.state.task === \"select where\" && this.state.step === null && this.state.region.index !== 1 ?\n                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectTravelBackward}>\n                                                    <i className=\"material-icons left\">arrow_back</i>Head Back\n                                </button>\n                                                : null}\n                                            {this.state.location === \"wild\" && this.state.task === \"select where\" && this.state.step === null && this.state.region.index < regions.length ?\n                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectTravelForward}>\n                                                    <i className=\"material-icons right\">arrow_forward</i>Travel Onward\n                                </button>\n                                                : null}\n                                            {this.state.task === \"fight\" && this.state.step === \"select move\" ?\n                                                <div>\n                                                    <p>What next?</p>\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectAttack}>\n                                                        Attack\n                                    </button>\n                                                    <div className={specialBtnStyle1}>\n                                                        <button className=\"btn btn-flat game-item-btn font2\" value={this.state.player.special1} data-cost={this.state.player.special1Cost} onClick={this.selectSpecial}>\n                                                            {this.state.player.special1}\n                                                        </button>\n                                                        <span className=\"font1 fontSmall\"> - {this.state.player.special1Cost} MP</span>\n                                                    </div>\n                                                    <div className={specialBtnStyle2}>\n                                                        <button className=\"btn btn-flat game-item-btn font2\" value={this.state.player.special2} data-cost={this.state.player.special2Cost} onClick={this.selectSpecial}>\n                                                            {this.state.player.special2}\n                                                        </button>\n                                                        <span className=\"font1 fontSmall\"> - {this.state.player.special2Cost} MP</span>\n                                                    </div>\n                                                    {/* <button className={specialBtnStyle2} value={this.state.player.special2} data-cost={this.state.player.special2Cost} onClick={this.selectSpecial}>\n                                        {this.state.player.special2}<span className=\"font1 fontSmall\"> - {this.state.player.special2Cost} MP</span>\n                                    </button> */}\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectUseItem}>\n                                                        Use Item\n                                            </button>\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectRun}>\n                                                        <i className=\"material-icons left\">arrow_back</i>Run\n                                            </button>\n                                                </div>\n                                                : this.state.task === \"fight\" && this.state.step === \"results\" ?\n                                                    <div>\n                                                        <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNext}>\n                                                            Next\n                                            </button>\n                                                    </div>\n                                                    : this.state.task === \"chest\" && this.state.step === \"results\" ?\n                                                        <div>\n                                                            <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNext}>\n                                                                Next\n                                            </button>\n                                                        </div>\n                                                        : this.state.task === \"chest\" && this.state.step === \"accept\" ?\n                                                            <div>\n                                                                <p>Do you wish to open it?</p>\n                                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectYesChest}>\n                                                                    Yes\n                                                </button>\n                                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNext}>\n                                                                    No\n                                                </button>\n                                                            </div>\n                                                            : this.state.step === \"game over\" ?\n                                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectReset}>\n                                                                    End\n                                            </button>\n                                                                : this.state.task === \"dungeon\" && this.state.step === \"accept\" ?\n                                                                    <div>\n                                                                        <p>Do you dare to enter?</p>\n                                                                        <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectYesDungeon}>\n                                                                            Yes\n                                                        </button>\n                                                                        <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectBack}>\n                                                                            No\n                                                        </button>\n                                                                    </div>\n                                                                    : this.state.step === \"game over\" ?\n                                                                        <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectReset}>\n                                                                            End\n                                            </button>\n                                                                        : null}\n                                            {this.state.task === \"shop\" && this.state.step === \"buy or sell\" ?\n                                                <div>\n                                                    <p>What next?</p>\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBuy}>\n                                                        Buy\n                                            </button>\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectSell}>\n                                                        Sell\n                                            </button>\n                                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                                        <i className=\"material-icons left\">arrow_back</i>Back\n                                            </button>\n                                                </div>\n                                                : this.state.task === \"shop\" && this.state.step === \"buy\" ?\n                                                    <div>\n                                                        <p>{this.state.subMessage}</p>\n                                                        {this.state.merchant.map((item, index) => (\n                                                            <div key={index}>\n                                                                <button value={item.name} data-index={index} data-price={item.buy} className=\"btn btn-flat game-item-btn font2\" onMouseOver={this.showItemPrice} onMouseOut={this.showSelectItem} onClick={this.buyItem}>\n                                                                    {item.name}\n                                                                </button>\n                                                                <span className=\"font1 fontSmall\"> ${item.buy} x {item.qty}</span>\n                                                            </div>\n                                                        ))}\n                                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                                            <i className=\"material-icons left\">arrow_back</i>Back\n                                        </button>\n                                                    </div>\n                                                    : this.state.task === \"shop\" && this.state.step === \"sell\" ?\n                                                        <div>\n                                                            <p>{this.state.subMessage}</p>\n                                                            {this.state.player.inventory.map((item, index) => (\n                                                                <div key={index}>\n                                                                    <button value={item.name} data-index={index} data-price={item.sell} className=\"btn btn-flat game-item-btn font2\" onMouseOver={this.showItemPrice} onMouseOut={this.showSelectItem} onClick={this.sellItem}>\n                                                                        {item.name}\n                                                                    </button>\n                                                                    <span className=\"font1 fontSmall\"> ${item.sell} x {item.qty}</span>\n                                                                </div>\n                                                            ))}\n                                                            <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                                                <i className=\"material-icons left\">arrow_back</i>Back\n                                        </button>\n                                                        </div>\n                                                        : null}\n                                        </div>}\n                        </div>\n                    </div>\n                    <div className=\"spacer\" />\n                </div>\n            </div>\n        );\n    }\n}\nexport default Game;","import React, { Component } from \"react\";\nimport M from 'materialize-css';\nimport Nav from \"./components/Nav\"\nimport Parallax from \"./components/Parallax\"\nimport Portfolio from \"./components/Portfolio\"\nimport About from \"./components/About\"\nimport Contact from \"./components/Contact\"\nimport Footer from \"./components/Footer\"\nimport Game from \"./components/Game\"\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n    playingGame: false\n  };\n\n  componentDidMount() {\n    //Auto initialize all materialize components\n    M.AutoInit();\n  }\n\n  startGame = () => {\n    this.setState({ playingGame: true });\n  }\n\n  endGame = () => {\n    this.setState({ playingGame: false });\n  }\n\n  render() {\n\n\n    return (\n\n      <div className=\"App\">\n\n        <div className=\"main-container\">\n          {this.state.playingGame ?\n            <Game\n              playingGame={this.state.playingGame}\n              endGame={this.endGame}\n            />\n            :\n            <Nav\n              playingGame={this.state.playingGame}\n              startGame={this.startGame}\n            />\n          }\n\n          <Parallax />\n          <Portfolio />\n          <About />\n          <Contact />\n          <Footer />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}