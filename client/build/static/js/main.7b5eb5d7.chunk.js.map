{"version":3,"sources":["images/D_logo_final.png","images/github-logo.png","files/dro_resume.pdf","images/trivia-game/trivia-results.jpg","images/d-logo.png","images/linkedin-logo.png","images/resume-logo.png","images/trees2.jpg","images/meal-planner/meal-planner-mockup.png","images/meal-planner/meal-planner-paint.png","images/meal-planner/meal-planner-search.jpg","images/meal-planner/meal-planner-fav.jpg","images/meal-planner/meal-planner-cal.jpg","images/wizard-words/wizard-words-mockup.png","images/wizard-words/wizard-words-paint.png","images/wizard-words/wizard-words-guess.jpg","images/wizard-words/wizard-words-lose.jpg","images/wizard-words/wizard-words-win.jpg","images/scifi-rpg/scifi-rpg-mockup.png","images/scifi-rpg/scifi-rpg-paint.png","images/scifi-rpg/scifi-rpg-lose.jpg","images/scifi-rpg/scifi-rpg-win.jpg","images/scifi-rpg/scifi-rpg-fight.jpg","images/socrates/socrates-mockup.png","images/socrates/socrates-paint.png","images/socrates/socrates-prompt.jpg","images/socrates/socrates-results.jpg","images/socrates/socrates-choices.jpg","images/trivia-game/trivia-mockup.png","images/trivia-game/trivia-paint.png","images/trivia-game/trivia-start.jpg","images/fur-butlr/fur-butlr-mockup.png","images/fur-butlr/fur-butlr-paint.png","images/fur-butlr/fur-butlr-results.jpg","images/fur-butlr/fur-butlr-update.jpg","images/fur-butlr/fur-butlr-profile.jpg","images/bug-memory/bug-memory-mockup.png","images/bug-memory/bug-memory-paint.png","images/bug-memory/bug-memory-win.jpg","images/bug-memory/bug-memory-lose.jpg","images/bug-memory/bug-memory-cards.jpg","images/book-finder/book-finder-mockup.png","images/book-finder/book-finder-paint.png","images/book-finder/book-finder-home.jpg","images/book-finder/book-finder-results.jpg","images/book-finder/book-finder-saved.jpg","images/tool-logos/html-logo.png","images/tool-logos/css-logo.png","images/tool-logos/js-logo.png","images/tool-logos/jquery-logo.png","images/tool-logos/node-logo.png","images/tool-logos/react-logo.png","images/tool-logos/mysql-logo.png","images/tool-logos/mongodb-logo.png","images/tool-logos/bootstrap-logo.png","images/tool-logos/materialize-logo.png","images/tool-logos/ps-logo.png","images/tool-logos/illustrator-logo.png","images/tree-logo.png","images/space-logo.png","images/art-logo.png","images/game-logo.png","components/Nav/index.js","components/Parallax/index.js","components/Portfolio/index.js","components/About/index.js","components/Contact/index.js","components/Footer/index.js","components/Game/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","toggleGame","_this","props","playingGame","startGame","endGame","console","log","this","react_default","a","createElement","id","className","href","data-target","src","DLogo","alt","Resume","target","onClick","bind","Component","Parallax","DLogoWhite","LinkedinLogo","GitHubLogo","ResumeLogo","TreeBG","Portfolio","state","currentProject","currentList","allProjects","title","mockup","MealPlannerMockup","paint","MealPlannerPaint","img1","MealPlannerImg1","img2","MealPlannerImg2","img3","MealPlannerImg3","visit","code","sum","list","WizardWordsMockup","WizardWordsPaint","WizardWordsImg1","WizardWordsImg2","WizardWordsImg3","ScifiRpgMockup","ScifiRpgPaint","ScifiRpgImg1","ScifiRpgImg2","ScifiRpgImg3","SocratesMockup","SocratesPaint","SocratesImg1","SocratesImg2","SocratesImg3","TriviaMockup","TriviaPaint","TriviaImg1","TriviaImg2","TriviaImg3","FurButlrMockup","FurButlrPaint","FurButlrImg1","FurButlrImg2","FurButlrImg3","BugMemoryMockup","BugMemoryPaint","BugMemoryImg1","BugMemoryImg2","BugMemoryImg3","BookFinderMockup","BookFinderPaint","BookFinderImg1","BookFinderImg2","BookFinderImg3","handleSelect","event","tag","currentTarget","dataset","setState","_this2","type","name","join","map","project","index","key","data-tag","About","handleRotate","logo","classList","contains","remove","add","setTimeout","HtmlLogo","CssLogo","JsLogo","JQueryLogo","ReactLogo","NodeLogo","MySqlLogo","MongoDbLogo","BootstrapLogo","MaterializeLogo","PhotoshopLogo","IllustratorLogo","TreeLogo","SpaceLogo","ArtLogo","GameLogo","email","message","handleInputChange","_event$target","value","Object","defineProperty","handleSubmit","preventDefault","alert","trim","bottle","document","getElementById","reset","onSubmit","onChange","htmlFor","messages","Footer","Game","messageSub","infoText","region","regions","location","task","step","inputName","movingForward","player","playerDefault","currentEnemy","maxHp","hp","maxMp","mp","strength","speed","xp","inventory","gold","isDead","merchant","changePlayStates","randNum","x","y","Math","floor","random","aOrAn","word","firstLetter","charAt","atkText","attacker","attackMessage","text","push","gameOverCheck","handleCheck","addItem","array","item","newItem","order","qty","buy","sell","info","inInventory","forEach","element","sort","b","orderA","orderB","comparison","removeItem","i","splice","loadGame","newGame","handleName","objectSpread","newName","toUpperCase","slice","selectRace","maxHpA","maxMpA","strengthA","defenseA","manaA","speedA","luckA","newPlayer","race","defense","mana","luck","selectClass","special1A","special2A","special1CostA","special2CostA","class","special1","special2","special1Cost","special2Cost","items1","items3","selectToWild","selectUseItem","useMessage","length","subMessage","selectItem","getAttribute","includes","activateItem","buyItem","shop","price","transferItem","sellItem","parseInt","showItemInfo","showItemPrice","shopWord","cost","showSelectItem","user","opponent","amount","enemyTurn","selectToTown","randItem","items2","selectToInn","level","selectSafeTripCheck","monsterEncounter","selectYesInn","selectNoInn","selectToShop","selectBuy","shopMessage","selectSell","selectExploreWild","chestEncounter","selectNext","selectBack","selectTravelForward","viciousEncounter","travelForwardSuccess","selectTravelBackward","addEnemyItems","enemy","alternateMessage","rangeNum","playerLevel","regionIndex","monsterArray","regionLevel","regionTarget","targetLevel","monsters1","monsters2","monsters3","ceil","monNum","newEnemy","mimicEncounter","selectYesChest","goldNum","totalGold","itemNum","selectAttack","attack","totalKills","dropGold","dropLoot","gainXp","selectSpecial","specialCost","specialName","special","defender","damage","criticalCheck","luckCheck","speedCheck","totalDungeons","selectReset","xpNum","xpResult","levelUpCheck","nextLevel","selectRun","lostGold","lostHp","goldResult","fromArr","toArr","playerStyle","playerHpStyle","playerMpStyle","playerXpStyle","playerGoldStyle","enemyStyle","enemyHpStyle","specialBtnStyle1","specialBtnStyle2","data-index","data-info","onMouseOver","onMouseOut","selectToTavern","data-cost","data-price","App","M","AutoInit","components_Game","components_Nav","components_Parallax","components_Portfolio","components_About","Contact","components_Footer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kbAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,siECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAA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","file":"static/js/main.7b5eb5d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/D_logo_final.9f1dd4e1.png\";","module.exports = __webpack_public_path__ + \"static/media/github-logo.7ecca126.png\";","module.exports = __webpack_public_path__ + \"static/media/dro_resume.187be2f5.pdf\";","module.exports = __webpack_public_path__ + \"static/media/trivia-results.add4377a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/d-logo.52a198ab.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-logo.5aafb28a.png\";","module.exports = __webpack_public_path__ + \"static/media/resume-logo.28437f26.png\";","module.exports = __webpack_public_path__ + \"static/media/trees2.76798ba3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-mockup.ccd8c867.png\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-paint.07001928.png\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-search.4a5f0a05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-fav.83769f82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meal-planner-cal.d74fbff0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-mockup.a61118bf.png\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-paint.d90a11cc.png\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-guess.42c2dd82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-lose.8ebe3bb9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-words-win.51c82111.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-mockup.f8cfa65d.png\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-paint.afa98680.png\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-lose.94f981b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-win.3dad5cad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scifi-rpg-fight.641725b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/socrates-mockup.35e858bb.png\";","module.exports = __webpack_public_path__ + \"static/media/socrates-paint.e1e37cbd.png\";","module.exports = __webpack_public_path__ + \"static/media/socrates-prompt.d2d426aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/socrates-results.a9846962.jpg\";","module.exports = __webpack_public_path__ + \"static/media/socrates-choices.24a5cbba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trivia-mockup.df491a11.png\";","module.exports = __webpack_public_path__ + \"static/media/trivia-paint.0527b8fc.png\";","module.exports = __webpack_public_path__ + \"static/media/trivia-start.0e7576b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-mockup.a24c176b.png\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-paint.212fb7d9.png\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-results.522b17e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-update.542d1b09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fur-butlr-profile.79743574.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-mockup.396bff88.png\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-paint.e4c2a1cf.png\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-win.b12f599f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-lose.15972da2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bug-memory-cards.865ba044.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-mockup.56ec7fbb.png\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-paint.21774f90.png\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-home.d0d64511.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-results.7cb6ad7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book-finder-saved.22bf6861.jpg\";","module.exports = __webpack_public_path__ + \"static/media/html-logo.9a353053.png\";","module.exports = __webpack_public_path__ + \"static/media/css-logo.ecef881f.png\";","module.exports = __webpack_public_path__ + \"static/media/js-logo.b17e547e.png\";","module.exports = __webpack_public_path__ + \"static/media/jquery-logo.1c56ac0e.png\";","module.exports = __webpack_public_path__ + \"static/media/node-logo.1cff54b2.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.6e4fe0da.png\";","module.exports = __webpack_public_path__ + \"static/media/mysql-logo.513fc359.png\";","module.exports = __webpack_public_path__ + \"static/media/mongodb-logo.b5e47b24.png\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap-logo.b20fc95b.png\";","module.exports = __webpack_public_path__ + \"static/media/materialize-logo.81f16883.png\";","module.exports = __webpack_public_path__ + \"static/media/ps-logo.3c143691.png\";","module.exports = __webpack_public_path__ + \"static/media/illustrator-logo.e1d9f82b.png\";","module.exports = __webpack_public_path__ + \"static/media/tree-logo.a05206d2.png\";","module.exports = __webpack_public_path__ + \"static/media/space-logo.4e1f3f0c.png\";","module.exports = __webpack_public_path__ + \"static/media/art-logo.94f71ff5.png\";","module.exports = __webpack_public_path__ + \"static/media/game-logo.0f10e6f1.png\";","import React, { Component } from \"react\";\r\nimport DLogo from \"../../images/D_logo_final.png\"\r\nimport Resume from \"../../files/dro_resume.pdf\"\r\n\r\nclass Nav extends Component {\r\n\r\n    toggleGame = () => {\r\n        if (this.props.playingGame === false) {\r\n            this.props.startGame();\r\n        } else {\r\n            this.props.endGame();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const code = \"< / >\"\r\n        console.log(this.props.playingGame);\r\n        return (\r\n            <div>\r\n                {/* <!-- TOP NAVBAR --> */}\r\n                <div id=\"top-nav-container\" className=\"navbar-fixed\">\r\n                    <nav id=\"top-nav\" className=\"nav-wrapper navbar-fixed grey darken-4\">\r\n\r\n                        <div className=\"container\">\r\n                            <a href=\"#!\" className=\"sidenav-trigger left\" data-target=\"side-modal\">\r\n                                <i className=\"material-icons\">menu</i>\r\n                            </a>\r\n\r\n                            <a href=\"/\" className=\"brand-logo\">\r\n                                <img src={DLogo} id=\"logo-top\" className=\"left valign-wrapper\" alt=\"D Logo\" />\r\n                            </a>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                {/* <!-- Modal side navbar --> */}\r\n                <ul id=\"side-modal\" className=\"sidenav center-align font1\">\r\n                    <li>\r\n                        <a href=\"#portfolio\" className=\"white-text\">Portfolio</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#about\" className=\"white-text\">About</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#contact\" className=\"white-text\">Contact</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href={Resume} target=\"blank\" className=\"white-text\">Resume</a>\r\n                    </li>\r\n                    <li>\r\n                        <a className=\"grey-text\" onClick={this.toggleGame.bind(this)}>{code}</a>\r\n                    </li>\r\n                </ul>\r\n                {/* <!-- End NavBar --> */}\r\n\r\n                {/* <!-- LEFT MAIN SIDEBAR\t --> */}\r\n                <ul id=\"side-nav\" className=\"sidenav sidenav-fixed grey darken-4 center-align z-depth-0 font1\">\r\n                    <li>\r\n                        <a id=\"logo-side-a\" href=\"\">\r\n                            <img id=\"logo-side\" src={DLogo} alt=\"D Logo\" />\r\n                        </a>\r\n                    </li>\r\n                    <div className=\"table-of-contents\">\r\n                        <li>\r\n                            <a href=\"#portfolio\" className=\"white-text\">Portfolio</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#about\" className=\"white-text\">About</a>\r\n                        </li >\r\n                        <li>\r\n                            <a href=\"#contact\" className=\"white-text\">Contact</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href={Resume} target=\"blank\" className=\"white-text\">Resume</a>\r\n                        </li>\r\n                        <li>\r\n                            <a className=\"grey-text\" onClick={this.toggleGame.bind(this)}>{code}</a>\r\n                        </li>\r\n                    </div>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Nav;","import React from \"react\";\r\nimport DLogoWhite from \"../../images/d-logo.png\"\r\nimport LinkedinLogo from \"../../images/linkedin-logo.png\"\r\nimport GitHubLogo from \"../../images/github-logo.png\"\r\nimport ResumeLogo from \"../../images/resume-logo.png\"\r\nimport TreeBG from \"../../images/trees2.jpg\"\r\nimport Resume from \"../../files/dro_resume.pdf\"\r\n\r\nfunction Parallax() {\r\n\r\n    return (\r\n        < div className=\"parallax-container center valign-wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 white-text\">\r\n                        <img className=\"logo-pic\" src={DLogoWhite} alt=\"D Logo\" />\r\n                        <h1 className=\"white-text font2\">DOMINIC OJEDA</h1>\r\n                        <h5 className=\"font1\">Full Stack Web Developer</h5>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col s12 center-align\">\r\n                        <a href=\"https://www.linkedin.com/in/dominic-ojeda/\" target=\"blank\">\r\n                            <img src={LinkedinLogo} alt=\"Linkedin Logo\" className=\"logo-link\" />\r\n                        </a>\r\n                        <a href=\"https://github.com/dojeda1\" target=\"blank\">\r\n                            <img src={GitHubLogo} alt=\"GitHub Logo\" className=\"logo-link\" />\r\n                        </a>\r\n                        <a href={Resume} target=\"blank\">\r\n                            <img src={ResumeLogo} alt=\"Resume Logo\" className=\"logo-link\" />\r\n                        </a>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"parallax\">\r\n                <img id=\"para-pic\" src={TreeBG} alt=\"\" />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Parallax;","import React, { Component } from \"react\";\r\n// import M from 'materialize-css';\r\n\r\nimport MealPlannerMockup from \"../../images/meal-planner/meal-planner-mockup.png\"\r\nimport MealPlannerPaint from \"../../images/meal-planner/meal-planner-paint.png\"\r\nimport MealPlannerImg1 from \"../../images/meal-planner/meal-planner-search.jpg\"\r\nimport MealPlannerImg2 from \"../../images/meal-planner/meal-planner-fav.jpg\"\r\nimport MealPlannerImg3 from \"../../images/meal-planner/meal-planner-cal.jpg\"\r\n\r\nimport WizardWordsMockup from \"../../images/wizard-words/wizard-words-mockup.png\"\r\nimport WizardWordsPaint from \"../../images/wizard-words/wizard-words-paint.png\"\r\nimport WizardWordsImg1 from \"../../images/wizard-words/wizard-words-guess.jpg\"\r\nimport WizardWordsImg2 from \"../../images/wizard-words/wizard-words-lose.jpg\"\r\nimport WizardWordsImg3 from \"../../images/wizard-words/wizard-words-win.jpg\"\r\n\r\nimport ScifiRpgMockup from \"../../images/scifi-rpg/scifi-rpg-mockup.png\"\r\nimport ScifiRpgPaint from \"../../images/scifi-rpg/scifi-rpg-paint.png\"\r\nimport ScifiRpgImg1 from \"../../images/scifi-rpg/scifi-rpg-lose.jpg\"\r\nimport ScifiRpgImg2 from \"../../images/scifi-rpg/scifi-rpg-win.jpg\"\r\nimport ScifiRpgImg3 from \"../../images/scifi-rpg/scifi-rpg-fight.jpg\"\r\n\r\nimport SocratesMockup from \"../../images/socrates/socrates-mockup.png\"\r\nimport SocratesPaint from \"../../images/socrates/socrates-paint.png\"\r\nimport SocratesImg1 from \"../../images/socrates/socrates-prompt.jpg\"\r\nimport SocratesImg2 from \"../../images/socrates/socrates-results.jpg\"\r\nimport SocratesImg3 from \"../../images/socrates/socrates-choices.jpg\"\r\n\r\nimport TriviaMockup from \"../../images/trivia-game/trivia-mockup.png\"\r\nimport TriviaPaint from \"../../images/trivia-game/trivia-paint.png\"\r\nimport TriviaImg1 from \"../../images/trivia-game/trivia-results.jpg\"\r\nimport TriviaImg2 from \"../../images/trivia-game/trivia-start.jpg\"\r\nimport TriviaImg3 from \"../../images/trivia-game/trivia-results.jpg\"\r\n\r\nimport FurButlrMockup from \"../../images/fur-butlr/fur-butlr-mockup.png\"\r\nimport FurButlrPaint from \"../../images/fur-butlr/fur-butlr-paint.png\"\r\nimport FurButlrImg1 from \"../../images/fur-butlr/fur-butlr-results.jpg\"\r\nimport FurButlrImg2 from \"../../images/fur-butlr/fur-butlr-update.jpg\"\r\nimport FurButlrImg3 from \"../../images/fur-butlr/fur-butlr-profile.jpg\"\r\n\r\nimport BugMemoryMockup from \"../../images/bug-memory/bug-memory-mockup.png\"\r\nimport BugMemoryPaint from \"../../images/bug-memory/bug-memory-paint.png\"\r\nimport BugMemoryImg1 from \"../../images/bug-memory/bug-memory-win.jpg\"\r\nimport BugMemoryImg2 from \"../../images/bug-memory/bug-memory-lose.jpg\"\r\nimport BugMemoryImg3 from \"../../images/bug-memory/bug-memory-cards.jpg\"\r\n\r\nimport BookFinderMockup from \"../../images/book-finder/book-finder-mockup.png\"\r\nimport BookFinderPaint from \"../../images/book-finder/book-finder-paint.png\"\r\nimport BookFinderImg1 from \"../../images/book-finder/book-finder-home.jpg\"\r\nimport BookFinderImg2 from \"../../images/book-finder/book-finder-results.jpg\"\r\nimport BookFinderImg3 from \"../../images/book-finder/book-finder-saved.jpg\"\r\n\r\nclass Portfolio extends Component {\r\n    state = {\r\n        currentProject: {},\r\n        currentList: [],\r\n        allProjects: [\r\n            {\r\n                title: \"Meal Planner\",\r\n                mockup: MealPlannerMockup,\r\n                paint: MealPlannerPaint,\r\n                img1: MealPlannerImg1,\r\n                img2: MealPlannerImg2,\r\n                img3: MealPlannerImg3,\r\n                visit: \"https://stephanfalcon.github.io/PlusUltraProject/\",\r\n                code: \"https://github.com/stephanfalcon/PlusUltraProject\",\r\n                sum: \"Using the Spoonacular API, Meal Planner allows you to look up recipes with optional dietary restrictions and save them to your favorites. You can view recipe cards to see a meal's ingredients and instructions. From the Calendar page, you can choose any recipe from your favorites, add it to a meal period on your weekly calendar, and save the plan for later. Both the favorites and the weekly meal plan are stored using Firebase's realtime database.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Materialize\", \"Firebase\", \"Spoonacular API\", \"Heal Thru Words API\"]\r\n            }, {\r\n                title: \"Wizard Words\",\r\n                mockup: WizardWordsMockup,\r\n                paint: WizardWordsPaint,\r\n                img1: WizardWordsImg1,\r\n                img2: WizardWordsImg2,\r\n                img3: WizardWordsImg3,\r\n                visit: \"https://dojeda1.github.io/Word-Guess-Game/\",\r\n                code: \"https://github.com/dojeda1/Word-Guess-Game\",\r\n                sum: \"This version of the traditional Hangman game is fashioned after the wizarding world of Harry Potter. The game displays what letters you have previously guessed, how many guesses you have left, as well as your wins and losses. The design was inspired by the Marauder's Map and uses jQuery for a number of cool fade-in and fade-out animations.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Bootstrap\"]\r\n            }, {\r\n                title: \"Sci-fi RPG\",\r\n                mockup: ScifiRpgMockup,\r\n                paint: ScifiRpgPaint,\r\n                img1: ScifiRpgImg1,\r\n                img2: ScifiRpgImg2,\r\n                img3: ScifiRpgImg3,\r\n                visit: \"https://dojeda1.github.io/Space-RPG-Game/\",\r\n                code: \"https://github.com/dojeda1/Space-RPG-Game\",\r\n                sum: \"Choose one of 4 classic Sci-fi characters to play as and try to defeat all of the remaining opponents. Each character has different health, strength, and leveling up stats and you must choose defenders in particular orders to obtain victory.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Bootstrap\"]\r\n            }, {\r\n                title: \"Trial of Socrates\",\r\n                mockup: SocratesMockup,\r\n                paint: SocratesPaint,\r\n                img1: SocratesImg1,\r\n                img2: SocratesImg2,\r\n                img3: SocratesImg3,\r\n                visit: \"https://dojeda1.github.io/Socrates-Game/\",\r\n                code: \"https://github.com/dojeda1/Socrates-Game\",\r\n                sum: \"This is a text based adventure game inspired by the ancient tale of when Socrates was sentenced to death by a jury of his fellow Athenians. Playing as the philosopher himself, you make branching choices powered by IF/ELSE functions in JavaScript that lead to alternate endings. The goal is to find the historical ending or simply explore alternate timelines. \",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Bootstrap\"]\r\n            }, {\r\n                title: \"Trivia Game\",\r\n                mockup: TriviaMockup,\r\n                paint: TriviaPaint,\r\n                img1: TriviaImg1,\r\n                img2: TriviaImg2,\r\n                img3: TriviaImg3,\r\n                visit: \"https://dojeda1.github.io/TriviaGame/\",\r\n                code: \"https://github.com/dojeda1/TriviaGame\",\r\n                sum: \"Test your knowledge of both the metric and imperial units of measurement. Each question is timed and will move onto the next if left unanswered. After each question, a fun GIF is briefly displayed according to whether or not you were correct. At the end of the game, the number of right, wrong, and unanswered responses is displayed along side your overall score. Your high scores are also shown at the bottom of the results page.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Bootstrap\"]\r\n            }, {\r\n                title: \"Fur Butlr\",\r\n                mockup: FurButlrMockup,\r\n                paint: FurButlrPaint,\r\n                img1: FurButlrImg1,\r\n                img2: FurButlrImg2,\r\n                img3: FurButlrImg3,\r\n                visit: \"https://fur-butlr-app.herokuapp.com/\",\r\n                code: \"https://github.com/ApexPanda/FurButler\",\r\n                sum: \"A place where pet owners can meet each other and search for pet services like walkers, groomers or sitters. Fur Butlr lets you create a profile, login in, edit your page, and show off your pets.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"Materialize\", \"MySQL\", \"Node.js\", \"Sequelize\"]\r\n            }, {\r\n                title: \"Bug Memory\",\r\n                mockup: BugMemoryMockup,\r\n                paint: BugMemoryPaint,\r\n                img1: BugMemoryImg1,\r\n                img2: BugMemoryImg2,\r\n                img3: BugMemoryImg3,\r\n                visit: \"https://memory-game-react-click.herokuapp.com/\",\r\n                code: \"https://github.com/dojeda1/memory-game\",\r\n                sum: \"Test your memory by selecting every bug card without choosing the same one twice. Each time one is chosen, the game will shuffle the cards and display them in a random order using REACT. If you select the same bug twice, you lose!\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"Bootstrap\", \"React.js\", \"Node.js\"]\r\n            }, {\r\n                title: \"Book Finder\",\r\n                mockup: BookFinderMockup,\r\n                paint: BookFinderPaint,\r\n                img1: BookFinderImg1,\r\n                img2: BookFinderImg2,\r\n                img3: BookFinderImg3,\r\n                visit: \"https://google-books-mern.herokuapp.com/\",\r\n                code: \"https://github.com/dojeda1/book-search\",\r\n                sum: \"Search through a large database of books with the help of the Google Books API. User inputs the title of a book and results are displayed below. They can then visit the google URL, save the book in a MongoDB database for later, or delete it from saved books.\",\r\n                list: [\"HTML\", \"CSS\", \"JavaScript\", \"React.js\", \"MongoDB\", \"Mongoose\", \"Google Books API\"]\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ currentProject: this.state.allProjects[0], currentList: this.state.allProjects[0].list })\r\n        // M.AutoInit();\r\n    }\r\n\r\n    handleSelect = (event) => {\r\n\r\n        let tag = event.currentTarget.dataset.tag;\r\n        console.log(tag);\r\n        this.setState({ currentProject: this.state.allProjects[tag], currentList: this.state.allProjects[tag].list })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div id=\"portfolio\" className=\"scrollspy\">\r\n\r\n                <div className=\" row grey darken-4 z-depth-1\">\r\n\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4 className=\"dom-green1-text font1\">Portfolio</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <h5 className=\"dom-green1-text font2\">Project Summary</h5>\r\n                            <div className=\"divider\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col m12 l8\">\r\n                            <h5 id=\"p-title\" className=\"font1\">{this.state.currentProject.title}</h5>\r\n                            <img id=\"p-mockup\" src={this.state.currentProject.mockup} alt=\"Mockup\" />\r\n\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"col s12 left-align\">\r\n                                    <a id=\"p-visit-btn\" href={this.state.currentProject.visit} target=\"blank\">\r\n                                        <button className=\"btn portfolio-btn waves-effect waves-light dom-green1 font2\" type=\"button\" name=\"action\">\r\n                                            Visit<i className=\"material-icons right\">public</i>\r\n                                        </button>\r\n                                    </a>\r\n\r\n                                    <a id=\"p-code-btn\" href={this.state.currentProject.code} target=\"blank\">\r\n                                        <button className=\"btn portfolio-btn waves-effect waves-light dom-green1-dark font2\" type=\"button\" name=\"action\">\r\n                                            Code<i className=\"material-icons right\">code</i>\r\n                                        </button>\r\n                                    </a>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col m12 l4\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col s12 m8 l12\">\r\n                                    <h6 className=\"font1 dom-green1-text\">- About the Project -</h6>\r\n                                    <p id=\"p-about\">{this.state.currentProject.sum}</p>\r\n                                </div>\r\n                                <div className=\"col s12 m4 l12\">\r\n                                    <h6 className=\"font1 dom-green1-text\">- Made With -</h6>\r\n                                    <ul id=\"p-list\" className=\"grey-text\">\r\n                                        {(this.state.currentList).join(\", \")}\r\n                                    </ul>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div id=\"info-pics\" className=\"row\">\r\n\r\n                        <div id=\"move\" className=\"col s12 m4\">\r\n                            <div className=\"col s12\">\r\n                                <div className=\"row\"><img id=\"p-img-1\" src={this.state.currentProject.img1} alt=\"Screenshot 1\" className=\"z-depth-2 materialboxed\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"col s12\">\r\n                                <div className=\"row\"><img id=\"p-img-2\" src={this.state.currentProject.img2} alt=\"Screenshot 2\" className=\"z-depth-2 materialboxed\" /></div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col s12 m8\"><img id=\"p-img-3\" src={this.state.currentProject.img3} alt=\"Screenshot 3\" className=\"z-depth-2 materialboxed\" /></div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    </div>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                    {/* Selection carousel */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <h5 className=\"dom-green1-text font2 center-align\">Select a Project</h5>\r\n                            <div className=\"divider\" />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"carousel center-align\">\r\n\r\n                        {this.state.allProjects.map((project, index) => (\r\n                            <button key={index} className=\"carousel-item\" data-tag={index} onClick={this.handleSelect}>\r\n                                <img className=\"paint-pic\" src={project.paint} alt=\"Project\" />\r\n                                <h6 className=\"black-text font2\">{project.title}</h6>\r\n                            </button>\r\n                        ))}\r\n\r\n                    </div>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from \"react\";\r\nimport HtmlLogo from \"../../images/tool-logos/html-logo.png\"\r\nimport CssLogo from \"../../images/tool-logos/css-logo.png\"\r\nimport JsLogo from \"../../images/tool-logos/js-logo.png\"\r\nimport JQueryLogo from \"../../images/tool-logos/jquery-logo.png\"\r\nimport NodeLogo from \"../../images/tool-logos/node-logo.png\"\r\nimport ReactLogo from \"../../images/tool-logos/react-logo.png\"\r\nimport MySqlLogo from \"../../images/tool-logos/mysql-logo.png\"\r\nimport MongoDbLogo from \"../../images/tool-logos/mongodb-logo.png\"\r\nimport BootstrapLogo from \"../../images/tool-logos/bootstrap-logo.png\"\r\nimport MaterializeLogo from \"../../images/tool-logos/materialize-logo.png\"\r\nimport PhotoshopLogo from \"../../images/tool-logos/ps-logo.png\"\r\nimport IllustratorLogo from \"../../images/tool-logos/illustrator-logo.png\"\r\n\r\nimport TreeLogo from \"../../images/tree-logo.png\"\r\nimport SpaceLogo from \"../../images/space-logo.png\"\r\nimport ArtLogo from \"../../images/art-logo.png\"\r\nimport GameLogo from \"../../images/game-logo.png\"\r\n\r\nclass About extends Component {\r\n\r\n    handleRotate = (event) => {\r\n\r\n        const logo = event.target;\r\n        if (logo.classList.contains(\"rotate\")) {\r\n            logo.classList.remove(\"rotate\");\r\n        } else {\r\n            logo.classList.add(\"rotate\");\r\n            setTimeout(function () {\r\n                logo.classList.remove(\"rotate\");\r\n            }, 801);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            < div id=\"about\" className=\"scrollspy\" >\r\n                <div className=\"row grey darken-4 z-depth-1\">\r\n\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4 className=\"dom-green2-text font1\">About</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m8\">\r\n                            <h5 className=\"dom-green2-text font2\">Summary</h5>\r\n\r\n                            <div className=\"divider\" />\r\n\r\n                            <div className=\"\">\r\n                                <p> I am a web developer who enjoys coding on both front-end and back-end. Experience\r\n                                producing web\r\n                                applications with HTML, CSS, and JavaScript and creating visual elements with Photoshop\r\n                                and Illustrator. I have a passion for making programs that are visually appealing and\r\n                                fun to interact with. I enjoy solving problems creatively and I am always determined to\r\n                                try again and again until the vision becomes reality. I believe clear communication is\r\n                                key to completing any project, and I work well in a team or going at it alone. I know\r\n                                that the right\r\n                                code can solve any problem.</p>\r\n                                <br />\r\n                                <p></p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col s12 m4\">\r\n                            <h5 className=\"dom-green2-text font2\">My Tool Belt</h5>\r\n\r\n                            <div className=\"divider\" />\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={HtmlLogo} alt=\"HTML Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={CssLogo} alt=\"CSS Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={JsLogo} alt=\"JavaScript Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={JQueryLogo} alt=\"jQuery Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={ReactLogo} alt=\"React Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={NodeLogo} alt=\"Node Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={MySqlLogo} alt=\"MySQL Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={MongoDbLogo} alt=\"MongoDB Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={BootstrapLogo} alt=\"Bootstrap Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={MaterializeLogo} alt=\"MongoDB Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={PhotoshopLogo} alt=\"Photoshop Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                                <div className=\"col s3\">\r\n                                    <img className=\"tool-pic bulge\" src={IllustratorLogo} alt=\"Illustrator Logo\" onClick={this.handleRotate} />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <h5 className=\"dom-green2-text font2\">My Interests</h5>\r\n\r\n                            <div className=\"divider\" />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col s6 m6 l3 center-align\">\r\n                                <img className=\"int-logo bulge\" src={TreeLogo} alt=\"Tree Logo\" onClick={this.handleRotate} />\r\n\r\n                                <p>Nature is incredible. The trees, rocks, and rivers give us everything we need for life.\r\n                                Being outdoors, taking in the fresh air and looking at all the\r\n                                wonder this world has to offer can always give me sense of peace and purpose.</p>\r\n                            </div>\r\n\r\n                            <div className=\"col s6 m6 l3 center-align\">\r\n                                <img className=\"int-logo bulge\" src={SpaceLogo} alt=\"Space Logo\" onClick={this.handleRotate} />\r\n                                <p>The vastness of the universe forever leaves me in awe. I love learning about the planets\r\n                                and stars, and how they all mesh together to form the cosmos. There is so much we\r\n                                don't yet know, and that's part of what makes it so exciting.</p>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col s6 m6 l3 center-align\">\r\n                                <img className=\"int-logo bulge\" src={ArtLogo} alt=\"Art Logo\" onClick={this.handleRotate} />\r\n                                <p>Art has always been one of my great loves. I enjoy creating characters, concept art, and\r\n                                logo designs using both traditional and digital\r\n                                medium. Many hours have been spent huddled over my desk working on my next piece.</p>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col s6 m6 l3 center-align\">\r\n                                <img className=\"int-logo bulge\" src={GameLogo} alt=\"Game Logo\" onClick={this.handleRotate} />\r\n                                <p>Playing or creating games is always a good time. It's so much fun to go on adventures,\r\n                                explore new worlds,\r\n                                or reach that new high score. My favorite games include Gears of War, Final\r\n                                Fantasy, and Super Smash Bros.</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"spacer\" />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        message: \"\"\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { value, name } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.name === \"\" || this.state.email === \"\" || this.state.message === \"\") {\r\n            alert(\"Please fill out all forms.\");\r\n        } else {\r\n            this.setState({\r\n                name: this.state.name.trim(),\r\n                email: this.state.email.trim(),\r\n                message: this.state.message.trim()\r\n            });\r\n\r\n            let bottle = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                message: this.state.message\r\n            };\r\n\r\n            console.log(bottle);\r\n\r\n            this.setState({\r\n                name: \"\",\r\n                email: \"\",\r\n                message: \"\"\r\n            });\r\n\r\n            document.getElementById('contact-form').reset();\r\n            alert(\"Message Sent!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"contact\" className=\"scrollspy\">\r\n                <div className=\"row grey darken-4 z-depth-1\">\r\n\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4 className=\"dom-blue-text font1\">Contact</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <h5 className=\"dom-blue-text font2\">Send me a message</h5>\r\n\r\n                            <div className=\"divider\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m7 l8\">\r\n\r\n                            <form id=\"contact-form\" onSubmit={this.handleSubmit}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input type=\"text\" className=\"form-input\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} />\r\n                                        <label htmlFor=\"name\" className=\"font1\">Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input type=\"email\" className=\"form-input\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} />\r\n                                        <label htmlFor=\"email\" className=\"font1\">Email</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <textarea id=\"message\" className=\"materialize-textarea\" name=\"message\" value={this.state.messages} onChange={this.handleInputChange} />\r\n                                        <label htmlFor=\"message\" className=\"font1\">Message</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col m12\">\r\n                                        <button id=\"send-btn\"\r\n                                            className=\"btn contact-btn small waves-effect waves-light dom-blue font2 right\"\r\n                                            type=\"submit\" name=\"action\" value=\"Send\">Send<i\r\n                                                className=\"material-icons right\">send</i></button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                        <div className=\"col s12 m5 l4\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <h6 className=\"font1 dom-blue-text\">- Contact info -</h6>\r\n                                    <p id=\"p-about\">dominicojeda.coding@gmail.com</p>\r\n                                    <p>\r\n                                        <a href=\"https://www.linkedin.com/in/dominic-ojeda/\" target=\"blank\"\r\n                                            className=\"contact-link grey-text\">Linkedin</a>\r\n                                    </p>\r\n                                    <p>\r\n                                        <a href=\"https://github.com/dojeda1\" target=\"blank\"\r\n                                            className=\"contact-link grey-text\">Github</a>\r\n                                    </p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"spacer\" />\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport GitHubLogo from \"../../images/github-logo.png\"\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <footer className=\"page-footer dom-blue-text font1 grey darken-4 center-align\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"spacer\" />\r\n                        <h5>Live, Learn, Create</h5>\r\n                        <div className=\"spacer\" />\r\n                        <p></p>\r\n                        <div className=\"row\">\r\n                            <img className=\"footer-img\" src={GitHubLogo} alt=\"Footer Logo\" />\r\n                            <img className=\"footer-img\" src={GitHubLogo} alt=\"Footer Logo\" />\r\n                            <img className=\"footer-img\" src={GitHubLogo} alt=\"Footer Logo\" />\r\n                        </div>\r\n                        <div className=\"spacer\" />\r\n                        <p>Copyright © 2019 - Dominic Ojeda</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"spacer\" />\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport DLogo from \"../../images/D_logo_final.png\"\nimport playerDefault from \"./playerDefault.json\";\nimport regions from \"./regions.json\";\n\nimport monsters1 from \"./monsters1.json\";\nimport monsters2 from \"./monsters2.json\";\nimport monsters3 from \"./monsters3.json\";\n\nimport items1 from \"./items1.json\";\nimport items2 from \"./items2.json\";\nimport items3 from \"./items3.json\";\n// this.setState({ something: true }, () => console.log(this.state))\n\nclass Game extends Component {\n\n    state = {\n        message: \"\",\n        messageSub: \"\",\n        infoText: [],\n        region: regions[0],\n        location: \"title screen\",\n        task: \"new or load\",\n        step: null,\n        inputName: \"\",\n        movingForward: false,\n        player: playerDefault,\n        currentEnemy: {\n            name: \"\",\n            type: \"common\",\n            maxHp: 0,\n            hp: 0,\n            maxMp: 0,\n            mp: 0,\n            strength: 0,\n            speed: 0,\n            xp: 0,\n            inventory: [],\n            gold: 0,\n            isDead: false\n        },\n        merchant: []\n    }\n    componentDidMount() {\n        this.setState({ message: \"Choose an Option.\" });\n    }\n    toggleGame = () => {\n        this.props.endGame();\n    }\n    //Utility Functions\n    changePlayStates = (location, task, step) => {\n        this.setState({\n            location: location,\n            task: task,\n            step: step\n        })\n    }\n    randNum = (x, y) => {\n        return Math.floor(Math.random() * y) + x;\n    }\n    aOrAn = (word) => {\n        var firstLetter = word.charAt(0);\n        var anA = \"\";\n        if (firstLetter === \"A\" || firstLetter === \"E\" || firstLetter === \"I\" || firstLetter === \"O\" || firstLetter === \"U\") {\n            anA = \"an\";\n            return anA\n        } else {\n            anA = \"a\";\n            return anA\n        };\n    }\n    atkText = (attacker, attackMessage) => {\n        console.log(\"atk txt: \" + attackMessage)\n        let text;\n        if (attacker.name === this.state.player.name) {\n            console.log(\"empty mes arr\")\n            text = [];\n        } else {\n            console.log(\"do not empty mes arr\")\n            text = this.state.infoText;\n        };\n        text.push(attackMessage);\n        console.log(\"atk text: \" + text)\n        this.setState({\n            infoText: text,\n        }, () => {\n            console.log(\"after attack A: \" + this.state.infoText);\n            this.gameOverCheck();\n        });\n    }\n    handleCheck = () => {\n        console.log(this.state.player);\n    }\n\n    addItem = (array, item) => {\n        const newItem = {\n            name: item.name,\n            order: item.order,\n            qty: 1,\n            buy: item.buy,\n            sell: item.sell,\n            info: item.info\n        };\n        let inInventory = false;\n        array.forEach(element => {\n            if (newItem.name === element.name) {\n                inInventory = true;\n                element.qty++\n            };\n        });\n        if (inInventory === false) {\n            array.push(newItem);\n        }\n        function compare(a, b) {\n            const orderA = a.order;\n            const orderB = b.order;\n\n            let comparison = 0;\n            if (orderA > orderB) {\n                comparison = 1;\n            } else if (orderA < orderB) {\n                comparison = -1;\n            }\n            return comparison;\n        }\n\n        array.sort(compare);\n        this.setState({\n            player: this.state.player,\n            currentEnemy: this.state.currentEnemy,\n            merchant: this.state.merchant\n        });\n    }\n    removeItem = (array, item) => {\n        array.forEach((element, i) => {\n            if (item.name === element.name) {\n                element.qty--\n            };\n            if (element.qty <= 0) {\n                console.log(\"item zeroed out.\")\n                array.splice(i, 1);\n            };\n        });\n        this.setState({\n            player: this.state.player,\n            currentEnemy: this.state.currentEnemy,\n            merchant: this.state.merchant\n        });\n    };\n    transferItem(fromArr, toArr, item) {\n        var transferItem = {\n            name: item.name,\n            order: item.order,\n            qty: 1,\n            buy: item.buy,\n            sell: item.sell,\n            info: item.info\n        }\n        this.addItem(toArr, transferItem);\n        this.removeItem(fromArr, transferItem);\n    }\n\n    //Start Game Functions\n    loadGame = () => {\n        console.log(\"Loaded Character.\");\n        this.setState({ task: \"playing game\" });\n    }\n    newGame = () => {\n        console.log(\"Creating New Character.\")\n        this.setState({\n            task: \"create character\",\n            step: \"name\",\n            message: \"Hello Adventurer! What is your name?\"\n        });\n    }\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    handleName = (event) => {\n        event.preventDefault();\n\n        if (this.state.inputName === \"\") {\n            // this.setState({\n            //     message: \"Surely, you must have a name...\"\n            // });\n            this.setState({\n                player: {\n                    ...this.state.player,\n                    name: \"Killgore\"\n                },\n                message: \"What is your race?\",\n                step: \"race\"\n            });\n        } else {\n            let newName = this.state.inputName.trim();\n            newName = newName.charAt(0).toUpperCase() + newName.slice(1);\n            // document.getElementById('game-form').reset();\n\n            this.setState({\n                player: {\n                    ...this.state.player,\n                    name: newName\n                },\n                message: \"What is your race?\",\n                step: \"race\"\n            });\n        }\n    }\n    selectRace = (event) => {\n        let maxHpA;\n        let maxMpA;\n        let strengthA;\n        let defenseA;\n        let manaA;\n        let speedA;\n        let luckA;\n        switch (event.target.value) {\n\n            case \"Human\":\n                maxHpA = 4;\n                maxMpA = 4;\n                strengthA = 1;\n                defenseA = 1;\n                manaA = 1;\n                speedA = 1;\n                luckA = 0;\n                break;\n\n            case \"Elf\":\n                maxHpA = 4;\n                maxMpA = 6;\n                strengthA = 0;\n                defenseA = 0;\n                manaA = 2;\n                speedA = 1;\n                luckA = 1;\n                break;\n\n            case \"Dwarf\":\n                maxHpA = 6;\n                maxMpA = 2;\n                strengthA = 2;\n                defenseA = 1;\n                manaA = 0;\n                speedA = 0;\n                luckA = 0;\n                break;\n\n            default: console.log(\"error\");\n\n        }\n\n        let newPlayer = this.state.player;\n        newPlayer.race = event.target.value;\n        newPlayer.maxHp = newPlayer.maxHp + maxHpA;\n        newPlayer.hp = newPlayer.hp + maxHpA;\n        newPlayer.maxMp = newPlayer.maxMp + maxMpA;\n        newPlayer.mp = newPlayer.mp + maxMpA;\n        newPlayer.strength = newPlayer.strength + strengthA;\n        newPlayer.defenseA = newPlayer.defense + defenseA;\n        newPlayer.manaA = newPlayer.mana + manaA;\n        newPlayer.speed = newPlayer.speed + speedA;\n        newPlayer.luck = newPlayer.luck + luckA;\n\n        this.setState({\n            player: newPlayer,\n            step: \"class\",\n            message: \"What is your class?\"\n        });\n    }\n    selectClass = (event) => {\n        let maxHpA;\n        let maxMpA;\n        let strengthA;\n        let defenseA;\n        let manaA;\n        let speedA;\n        let luckA;\n        let special1A\n        let special2A\n        let special1CostA\n        let special2CostA\n        switch (event.target.value) {\n\n            case \"Warrior\":\n                maxHpA = 4\n                maxMpA = 0\n                strengthA = 2\n                defenseA = 2\n                manaA = 0\n                speedA = 0\n                luckA = 0\n                special1A = \"Axe Strike\"\n                special2A = \"Berserk\"\n                special1CostA = 6\n                special2CostA = 8\n                break;\n\n            case \"Mage\":\n                maxHpA = 2\n                maxMpA = 4\n                strengthA = 0\n                defenseA = 0\n                manaA = 3\n                speedA = 0\n                luckA = 1\n                special1A = \"Fireball\"\n                special2A = \"Heal\"\n                special1CostA = 6\n                special2CostA = 10\n                break;\n\n            case \"Rogue\":\n                maxHpA = 2\n                maxMpA = 2\n                strengthA = 1\n                defenseA = 0\n                manaA = 1\n                speedA = 2\n                luckA = 2\n                special1A = \"Dagger Slash\"\n                special2A = \"Steal\"\n                special1CostA = 6\n                special2CostA = 5\n                break;\n\n            default: console.log(\"error\");\n        }\n\n        let newPlayer = this.state.player;\n        newPlayer.class = event.target.value;\n        newPlayer.maxHp = newPlayer.maxHp + maxHpA;\n        newPlayer.hp = newPlayer.hp + maxHpA;\n        newPlayer.maxMp = newPlayer.maxMp + maxMpA;\n        newPlayer.mp = newPlayer.mp + maxMpA;\n        newPlayer.strength = newPlayer.strength + strengthA;\n        newPlayer.defenseA = newPlayer.defense + defenseA;\n        newPlayer.manaA = newPlayer.mana + manaA;\n        newPlayer.speed = newPlayer.speed + speedA;\n        newPlayer.luck = newPlayer.luck + luckA;\n        newPlayer.special1 = special1A;\n        newPlayer.special2 = special2A;\n        newPlayer.special1Cost = special1CostA;\n        newPlayer.special2Cost = special2CostA;\n\n        this.setState({\n            player: newPlayer,\n            message: \"Your adventure Begins...\"\n        })\n        this.addItem(this.state.player.inventory, items1[0]);\n        this.addItem(this.state.player.inventory, items3[3]);\n        this.selectToWild();\n    }\n    selectUseItem = () => {\n        let useMessage = \"Select an item.\"\n        if (!this.state.player.inventory.length) {\n            useMessage = \"You have no items...\"\n        }\n        this.setState({\n            step: \"use item\",\n            subMessage: useMessage\n        })\n    }\n    selectItem = (event) => {\n        const index = event.target.getAttribute(\"data-index\");\n        const name = event.target.value\n        console.log(\"chosen item: \" + name + \" \" + index)\n        if (this.state.task === \"fight\" || this.state.task === \"select where\") {\n            if (name.includes(\"Health Potion\") && this.state.player.hp >= this.state.player.maxHp) {\n                this.setState({\n                    message: \"You are already at full Health.\"\n                })\n            } else if (name.includes(\"Mana Potion\") && this.state.player.mp >= this.state.player.maxMp) {\n                this.setState({\n                    message: \"You are already at full Mana.\"\n                })\n            } else {\n                this.activateItem(this.state.player, this.state.currentEnemy, name, index);\n            }\n        }\n    }\n    buyItem = (event) => {\n        const player = this.state.player\n        const shop = this.state.merchant\n        const index = event.target.getAttribute(\"data-index\");\n        const price = event.target.getAttribute(\"data-price\");\n        const name = event.target.value;\n        if (price < player.gold) {\n            player.gold -= price\n            this.transferItem(this.state.merchant, this.state.player.inventory, this.state.merchant[index])\n            if (!this.state.merchant.length) {\n                this.setState({\n                    player: player,\n                    merchant: shop,\n                    message: \"You purchased \" + this.aOrAn(name) + \" \" + name + \".\",\n                    subMessage: \"There is nothing to buy.\"\n                })\n            } else {\n                this.setState({\n                    player: player,\n                    merchant: shop,\n                    message: \"You purchased \" + this.aOrAn(name) + \" \" + name + \".\"\n                })\n            }\n        } else {\n            this.setState({\n                message: \"You don't have enough gold...\"\n            })\n        }\n    }\n    sellItem = (event) => {\n        const player = this.state.player\n        const shop = this.state.merchant\n        const index = event.target.getAttribute(\"data-index\");\n        const price = event.target.getAttribute(\"data-price\");\n        const name = event.target.value;\n        player.gold += parseInt(price);\n        this.transferItem(this.state.player.inventory, this.state.merchant, this.state.player.inventory[index])\n        if (!this.state.player.inventory.length) {\n            this.setState({\n                player: player,\n                merchant: shop,\n                message: \"You sold \" + this.aOrAn(name) + \" \" + name + \".\",\n                subMessage: \"You have no items...\"\n            });\n        } else {\n            this.setState({\n                player: player,\n                merchant: shop,\n                message: \"You sold \" + this.aOrAn(name) + \" \" + name + \".\"\n            });\n        };\n    }\n    showItemInfo = (event) => {\n        const info = event.target.getAttribute(\"data-info\")\n        this.setState({\n            subMessage: info\n        })\n    }\n    showItemPrice = (event) => {\n        const cost = event.target.getAttribute(\"data-price\")\n        let shopWord\n        if (this.state.step === \"buy\") {\n            shopWord = \"Buy\";\n        } else if (this.state.step === \"sell\") {\n            shopWord = \"Sell\";\n        }\n        this.setState({\n            subMessage: shopWord + \" for \" + cost + \" gold.\"\n        })\n    }\n    showSelectItem = () => {\n        this.setState({\n            subMessage: \"Select an Item.\"\n        })\n    }\n    activateItem = (user, opponent, name, index) => {\n        console.log(\"item: \" + name + \" \" + index)\n        let amount;\n        switch (name) {\n            case \"Health Potion\":\n                amount = Math.floor(user.maxHp * 0.5);\n                user.hp += amount;\n                if (user.hp > user.maxHp) {\n                    user.hp = user.maxHp\n                }\n                this.removeItem(user.inventory, user.inventory[index]);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" HP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" HP.\"\n                    });\n                }\n                break;\n\n            case \"Greater Health Potion\":\n                amount = Math.floor(user.maxHp * 0.75);\n                user.hp += amount;\n                if (user.hp > user.maxHp) {\n                    user.hp = user.maxHp\n                }\n                this.removeItem(user.inventory, user.inventory[index]);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" HP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" HP.\"\n                    });\n                }\n                break;\n\n            case \"Superior Health Potion\":\n                amount = user.maxHp;\n                user.hp += amount;\n                if (user.hp > user.maxHp) {\n                    user.hp = user.maxHp\n                }\n                this.removeItem(user.inventory, user.inventory[index]);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" HP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" HP.\"\n                    });\n                }\n                break;\n\n            case \"Mana Potion\":\n                amount = Math.floor(user.maxMp * 0.5);\n                user.mp += amount;\n                if (user.mp > user.maxMp) {\n                    user.mp = user.maxMp\n                }\n                this.removeItem(user.inventory, user.inventory[index]);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" MP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" MP.\"\n                    });\n                }\n                break;\n\n            case \"Greater Mana Potion\":\n                amount = Math.floor(user.maxMp * 0.75);\n                user.mp += amount;\n                if (user.mp > user.maxMp) {\n                    user.mp = user.maxMp\n                }\n                this.removeItem(user.inventory, user.inventory[index]);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" MP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" MP.\"\n                    });\n                }\n                break;\n\n            case \"Superior Mana Potion\":\n                amount = user.maxMp;\n                user.mp += amount;\n                if (user.mp > user.maxMp) {\n                    user.mp = user.maxMp\n                }\n                this.removeItem(user.inventory, user.inventory[index]);\n                if (this.state.task === \"fight\") {\n                    this.atkText(user, user.name + \" recovered \" + amount + \" MP.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: user.name + \" recovered \" + amount + \" MP.\"\n                    });\n                }\n                break;\n\n            case \"Old Hat\":\n                this.setState({\n                    message: \"It looks good on you...\"\n                })\n                break;\n\n            case \"Death Scroll\":\n                if (this.state.task === \"fight\") {\n                    opponent.hp = 0;\n                    this.removeItem(user.inventory, user.inventory[index]);\n                    this.atkText(user, user.name + \" read from the Death Scroll.\")\n                    this.setState({\n                        user: user,\n                    }, () => this.enemyTurn(this.state.player, this.state.currentEnemy));\n                } else {\n                    this.setState({\n                        user: user,\n                        message: \"Death Scroll can only be used in battle.\"\n                    });\n                }\n                break;\n\n            default:\n                // Nothing\n                this.setState({\n                    message: \"SOMETHING WENT WRONG\"\n                })\n        }\n    }\n    //to place functions\n    selectToWild = () => {\n        this.changePlayStates(\"wild\", \"select where\", null)\n    }\n    selectToTown = () => {\n        // give shop random set of items each town visit\n        let randItem;\n        if (this.state.location === \"wild\") {\n            this.setState({\n                merchant: []\n            }, function () {\n                for (let i = 0; i < 4; i++) {\n                    randItem = this.randNum(0, items1.length);\n                    this.addItem(this.state.merchant, items1[randItem]);\n                }\n                for (let i = 0; i < 2; i++) {\n                    randItem = this.randNum(0, items2.length);\n                    this.addItem(this.state.merchant, items2[randItem]);\n                }\n                for (let i = 0; i < 1; i++) {\n                    randItem = this.randNum(0, items3.length);\n                    this.addItem(this.state.merchant, items3[randItem]);\n                }\n            })\n        };\n        this.changePlayStates(\"town\", \"select where\", null);\n    }\n    selectToInn = () => {\n        const cost = 10 + (this.state.player.level - 2) * 2;\n        if (this.state.player.hp < this.state.player.maxHp || this.state.player.mp < this.state.player.maxMp) {\n            this.setState({\n                message: \"Staying the night will cost \" + cost + \" gold.\",\n                messageSub: \"Pay for the room?\",\n            }, () => this.changePlayStates(\"town\", \"inn\", \"accept\"))\n        } else {\n            this.setState({\n                message: \"You are already at full Health and Mana.\"\n            }, () => this.changePlayStates(\"town\", \"select where\", null))\n        }\n    }\n    selectSafeTripCheck = () => {\n        const safeTripCheck = this.randNum(1, 10 + Math.floor(this.state.player.luck / 3));\n        if (safeTripCheck === 1) {\n            this.monsterEncounter(\"You were ambushed!!!\");\n        } else {\n            this.setState({\n                message: \"You arrived to town safely.\"\n            }, () => this.selectToTown())\n        }\n    }\n    selectYesInn = () => {\n        const cost = 10 + (this.state.player.level - 2) * 2;\n        if (this.state.player.gold >= cost) {\n            this.setState({\n                player: {\n                    ...this.state.player,\n                    gold: this.state.player.gold - cost,\n                    hp: this.state.player.maxHp,\n                    mp: this.state.player.maxMp,\n                },\n                message: \"You feel well rested.\",\n                task: \"select where\",\n                step: null\n            });\n        } else {\n            this.setState({\n                message: \"You can't afford to stay here.\",\n                task: \"select where\",\n                step: null\n            })\n        }\n    }\n    selectNoInn = () => {\n        this.setState({\n            message: \"You decided against it.\",\n            task: \"select where\",\n            step: null\n        })\n    }\n    selectToShop = () => {\n        this.setState({\n            message: \"You entered the shop.\",\n            task: \"shop\",\n            step: \"buy or sell\"\n        })\n    }\n    selectBuy = () => {\n        let shopMessage = \"Select an item.\"\n        if (!this.state.merchant.length) {\n            shopMessage = \"There is nothing to buy.\"\n        }\n        this.setState({\n            step: \"buy\",\n            subMessage: shopMessage\n        })\n    }\n    selectSell = () => {\n        let shopMessage = \"Select an item.\"\n        if (!this.state.merchant.length) {\n            shopMessage = \"You have no items...\"\n        }\n        this.setState({\n            step: \"sell\",\n            subMessage: shopMessage\n        })\n    }\n    selectExploreWild = () => {\n        const exploreCheck = this.randNum(1, 10)\n        if (exploreCheck === 1) {\n            this.chestEncounter();\n            // } else if (battleCheck === 2) {            \n            //     this.dungeonEncounter();\n        } else {\n            this.monsterEncounter();\n        }\n    }\n    selectNext = () => {\n        if (this.state.movingForward === true) {\n            this.setState({\n                movingForward: false,\n                region: regions[this.state.region.index],\n                task: \"select where\",\n                step: null,\n                message: \"You have reached the \" + regions[this.state.region.index].name + \".\"\n            });\n        } else if (this.state.task === \"chest\") {\n            this.setState({\n                task: \"select where\",\n                step: null,\n                message: \"You decided against it.\"\n            });\n        } else {\n            this.setState({\n                task: \"select where\",\n                step: null,\n                infoText: []\n            });\n        }\n    }\n    selectBack = () => {\n        if (this.state.task === \"select where\") {\n            this.setState({\n                step: null\n            });\n        } else if (this.state.task === \"fight\") {\n            this.setState({\n                step: \"select move\"\n            });\n        } else if (this.state.step === \"buy\" || this.state.step === \"sell\") {\n            this.setState({\n                step: \"buy or sell\"\n            });\n        } else if (this.state.task === \"shop\") {\n            this.setState({\n                message: \"You left the shop.\",\n                task: \"select where\",\n                step: null\n            });\n        }\n    }\n    selectTravelForward = () => {\n        this.setState({\n            movingForward: true,\n        }, () => this.viciousEncounter(\"As you near the \" + regions[this.state.region.index].name + \", you are attacked.\"));\n    }\n    travelForwardSuccess = () => {\n        this.setState({\n            region: regions[this.state.region.index],\n            movingForward: false,\n        });\n    }\n    selectTravelBackward = () => {\n        this.setState({\n            region: regions[this.state.region.index - 2],\n            message: \"You traveled back to the \" + regions[this.state.region.index - 2].name + \".\"\n        })\n    }\n    addEnemyItems = (enemy) => {\n        this.addItem(enemy.inventory, items1[0]);\n        this.addItem(enemy.inventory, items1[1]);\n    }\n    //encounters\n    monsterEncounter = (alternateMessage) => {\n\n        let rangeNum = 0;\n        let playerLevel = this.state.player.level;\n\n        const regionIndex = this.state.region.index;\n        console.log(\"RI:\" + regionIndex)\n        const regionLevel = this.state.region.level;\n        const regionTarget = this.state.region.targetLevel;\n\n        let monsterArray;\n\n        switch (regionIndex) {\n            case 1:\n                monsterArray = monsters1;\n                break;\n            case 2:\n                monsterArray = monsters2;\n                break;\n            case 3:\n                monsterArray = monsters3;\n                break;\n\n            default:\n            // code block\n        };\n        if (playerLevel <= regionLevel) {\n            rangeNum = 1;\n\n        } else if (playerLevel > regionLevel && playerLevel < regionTarget) {\n            rangeNum = Math.ceil(monsterArray.length * (playerLevel / regionTarget));\n        } else {\n            rangeNum = monsterArray.length;\n        };\n        let monNum = this.randNum(0, rangeNum);\n        const message = alternateMessage || \"You encountered \" + this.aOrAn(monsterArray[monNum].name) + \" \" + monsterArray[monNum].name + \".\";\n        console.log(\"message: \" + message)\n        var newEnemy = this.state.currentEnemy\n        newEnemy.name = monsterArray[monNum].name;\n        newEnemy.type = monsterArray[monNum].type;\n        newEnemy.maxHp = monsterArray[monNum].maxHp;\n        newEnemy.hp = monsterArray[monNum].maxHp;\n        newEnemy.maxMp = monsterArray[monNum].maxMp;\n        newEnemy.mp = monsterArray[monNum].maxMp;\n        newEnemy.strength = monsterArray[monNum].strength;\n        newEnemy.luck = monsterArray[monNum].luck;\n        newEnemy.xp = monsterArray[monNum].xp;\n        newEnemy.inventory = [];\n        newEnemy.gold = monsterArray[monNum].gold;\n        newEnemy.isDead = false\n        this.addEnemyItems(newEnemy);\n        let text = [];\n        this.setState({\n            currentEnemy: newEnemy,\n            task: \"fight\",\n            step: \"select move\",\n            message: message,\n            infoText: text\n        });\n        console.log(this.state.currentEnemy);\n    };\n    viciousEncounter = (alternateMessage) => {\n\n        let rangeNum = 0;\n        let playerLevel = this.state.player.level;\n\n        const regionIndex = this.state.region.index;\n        console.log(\"RI:\" + regionIndex)\n        const regionLevel = this.state.region.level;\n        const regionTarget = this.state.region.targetLevel;\n\n        let monsterArray;\n\n        switch (regionIndex) {\n            case 1:\n                monsterArray = monsters1;\n                break;\n            case 2:\n                monsterArray = monsters2;\n                break;\n            case 3:\n                monsterArray = monsters3;\n                break;\n\n            default:\n            // code block\n        };\n        if (this.state.movingForward === true) {\n            rangeNum = monsterArray.length;\n        } else if (playerLevel <= regionLevel) {\n            rangeNum = 1;\n        } else if (playerLevel > regionLevel && playerLevel < regionTarget) {\n            rangeNum = Math.ceil(monsterArray.length * (playerLevel / regionTarget));\n        } else {\n            rangeNum = monsterArray.length;\n        };\n        let monNum = this.randNum(0, rangeNum);\n        const message = alternateMessage || \"You encountered a Vicious \" + monsterArray[monNum].name + \".\";\n        var newEnemy = this.state.currentEnemy\n        newEnemy.name = \"Vicious \" + monsterArray[monNum].name;\n        newEnemy.type = \"vicious\";\n        newEnemy.maxHp = monsterArray[monNum].maxHp + 5;\n        newEnemy.hp = monsterArray[monNum].maxHp + 5;\n        newEnemy.maxMp = monsterArray[monNum].maxMp + 5;\n        newEnemy.mp = monsterArray[monNum].maxMp + 5;\n        newEnemy.strength = monsterArray[monNum].strength + 5;\n        newEnemy.luck = monsterArray[monNum].luck;\n        newEnemy.xp = monsterArray[monNum].xp + 10;\n        newEnemy.inventory = [];\n        newEnemy.gold = monsterArray[monNum].gold + 30;\n        newEnemy.isDead = false;\n        this.addEnemyItems(newEnemy)\n        let text = [];\n        this.setState({\n            currentEnemy: newEnemy,\n            task: \"fight\",\n            step: \"select move\",\n            message: message,\n            infoText: text\n        });\n    };\n    chestEncounter = () => {\n        this.setState({\n            task: \"chest\",\n            step: \"accept\",\n            message: \"You found a chest!\"\n        })\n    }\n    mimicEncounter = () => {\n        const regionLevel = this.state.region.level;\n        var newEnemy = this.state.currentEnemy\n        newEnemy.name = \"Mimic\"\n        newEnemy.type = \"mimic\";\n        newEnemy.maxHp = (regionLevel * 5) + 20;\n        newEnemy.hp = (regionLevel * 5) + 20;\n        newEnemy.maxMp = 10;\n        newEnemy.mp = 10;\n        newEnemy.strength = regionLevel * 2 + 2;\n        newEnemy.luck = regionLevel * 2 + 2;\n        newEnemy.xp = regionLevel * 5 + 5;\n        newEnemy.inventory = [];\n        newEnemy.gold = 60 + regionLevel * 5;\n        newEnemy.isDead = false\n        this.addEnemyItems(newEnemy);\n        let text = [];\n        this.setState({\n            currentEnemy: newEnemy,\n            task: \"fight\",\n            step: \"select move\",\n            message: \"You were tricked by a Mimic!\",\n            infoText: text\n        });\n    }\n    selectYesChest = () => {\n        const player = this.state.player;\n        const openCheck = this.randNum(1, 5);\n        if (openCheck !== 1) {\n            const goldNum = this.randNum(10, 30);\n            player.gold += goldNum;\n            player.totalGold += goldNum;\n\n            let text = [];\n            text.push(\"--- RESULTS ---\");\n            text.push(\"Chest contained \" + goldNum + \" gold.\");\n\n            for (let i = 0; i < 2; i++) {\n                const itemNum = this.randNum(0, items1.length)\n                const item = items1[itemNum];\n                this.addItem(this.state.player.inventory, item);\n                text.push(\"You got \" + this.aOrAn(item.name) + \" \" + item.name + \".\");\n            }\n            this.setState({\n                step: \"results\",\n                message: \"You opened it!\",\n                infoText: text\n            });\n        } else {\n            this.mimicEncounter();\n        }\n    }\n    // Combat Functions\n    selectAttack = () => {\n        let player = this.state.player;\n        let enemy = this.state.currentEnemy\n        this.attack(player, enemy);\n        this.enemyTurn(player, enemy);\n    }\n    enemyTurn = (player, enemy) => {\n        setTimeout(() => {\n            if (enemy.hp <= 0) {\n                player.totalKills++;\n                let text = this.state.infoText;\n                text.push(\"You killed \" + enemy.name + \"!\")\n                text.push(\"--- RESULTS ---\")\n                this.setState({\n                    task: \"fight\",\n                    step: \"results\",\n                    message: enemy.name + \" defeated.\",\n                    infoText: text\n                });\n                this.dropGold();\n                this.dropLoot(enemy)\n                this.gainXp(enemy.xp, player);\n                console.log(\"total kills: \" + player.totalKills);\n            } else {\n                this.setState({\n                    step: \"select move\"\n                }, () => this.attack(enemy, player));\n            }\n        }, 1);\n    }\n    selectSpecial = (event) => {\n        const specialCost = event.target.getAttribute(\"data-cost\");\n        const specialName = event.target.value;\n        console.log(\"Special: \" + specialName + \" \" + specialCost);\n        if (specialName === \"Heal\" && this.state.player.hp >= this.state.player.maxHp) {\n            this.setState({\n                message: \"You are already at full health.\"\n            });\n        } else if (specialName === \"Steal\" && !this.state.currentEnemy.inventory.length) {\n            this.setState({\n                message: \"There is nothing to steal.\"\n            });\n        } else {\n            this.special(this.state.player, this.state.currentEnemy, specialName, specialCost);\n            this.enemyTurn(this.state.player, this.state.currentEnemy);\n        }\n    }\n\n    attack = function (attacker, defender) {\n        console.log(attacker.name + \" attacked \" + defender.name)\n        let attackMessage;\n        let damage;\n        let criticalCheck = this.randNum(1, 100);\n        let luckCheck = (attacker.luck - defender.luck) + 10;\n        if (luckCheck > 95) {\n            luckCheck = 95;\n        } else if (luckCheck < 5) {\n            luckCheck = 5;\n        }\n        console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n        if (criticalCheck >= luckCheck) {\n            damage = damage = attacker.strength;\n            attackMessage = attacker.name + \" did \" + damage + \" damage.\";\n        } else {\n            damage = attacker.strength + Math.floor(attacker.strength * 0.25);\n            attackMessage = \"Critical hit! \" + attacker.name + \" did \" + damage + \" damage.\";\n        }\n        defender.hp -= damage;\n        this.atkText(attacker, attackMessage);\n        // attacker.berserkCheck();\n    }\n    special = function (attacker, defender, name, cost) {\n        let attackMessage;\n        let damage;\n        let criticalCheck;\n        let luckCheck;\n        let speedCheck;\n\n        switch (name) {\n            case \"Axe Strike\":\n                criticalCheck = this.randNum(1, 100);\n                luckCheck = (attacker.luck - defender.luck) + 10;\n                if (luckCheck > 95) {\n                    luckCheck = 95;\n                } else if (luckCheck < 5) {\n                    luckCheck = 5;\n                }\n                console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n                if (criticalCheck >= luckCheck) {\n                    damage = attacker.strength + Math.floor(attacker.strength * 0.25);\n                    attackMessage = \"Axe did \" + damage + \" damage.\";\n                } else {\n                    damage = attacker.strength + Math.floor(attacker.strength * 0.5);\n                    attackMessage = \"Critical hit! Axe did \" + damage + \" damage.\";\n                }\n                defender.hp -= damage;\n                attacker.mp -= cost;\n                this.atkText(attacker, attackMessage);\n                // attacker.berserkCheck();\n                break;\n\n            case \"Fireball\":\n                criticalCheck = this.randNum(1, 100);\n                luckCheck = (attacker.luck - defender.luck) + 10;\n                if (luckCheck > 95) {\n                    luckCheck = 95;\n                } else if (luckCheck < 5) {\n                    luckCheck = 5;\n                }\n                console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n                if (criticalCheck >= luckCheck) {\n                    damage = attacker.mana + Math.floor(attacker.mana * 0.25);\n                    attackMessage = \"Fire did \" + damage + \" damage.\";\n                } else {\n                    damage = attacker.mana + Math.floor(attacker.mana * 0.5);\n                    attackMessage = \"Critical hit! Fire did \" + damage + \" damage.\";\n                }\n                defender.hp -= damage;\n                attacker.mp -= cost;\n                this.atkText(attacker, attackMessage);\n\n                // attacker.berserkCheck();\n                break;\n\n            case \"Heal\":\n                criticalCheck = this.randNum(1, 100);\n                luckCheck = (attacker.luck - defender.luck) + 10;\n                if (luckCheck > 95) {\n                    luckCheck = 95;\n                } else if (luckCheck < 5) {\n                    luckCheck = 5;\n                }\n                console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n                if (criticalCheck >= luckCheck) {\n                    damage = Math.floor(attacker.maxHp * 0.75);\n                    attackMessage = attacker.name + \" recovered \" + damage + \" HP.\";\n                } else {\n                    damage = attacker.maxHp;\n                    attackMessage = \"Wow! \" + attacker.name + \" recovered\" + damage + \" HP.\";\n                }\n                attacker.hp += damage;\n                if (attacker.hp > attacker.maxHp) {\n                    attacker.hp = attacker.maxHp;\n                }\n                attacker.mp -= cost;\n                this.atkText(attacker, attackMessage);\n\n                // attacker.berserkCheck();\n                break;\n\n            case \"Dagger Slash\":\n                criticalCheck = this.randNum(1, 100);\n                luckCheck = (attacker.luck - defender.luck) + 10;\n                if (luckCheck > 95) {\n                    luckCheck = 95;\n                } else if (luckCheck < 5) {\n                    luckCheck = 5;\n                }\n                console.log(\"rand/target: \" + criticalCheck + \"/\" + luckCheck)\n                if (criticalCheck >= luckCheck) {\n                    damage = attacker.strength + Math.floor(attacker.strength * 0.25);\n                    attackMessage = \"Dagger did \" + damage + \" damage.\";\n                } else {\n                    damage = attacker.mana + Math.floor(attacker.strength * 0.5);\n                    attackMessage = \"Critical hit! Dagger did \" + damage + \" damage.\";\n                }\n                defender.hp -= damage;\n                attacker.mp -= cost;\n                this.atkText(attacker, attackMessage);\n\n                // attacker.berserkCheck();\n                break;\n\n            case \"Steal\":\n                criticalCheck = this.randNum(1, 100);\n                speedCheck = (attacker.speed - defender.speed) + 60;\n                if (speedCheck > 95) {\n                    speedCheck = 95;\n                } else if (speedCheck < 5) {\n                    speedCheck = 5;\n                }\n                if (criticalCheck <= speedCheck) {\n                    const itemNum = this.randNum(0, defender.inventory.length);\n                    const item = defender.inventory[itemNum];\n                    this.transferItem(defender.inventory, attacker.inventory, item);\n                    this.atkText(attacker, attacker.name + \" stole \" + this.aOrAn(item.name) + \" \" + item.name + \".\");\n                } else {\n                    this.atkText(attacker, attacker.name + \" failed to steal anything.\");\n                }\n\n                attacker.mp -= cost;\n                // attacker.berserkCheck();\n                break;\n\n            default:\n            // code block\n        };\n    }\n\n    gameOverCheck = () => {\n        if (this.state.player.hp <= 0) {\n            let text = this.state.infoText;\n            text.push(this.state.currentEnemy.name + \" killed you.\");\n            text.push(\"--- RESULTS ---\");\n            text.push(\"Monsters Killed: \" + this.state.player.totalKills);\n            text.push(\"Gold Collected: \" + this.state.player.totalGold);\n            text.push(\"Dungeons Completed: \" + this.state.player.totalDungeons);\n            this.setState({\n                message: \"Game over.\",\n                step: \"game over\",\n                infoText: text\n            });\n        }\n    };\n    selectReset = () => {\n        this.changePlayStates(\"title screen\", \"new or load\");\n        this.setState({\n            player: playerDefault,\n            message: \"Start again?\"\n        });\n    }\n    gainXp = (xpNum, player) => {\n        player.xp += xpNum;\n        let text = this.state.infoText;\n        text.push(\"You gained \" + xpNum + \" XP.\");\n        this.setState({\n            player: player,\n            xpResult: xpNum,\n            infoText: text\n        }, () => this.levelUpCheck(this.state.player))\n    };\n    levelUpCheck = (player) => {\n        if (player.xp >= player.nextLevel) {\n            player.level++;\n            player.nextLevel += player.level * 50;\n            player.strength += 2;\n            player.defense += 1;\n            player.speed += 1;\n            player.mana += 2;\n            player.luck += 1;\n            player.maxHp += 5;\n            player.hp = player.maxHp;\n            player.maxMp += 2;\n            player.mp = player.maxMp;\n\n            let text = this.state.infoText;\n            text.push(\"You are now lv. \" + player.level + \"!!!\");\n            if (player.level === 2) {\n                text.push(\"You learned \" + player.special1 + \"!!!!!\");\n            } else if (player.level === 6) {\n                text.push(\"You learned \" + player.special2 + \"!!!!!\");\n            }\n\n            this.setState({\n                player: player,\n                infoText: text\n            });\n            this.levelUpCheck(player);\n        };\n    };\n    selectRun = () => {\n        const player = this.state.player\n        const lostGold = this.randNum(0, Math.floor(player.gold / 2));\n        player.gold -= lostGold;\n        const lostHp = this.randNum(0, 3);\n        player.hp -= lostHp;\n        this.setState({\n            movingForward: false,\n            message: \"You lost \" + lostGold + \" gold and \" + lostHp + \" HP.\",\n        });\n        this.gameOverCheck();\n        this.selectToWild();\n    }\n    dropGold = () => {\n        const amount = this.randNum(0, this.state.currentEnemy.gold);\n        let text = this.state.infoText;\n        text.push(this.state.currentEnemy.name + \" dropped \" + amount + \" gold.\")\n        let player = this.state.player;\n        player.gold = player.gold + amount;\n        player.totalGold = player.totalGold + amount;\n        this.setState({\n            player: player,\n            infoText: text,\n            goldResult: amount\n        });\n    };\n    dropLoot = (enemy) => {\n        const lootCheck = this.randNum(1, 5);\n        if (lootCheck === 1) {\n            if (enemy.inventory.length) {\n                const itemNum = this.randNum(0, enemy.inventory.length);\n                const item = enemy.inventory[itemNum];\n                this.transferItem(enemy.inventory, this.state.player.inventory, item)\n                let text = this.state.infoText;\n                text.push(enemy.name + \" dropped \" + this.aOrAn(item.name) + \" \" + item.name + \".\");\n                this.setState({\n                    infoText: text\n                })\n            } else {\n                console.log(\"enemy has no items\")\n            }\n        }\n    }\n    //town functions\n    render() {\n        const code = \"< / >\"\n        let playerStyle;\n        if (this.state.player.hp > 0) {\n            playerStyle = \"dom-blue-text font1\"\n        } else {\n            playerStyle = \"grey-text font1\"\n        }\n        let playerHpStyle;\n        if (this.state.player.hp > (this.state.player.maxHp * 0.25)) {\n            playerHpStyle = \"dom-blue-text\"\n        } else if (this.state.player.hp > 0) {\n            playerHpStyle = \"red-text\"\n        } else {\n            playerHpStyle = \"grey-text\"\n        }\n        let playerMpStyle;\n        if (this.state.player.hp <= 0) {\n            playerMpStyle = \"grey-text\"\n        } else if (this.state.player.mp <= 0) {\n            playerMpStyle = \"grey-text\"\n        } else if (this.state.player.mp > 0 && this.state.player.mp < (this.state.player.maxMp * 0.25)) {\n            playerMpStyle = \"red-text\"\n        } else {\n            playerMpStyle = \"dom-blue-text\"\n        }\n        let playerXpStyle;\n        if (this.state.player.xp === 0 || this.state.player.hp <= 0) {\n            playerXpStyle = \"grey-text\"\n        } else {\n            playerXpStyle = \"dom-blue-text\"\n        }\n        let playerGoldStyle;\n        if (this.state.player.hp <= 0 || this.state.player.gold === 0) {\n            playerGoldStyle = \"grey-text\"\n        } else if (this.state.player.gold <= 10 && this.state.player.gold > 0) {\n            playerGoldStyle = \"red-text\"\n        } else {\n            playerGoldStyle = \"dom-blue-text\"\n        }\n\n        let enemyStyle;\n        if (this.state.currentEnemy.hp > 0) {\n            enemyStyle = \"dom-green2-text font1\"\n        } else {\n            enemyStyle = \"grey-text font1\"\n        }\n        let enemyHpStyle;\n        if (this.state.currentEnemy.hp > (this.state.currentEnemy.maxMp * 0.25)) {\n            enemyHpStyle = \"dom-green2-text font1\"\n        } else if (this.state.currentEnemy.hp > 0) {\n            enemyHpStyle = \"red-text font1\"\n        } else {\n            enemyHpStyle = \"grey-text font1\"\n        }\n\n        let specialBtnStyle1;\n        if (this.state.player.level < 2) {\n            specialBtnStyle1 = \"hide\"\n        } else if (this.state.player.mp >= this.state.player.special1Cost) {\n            specialBtnStyle1 = \"\"\n        } else {\n            specialBtnStyle1 = \"disabled-div\"\n        }\n\n        let specialBtnStyle2;\n        if (this.state.player.level < 5) {\n            specialBtnStyle2 = \"hide\"\n        } else if (this.state.player.mp >= this.state.player.special2Cost) {\n            specialBtnStyle2 = \"\"\n        } else {\n            specialBtnStyle2 = \"disabled-div\"\n        }\n\n        return (\n            <div>\n                {/* <!-- TOP NAVBAR --> */}\n                <div id=\"top-nav-container\" className=\"navbar-fixed\">\n                    <nav id=\"top-nav\" className=\"nav-wrapper navbar-fixed grey darken-4\">\n\n                        <div className=\"container\">\n                            <a href=\"#!\" className=\"sidenav-trigger left\" data-target=\"side-modal-game\">\n                                <i className=\"material-icons\">menu</i>\n                            </a>\n\n                            <a href=\"/\" className=\"brand-logo\">\n                                <img src={DLogo} id=\"logo-top\" className=\"left valign-wrapper\" alt=\"D Logo\" />\n                            </a>\n                        </div>\n                    </nav>\n                </div>\n\n                {/* <!-- Modal side navbar --> */}\n                <ul id=\"side-modal-game\" className=\"sidenav center-align font1\">\n                    <li>\n                        <a href=\"#Save\" className=\"white-text\">Save</a>\n                    </li>\n                    <li>\n                        <a href=\"#Stats\" className=\"white-text\" onClick={this.handleCheck}>Stats</a>\n                    </li>\n                    <li>\n                        <a className=\"grey-text\" onClick={this.toggleGame.bind(this)}>{code}</a>\n                    </li>\n                </ul>\n                {/* <!-- End NavBar --> */}\n\n                {/* <!-- LEFT MAIN SIDEBAR\t --> */}\n                <ul id=\"side-nav\" className=\"sidenav sidenav-fixed grey darken-4 center-align z-depth-0 font1\">\n                    <li>\n                        <a id=\"logo-side-a\" href=\"\">\n                            <img id=\"logo-side\" src={DLogo} alt=\"D Logo\" />\n                        </a>\n                    </li>\n                    <div className=\"table-of-contents\">\n                        <li>\n                            <a href=\"#Save\" className=\"white-text\">Save</a>\n                        </li>\n                        <li>\n                            <a href=\"#Stats\" className=\"white-text\" onClick={this.handleCheck}>Stats</a>\n                        </li >\n                        <li>\n                            <a className=\"grey-text\" onClick={this.toggleGame.bind(this)}>{code}</a>\n                        </li>\n                    </div>\n                </ul>\n\n                <div id=\"game-container\" >\n                    <div className=\"container white-text fade\">\n                        <div className=\"row\">\n                            <h3 className=\"font2 center-align\">FANTASY RPG</h3>\n                            <p className=\"font1 center-align\">- {this.state.region.name} -</p>\n                            <h5>{this.state.message}</h5>\n                            {this.state.task === \"fight\" ?\n                                <p className={enemyStyle}><i className=\"material-icons left\">adb</i>{this.state.currentEnemy.name}<span className=\"white-text\"> | </span><span className={enemyHpStyle}>HP: {this.state.currentEnemy.hp}/{this.state.currentEnemy.maxHp}</span><span className=\"white-text\"> | </span>ATK: {this.state.currentEnemy.strength}</p>\n                                : null}\n                            {this.state.location !== \"title screen\" ?\n                                <div>\n                                    <p className={playerStyle}>\n                                        <i className=\"material-icons left\">person</i>{this.state.player.name}<span className=\"white-text\"> | </span>\n                                        <span className={playerHpStyle}>HP: {this.state.player.hp}/{this.state.player.maxHp}</span><span className=\"white-text\"> | </span>\n                                        <span className={playerMpStyle}>MP: {this.state.player.mp}/{this.state.player.maxMp}</span><span className=\"white-text\"> | </span>\n                                        <span className={playerXpStyle}>XP: {this.state.player.xp}/{this.state.player.nextLevel}</span><span className=\"white-text\"> | </span>\n                                        <span className={playerGoldStyle}>${this.state.player.gold}</span>\n                                    </p>\n                                </div>\n                                : null}\n                            {this.state.task === \"fight\" || this.state.task === \"chest\" && this.state.step === \"results\" || this.state.step === \"game over\" ?\n                                <div className=\"game-info\">\n                                    {this.state.infoText.map((text, index) => (\n                                        <p key={index}>{text}</p>\n                                    ))}\n                                </div>\n                                : null}\n                            {this.state.location === \"title screen\" && this.state.task === \"new or load\" ?\n                                <div>\n                                    <button className=\"btn btn-flat game-blue-btn font2\" type=\"button\" onClick={this.newGame}>\n                                        New Game\n                                    </button>\n                                    {/* <button className=\"btn btn-flat game-blue-btn font2\" type=\"button\" onClick={this.loadGame}>\n                                        Load Game\n                                    </button> */}\n                                </div>\n                                : this.state.location === \"title screen\" && this.state.task === \"create character\" && this.state.step === \"name\" ?\n                                    <div>\n                                        <form id=\"game-form\" onSubmit={this.handleName}>\n                                            <div className=\"row\">\n                                                <div className=\"input-field col s12\">\n                                                    <input type=\"text\" className=\"form-input\" name=\"inputName\" value={this.state.inputName} onChange={this.handleInputChange} />\n                                                    <label htmlFor=\"inputName\" className=\"font1\">Name</label>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"col m12\">\n                                                    <button\n                                                        className=\"btn btn-flat game-blue-btn font2\"\n                                                        type=\"submit\" name=\"action\" value=\"Send\">Enter</button>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                    : this.state.location === \"title screen\" && this.state.task === \"create character\" && this.state.step === \"race\" ?\n                                        <div>\n                                            <button className=\"btn btn-flat game-choice-btn font2\" value=\"Human\" onClick={this.selectRace}>\n                                                Human\n                                    </button>\n                                            <button className=\"btn btn-flat game-choice-btn font2\" value=\"Elf\" onClick={this.selectRace}>\n                                                Elf\n                                    </button>\n                                            <button className=\"btn btn-flat game-choice-btn font2\" value=\"Dwarf\" onClick={this.selectRace}>\n                                                Dwarf\n                                    </button>\n                                        </div>\n                                        : this.state.location === \"title screen\" && this.state.task === \"create character\" && this.state.step === \"class\" ?\n                                            <div>\n                                                <button className=\"btn btn-flat game-choice-btn font2\" value=\"Warrior\" onClick={this.selectClass}>\n                                                    Warrior\n                                    </button>\n                                                <button className=\"btn btn-flat game-choice-btn font2\" value=\"Mage\" onClick={this.selectClass}>\n                                                    Mage\n                                    </button>\n                                                <button className=\"btn btn-flat game-choice-btn font2\" value=\"Rogue\" onClick={this.selectClass}>\n                                                    Rogue\n                                    </button>\n                                            </div>\n                                            : null}\n\n                            {this.state.location === \"wild\" && this.state.task === \"select where\" && this.state.step === null ?\n                                <div>\n                                    <p>Where to next?</p>\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectExploreWild}>\n                                        Explore\n                                            </button>\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectSafeTripCheck}>\n                                        Go to town\n                                            </button>\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectUseItem}>\n                                        Use Item\n                                            </button>\n                                </div>\n                                : this.state.step === \"use item\" ?\n                                    <div>\n                                        <p>{this.state.subMessage}</p>\n                                        {this.state.player.inventory.map((item, index) => (\n                                            <div key={index}>\n                                                <button value={item.name} data-index={index} data-info={item.info} className=\"btn btn-flat game-item-btn font2\" onMouseOver={this.showItemInfo} onMouseOut={this.showSelectItem} onClick={this.selectItem}>\n                                                    {item.name}\n                                                </button>\n                                                <span className=\"font1 fontSmall\"> x {item.qty}</span>\n                                            </div>\n                                        ))}\n                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                            <i className=\"material-icons left\">arrow_back</i>Back\n                                        </button>\n                                    </div>\n                                    : this.state.location === \"town\" && this.state.task === \"select where\" && this.state.step === null ?\n                                        <div>\n                                            <p>What next?</p>\n                                            <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToInn}>\n                                                Stay at Inn\n                                            </button>\n                                            <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToTavern}>\n                                                Visit Tavern\n                                            </button>\n                                            <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToShop}>\n                                                Go to Shop\n                                            </button>\n                                            <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectUseItem}>\n                                                Use Item\n                                            </button>\n                                            <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectToWild}>\n                                                <i className=\"material-icons left\">arrow_back</i>Leave Town\n                                            </button>\n                                        </div>\n                                        : this.state.location === \"town\" && this.state.task === \"inn\" && this.state.step === \"accept\" ?\n                                            <div>\n                                                <p>{this.state.messageSub}</p>\n                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectYesInn}>\n                                                    Yes\n                                            </button>\n                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNoInn}>\n                                                    No\n                                            </button>\n                                            </div>\n                                            : null\n                            }\n\n                            {this.state.location === \"wild\" && this.state.task === \"select where\" && this.state.step === null && this.state.region.index !== 1 ?\n                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectTravelBackward}>\n                                    <i className=\"material-icons left\">arrow_back</i>Head Back\n                                </button>\n                                : null}\n                            {this.state.location === \"wild\" && this.state.task === \"select where\" && this.state.step === null && this.state.region.index < regions.length ?\n                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectTravelForward}>\n                                    <i className=\"material-icons right\">arrow_forward</i>Travel Onward\n                                </button>\n                                : null}\n                            {this.state.task === \"fight\" && this.state.step === \"select move\" ?\n                                <div>\n                                    <p>What next?</p>\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectAttack}>\n                                        Attack\n                                    </button>\n                                    <div className={specialBtnStyle1}>\n                                        <button className=\"btn btn-flat game-item-btn font2\" value={this.state.player.special1} data-cost={this.state.player.special1Cost} onClick={this.selectSpecial}>\n                                            {this.state.player.special1}\n                                        </button>\n                                        <span className=\"font1 fontSmall\"> - {this.state.player.special1Cost} MP</span>\n                                    </div>\n                                    <div className={specialBtnStyle2}>\n                                        <button className=\"btn btn-flat game-item-btn font2\" value={this.state.player.special2} data-cost={this.state.player.special2Cost} onClick={this.selectSpecial}>\n                                            {this.state.player.special2}\n                                        </button>\n                                        <span className=\"font1 fontSmall\"> - {this.state.player.special2Cost} MP</span>\n                                    </div>\n                                    {/* <button className={specialBtnStyle2} value={this.state.player.special2} data-cost={this.state.player.special2Cost} onClick={this.selectSpecial}>\n                                        {this.state.player.special2}<span className=\"font1 fontSmall\"> - {this.state.player.special2Cost} MP</span>\n                                    </button> */}\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectUseItem}>\n                                        Use Item\n                                            </button>\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectRun}>\n                                        <i className=\"material-icons left\">arrow_back</i>Run\n                                            </button>\n                                </div>\n                                : this.state.task === \"fight\" && this.state.step === \"results\" ?\n                                    <div>\n                                        <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNext}>\n                                            Next\n                                            </button>\n                                    </div>\n                                    : this.state.task === \"chest\" && this.state.step === \"results\" ?\n                                        <div>\n                                            <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNext}>\n                                                Next\n                                            </button>\n                                        </div>\n                                        : this.state.task === \"chest\" && this.state.step === \"accept\" ?\n                                            <div>\n                                                <p>Do you wish to open it?</p>\n                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectYesChest}>\n                                                    Yes\n                                                </button>\n                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectNext}>\n                                                    No\n                                                </button>\n                                            </div>\n                                            : this.state.step === \"game over\" ?\n                                                <button className=\"btn btn-flat game-blue-btn font2\" onClick={this.selectReset}>\n                                                    End\n                                            </button>\n                                                : null}\n                            {this.state.task === \"shop\" && this.state.step === \"buy or sell\" ?\n                                <div>\n                                    <p>What next?</p>\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBuy}>\n                                        Buy\n                                            </button>\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectSell}>\n                                        Sell\n                                            </button>\n                                    <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                        <i className=\"material-icons left\">arrow_back</i>Back\n                                            </button>\n                                </div>\n                                : this.state.task === \"shop\" && this.state.step === \"buy\" ?\n                                    <div>\n                                        <p>{this.state.subMessage}</p>\n                                        {this.state.merchant.map((item, index) => (\n                                            <div key={index}>\n                                                <button value={item.name} data-index={index} data-price={item.buy} className=\"btn btn-flat game-item-btn font2\" onMouseOver={this.showItemPrice} onMouseOut={this.showSelectItem} onClick={this.buyItem}>\n                                                    {item.name}\n                                                </button>\n                                                <span className=\"font1 fontSmall\"> ${item.buy} x {item.qty}</span>\n                                            </div>\n                                        ))}\n                                        <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                            <i className=\"material-icons left\">arrow_back</i>Back\n                                        </button>\n                                    </div>\n                                    : this.state.task === \"shop\" && this.state.step === \"sell\" ?\n                                        <div>\n                                            <p>{this.state.subMessage}</p>\n                                            {this.state.player.inventory.map((item, index) => (\n                                                <div key={index}>\n                                                    <button value={item.name} data-index={index} data-price={item.sell} className=\"btn btn-flat game-item-btn font2\" onMouseOver={this.showItemPrice} onMouseOut={this.showSelectItem} onClick={this.sellItem}>\n                                                        {item.name}\n                                                    </button>\n                                                    <span className=\"font1 fontSmall\"> ${item.sell} x {item.qty}</span>\n                                                </div>\n                                            ))}\n                                            <button className=\"btn btn-flat game-choice-btn font2\" onClick={this.selectBack}>\n                                                <i className=\"material-icons left\">arrow_back</i>Back\n                                        </button>\n                                        </div>\n                                        : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Game;","import React, { Component } from \"react\";\nimport M from 'materialize-css';\nimport Nav from \"./components/Nav\"\nimport Parallax from \"./components/Parallax\"\nimport Portfolio from \"./components/Portfolio\"\nimport About from \"./components/About\"\nimport Contact from \"./components/Contact\"\nimport Footer from \"./components/Footer\"\nimport Game from \"./components/Game\"\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n    playingGame: true\n  };\n\n  componentDidMount() {\n    //Auto initialize all materialize components\n    M.AutoInit();\n  }\n\n  startGame = () => {\n    this.setState({ playingGame: true });\n  }\n\n  endGame = () => {\n    this.setState({ playingGame: false });\n  }\n\n  render() {\n\n\n    return (\n\n      <div className=\"App\">\n\n        <div className=\"main-container\">\n          {this.state.playingGame ?\n            <Game\n              playingGame={this.state.playingGame}\n              endGame={this.endGame}\n            />\n            :\n            <Nav\n              playingGame={this.state.playingGame}\n              startGame={this.startGame}\n            />\n          }\n\n          <Parallax />\n          <Portfolio />\n          <About />\n          <Contact />\n          <Footer />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}